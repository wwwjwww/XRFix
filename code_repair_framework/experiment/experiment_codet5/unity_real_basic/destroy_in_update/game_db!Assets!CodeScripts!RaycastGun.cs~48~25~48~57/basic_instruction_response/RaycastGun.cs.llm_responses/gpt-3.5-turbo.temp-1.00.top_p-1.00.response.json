"{\"id\":\"chatcmpl-B2TrVnREDNctLV1qvb8sJSYrezLUM\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                StartCoroutine(ShootLaser());\\n            }\\n        }\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.SetPosition(0, laserOrigin.position);\\n        Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n        RaycastHit hit;\\n        if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n        {\\n            if (hit.collider.gameObject == Object)\\n            {\\n                audioManager.PlaySFX(audioManager.swordSound);\\n                laserLine.SetPosition(1, hit.point);\\n                audioManager.PlaySFX(audioManager.disappearSound);\\n                destroyObject.Add(hit.collider.gameObject);\\n                Object = null; // Destroyed object\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n        }\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n        foreach (GameObject obj in destroyObject)\\n        {\\n            Destroy(obj);\\n        }\\n        destroyObject.Clear();\\n\\n        if (Object == null)\\n        {\\n            GameOver();\\n        }\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```C#\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                StartCoroutine(ShootLaser());\\n            }\\n        }\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.SetPosition(0, laserOrigin.position);\\n        Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n        RaycastHit hit;\\n        if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n        {\\n            if (hit.collider.gameObject == Object)\\n            {\\n                audioManager.PlaySFX(audioManager.swordSound);\\n                laserLine.SetPosition(1, hit.point);\\n                audioManager.PlaySFX(audioManager.disappearSound);\\n            \\n                Destroy(hit.transform.gameObject);\\n                Object = null; // Destroyed object\\n            \\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n        }\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void GameOver()\\n    {\\n        SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n    }\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"\\nif (isPlayerOnObject)\\n{\\n    fireTimer += Time.deltaTime;\\n    if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n    {\\n        fireTimer = 0;\\n        laserLine.SetPosition(0, laserOrigin.position);\\n        Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n        RaycastHit hit;\\n        if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n        {\\n            if (hit.collider.gameObject == Object)\\n            {\\n                audioManager.PlaySFX(audioManager.swordSound);\\n                laserLine.SetPosition(1, hit.point);\\n                audioManager.PlaySFX(audioManager.disappearSound);\\n                destroyObject.Add(hit.transform.gameObject);\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n            StartCoroutine(ShootLaser());\\n        }\\n        if (Object == null)\\n        {\\n            GameOver();\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    \\n                    // Destroy the object\\n                    destroyObject.Add(hit.collider.gameObject); // Add object to destroy list\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            ShootLaser();\\n        }\\n    }\\n}\\n\\nvoid ShootLaser()\\n{\\n    laserLine.SetPosition(0, laserOrigin.position);\\n    Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n    RaycastHit hit;\\n    if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n    {\\n        if (hit.collider.gameObject == Object)\\n        {\\n            audioManager.PlaySFX(audioManager.swordSound);\\n            laserLine.SetPosition(1, hit.point);\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            Destroy(hit.transform.gameObject);\\n            Object = null; // Destroyed object\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n        else\\n        {\\n            laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739931145,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_0165350fbb\",\"usage\":{\"completion_tokens\":1280,\"prompt_tokens\":552,\"total_tokens\":1832,\"completion_tokens_details\":null,\"prompt_tokens_details\":null}}"
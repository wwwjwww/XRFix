"{\"id\":\"chatcmpl-B1sVCy9Ns4hJOR1lWYAZMCfe2ptIR\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool = new Queue<GameObject>();\\n    public int initialEnemyPoolSize = 5;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n        InitializeEnemyPool();\\n    }\\n\\n    void InitializeEnemyPool() {\\n        for (int i = 0; i < initialEnemyPoolSize; i++) {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Enqueue(enemyObject);\\n        }\\n    }\\n\\n    void SpawnEnemy() {\\n        if (enemyPool.Count > 0) {\\n            GameObject enemyObject = enemyPool.Dequeue();\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n            enemyObject.SetActive(true);\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            SpawnEnemy();\\n        }\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (!isGamerOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     \\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool = new Queue<GameObject>();\\n    public int poolSize = 10;\\n\\n    \\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   \\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);\\n        \\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(enemyPrefab);\\n            obj.SetActive(false);\\n            enemyPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            SpawnEnemy();\\n        }\\n\\n        gameTimer += Time.deltaTime;   \\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed) ;\\n            \\n            if (player.reachedFinishLine == true) { \\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  \\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    \\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n\\n    void SpawnEnemy() {\\n        if(enemyPool.Count > 0) {\\n            GameObject enemyObject = enemyPool.Dequeue();\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n            enemyObject.SetActive(true);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     \\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool;\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   \\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);  \\n\\n        // Initialize enemy pool\\n        enemyPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Enqueue(enemyObject);\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            SpawnEnemy();\\n            enemyPointer += spawnDistanceFromEnemy;\\n        }\\n\\n        gameTimer += Time.deltaTime;   \\n\\n        if (!isGamerOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine) { \\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  \\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  \\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    \\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n\\n    void SpawnEnemy() {\\n        if (enemyPool.Count > 0) {\\n            GameObject enemyObject = enemyPool.Dequeue();\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n            enemyObject.SetActive(true);\\n            enemyPool.Enqueue(enemyObject);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     \\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool = new Queue<GameObject>();\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(enemyPrefab);\\n            obj.SetActive(false);\\n            enemyPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            SpawnEnemy();\\n        }\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n\\n    void SpawnEnemy() {\\n        if (enemyPool.Count > 0) {\\n            GameObject enemyObject = enemyPool.Dequeue();\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n            enemyObject.SetActive(true);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     \\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool;\\n    public int poolSize = 10; // Define pool size\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   \\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);\\n\\n        // Initialize enemy pool\\n        enemyPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Enqueue(enemyObject);\\n        }\\n    }\\n\\n    void Update() {\\n    \\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n\\n            // Use an enemy from the pool instead of instantiating\\n            if(enemyPool.Count > 0) {\\n                GameObject enemyObject = enemyPool.Dequeue();\\n                enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemyObject.SetActive(true);\\n                enemyPool.Enqueue(enemyObject); // Recycle the enemy back to pool\\n            }\\n        }\\n\\n        gameTimer += Time.deltaTime;   \\n\\n        if (!isGamerOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed) ;\\n            \\n            if (player.reachedFinishLine) { \\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  \\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  \\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    \\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739787534,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_b045b4af17\",\"usage\":{\"completion_tokens\":2924,\"prompt_tokens\":669,\"total_tokens\":3593,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
"{\"id\":\"chatcmpl-B1sumOZPKhwoorya7dmlng6ghQDMa\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"public void AttachArrow()\\n{\\n    if (currentArrow == null)\\n    {\\n        currentArrow = Instantiate(arrowPrefab, controler.transform);\\n        currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n        currentArrow.GetComponent<Rigidbody>().isKinematic = true;\\n        hasArrow = true;\\n    }\\n}\\n\\nvoid Start()\\n{\\n    AttachArrow(); // Instantiate arrow at the start to create an object pool\\n}\\n\\nvoid Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else ThrowArrow();\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"public GameObject arrowObjectPool;\\npublic int poolSize = 5;\\nprivate List<GameObject> arrowsList = new List<GameObject>();\\n\\nvoid Start()\\n{\\n    for (int i = 0; i < poolSize; i++)\\n    {\\n        GameObject arrow = Instantiate(arrowPrefab, arrowObjectPool.transform);\\n        arrow.SetActive(false);\\n        arrowsList.Add(arrow);\\n    }\\n}\\n\\nvoid Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else\\n    {\\n        ThrowArrow();\\n    }\\n}\\n\\npublic void AttachArrow()\\n{\\n    foreach (GameObject arrow in arrowsList)\\n    {\\n        if (!arrow.activeInHierarchy)\\n        {\\n            arrow.SetActive(true);\\n            arrow.transform.position = arrowStartPoint.transform.position;\\n            arrow.transform.rotation = arrowStartPoint.transform.rotation;\\n            hasArrow = true;\\n            break;\\n        }\\n    }\\n}\\n\\npublic void ThrowArrow()\\n{\\n    if (hasArrow)\\n    {\\n        foreach (GameObject arrow in arrowsList)\\n        {\\n            if (arrow.activeInHierarchy)\\n            {\\n                arrow.GetComponent<Rigidbody>().isKinematic = false;\\n                arrow.transform.SetParent(null);\\n                arrow.GetComponent<Rigidbody>().AddForce(arrow.transform.forward * 500f);\\n                hasArrow = false;\\n                isAttached = false;\\n                break;\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n\\n    private List<GameObject> arrowPool = new List<GameObject>();\\n    private int poolSize = 5;\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Start()\\n    {\\n        FillArrowPool();\\n    }\\n\\n    void FillArrowPool()\\n    {\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject newArrow = Instantiate(arrowPrefab, controler.transform);\\n            newArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n            newArrow.GetComponent<Rigidbody>().isKinematic = true;\\n            newArrow.SetActive(false);\\n            arrowPool.Add(newArrow);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrowFromPool();\\n            }\\n            else if (isAttached)\\n            {\\n                Fire();\\n            }\\n        }\\n        else\\n        {\\n            ThrowArrow();\\n        }\\n    }\\n\\n    public void AttachArrowFromPool()\\n    {\\n        foreach (GameObject arrow in arrowPool)\\n        {\\n            if (!arrow.activeInHierarchy)\\n            {\\n                currentArrow = arrow;\\n                currentArrow.SetActive(true);\\n                hasArrow = true;\\n                isAttached = false;\\n                break;\\n            }\\n        }\\n    }\\n\\n    private void Fire()\\n    {\\n        // Implement Fire logic here\\n    }\\n\\n    private void ThrowArrow()\\n    {\\n        // Implement ThrowArrow logic here\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"public List<GameObject> arrowPool = new List<GameObject>();\\npublic int poolSize = 5;\\n\\nvoid Start()\\n{\\n    for (int i = 0; i < poolSize; i++)\\n    {\\n        GameObject arrow = Instantiate(arrowPrefab);\\n        arrow.SetActive(false);\\n        arrowPool.Add(arrow);\\n    }\\n}\\n\\nvoid Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                        \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                        \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else \\n    {\\n        ThrowArrow();\\n    }\\n}\\n\\npublic void AttachArrow()\\n{\\n    if (arrowPool.Count > 0)\\n    {\\n        currentArrow = arrowPool[0];\\n        currentArrow.SetActive(true);\\n        currentArrow.transform.position = arrowStartPoint.transform.position;\\n        currentArrow.transform.rotation = arrowStartPoint.transform.rotation;\\n        currentArrow.GetComponent<Rigidbody>().isKinematic = true;\\n        hasArrow = true;\\n        isAttached = true;\\n    }\\n}\\n\\npublic void Fire()\\n{\\n    currentArrow.GetComponent<Rigidbody>().isKinematic = false;\\n    // Apply force to the arrow\\n    // Set currentArrow to null\\n    // Set hasArrow to false\\n    // Set isAttached to false\\n}\\n\\npublic void ThrowArrow()\\n{\\n    if (hasArrow && isAttached)\\n    {\\n        currentArrow.GetComponent<Rigidbody>().isKinematic = false;\\n        // Apply force to the arrow\\n        // Set currentArrow to null\\n        // Set hasArrow to false\\n        // Set isAttached to false\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n    private List<GameObject> arrowPool = new List<GameObject>();\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Start()\\n    {\\n        for (int i = 0; i < 10; i++)\\n        {\\n            GameObject arrow = Instantiate(arrowPrefab);\\n            arrowPool.Add(arrow);\\n            arrow.SetActive(false);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrow();\\n            }\\n            else if (isAttached)\\n            {\\n                Fire();\\n            }\\n        }\\n        else\\n        {\\n            ThrowArrow();\\n        }\\n    }\\n\\n    public void AttachArrow()\\n    {\\n        if (arrowPool.Count > 0)\\n        {\\n            currentArrow = arrowPool[0];\\n            arrowPool.RemoveAt(0);\\n            currentArrow.SetActive(true);\\n            currentArrow.transform.position = controler.transform.position;\\n            currentArrow.transform.rotation = controler.transform.rotation;\\n            hasArrow = true;\\n        }\\n    }\\n\\n    public void ReturnArrow(GameObject arrow)\\n    {\\n        arrow.SetActive(false);\\n        arrowPool.Add(arrow);\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739789120,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_0165350fbb\",\"usage\":{\"completion_tokens\":1749,\"prompt_tokens\":482,\"total_tokens\":2231,\"completion_tokens_details\":null,\"prompt_tokens_details\":null}}"
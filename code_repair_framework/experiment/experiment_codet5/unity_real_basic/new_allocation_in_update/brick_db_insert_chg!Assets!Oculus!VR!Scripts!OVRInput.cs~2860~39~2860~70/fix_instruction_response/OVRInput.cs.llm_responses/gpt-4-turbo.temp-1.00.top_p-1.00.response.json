{
    "id": "chatcmpl-9r0f8SQ8BZvgT8KEcEuVR22ZEGg9G",
    "object": "chat.completion",
    "created": 1722420958,
    "model": "gpt-4",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "```csharp\nOVRPlugin.ControllerState4 state = currentState;\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 1,
            "message": {
                "role": "assistant",
                "content": "```csharp\n            OVRPlugin.ControllerState4 state = currentState;\n\n            for (AxisGPC i = 0; i < AxisGPC.Max; i++)\n            {\n                state.Axis[(int)i] = OVR_GamepadController_GetAxis((int)i);\n            }\n\n            for (ButtonGPC i = 0; i < ButtonGPC.Max; i++)\n            {\n                if (OVR_GamepadController_GetButton((int)i))\n                {\n                    state.Buttons |= (uint)(1 << (int)i);\n                }\n            }\n\n            state.ConnectedControllers = (uint)OVRPlugin.ConnectedController.Gamepad;\n\n            if (state.LIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.LIndexTrigger;\n            if (state.RIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.RIndexTrigger;\n            if (state.LThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.LThumbstickUp;\n            if (state.LThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.LThumbstickDown;\n            if (state.LThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.LThumbstickLeft;\n            if (state.LThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.LThumbstickRight;\n            if (state.RThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.RThumbstickUp;\n            if (state.RThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.RThumbstickDown;\n            if (state.RThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.RThumbstickLeft;\n            if (state.RThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)\n                state.Buttons |= (uint)RawButton.RThumbstickRight;\n\n            previousState = currentState;\n            currentState = state;\n\n            return ((Controller)currentState.ConnectedControllers & controllerType);\n        }\n\n        public override void SetControllerVibration(float frequency, float amplitude)\n        {\n            // Do nothing. Vibration is currently unsupported on Gamepad Controller for Mac\n        }\n\n        public override byte GetBatteryPercentRemaining()\n        {\n            // Always return 100% for now. No battery status is available from Gamepad Controller for Mac\n            return 100;\n        }\n\n        public override void ConfigureButtonMap()\n        {\n            buttonMap.None                     = RawButton.None;\n            buttonMap.One                      = RawButton.A;\n            buttonMap.Two                      = RawButton.B;\n            buttonMap.Three                    = RawButton.X;\n            buttonMap.Four                     = RawButton.Y;\n            buttonMap.Start                    = RawButton.Start;\n            buttonMap.Back                     = RawButton.Back;\n            buttonMap.PrimaryShoulder          = RawButton.LShoulder;\n            buttonMap.PrimaryIndexTrigger      = RawButton.LIndexTrigger;\n            buttonMap.PrimaryHandTrigger       = RawButton.None;\n            buttonMap.PrimaryThumbstick        = RawButton.LThumbstick;\n            buttonMap.PrimaryThumbstickUp      = RawButton.LThumbstickUp;\n            buttonMap.PrimaryThumbstickDown    = RawButton.LThumbstickDown;\n            buttonMap.PrimaryThumbstickLeft    = RawButton.LThumbstickLeft;\n            buttonMap.PrimaryThumbstickRight   = RawButton.LThumbstickRight;\n            buttonMap.PrimaryTouchpad          = RawButton.None;\n            buttonMap.SecondaryShoulder        = RawButton.RShoulder;\n            buttonMap.SecondaryIndexTrigger    = RawButton.RIndexTrigger;\n            buttonMap.SecondaryHandTrigger     = RawButton.None;\n            buttonMap.SecondaryThumbstick      = RawButton.RThumbstick;\n            buttonMap.SecondaryThumbstickUp    = RawButton.RThumbstickUp;\n            buttonMap.SecondaryThumbstickDown  = RawButton.RThumbstickDown;\n            buttonMap.SecondaryThumbstickLeft  = RawButton.RThumbstickLeft;\n            buttonMap.SecondaryThumbstickRight = RawButton.RThumbstickRight;\n            buttonMap.SecondaryTouchpad        = RawButton.None;\n            buttonMap.DpadUp                   = RawButton.DpadUp;\n            buttonMap.DpadDown                 = RawButton.DpadDown;\n            buttonMap.DpadLeft                 = RawButton.DpadLeft;\n            buttonMap.DpadRight                = RawButton.DpadRight;\n            buttonMap.Up                       = RawButton.LThumbstickUp;\n            buttonMap.Down                     = RawButton.LThumbstickDown;\n            buttonMap.Left                     = RawButton.LThumbstickLeft;\n            buttonMap.Right                    = RawButton.LThumbstickRight;\n        }\n\n        public override void ConfigureTouchMap()\n        {\n            touchMap.None                      = RawTouch.None;\n            touchMap.One                       = RawTouch.None;\n            touchMap.Two                       = RawTouch.None;\n            touchMap.Three                     = RawTouch.None;\n            touchMap.Four                      = RawTouch.None;\n            touchMap.PrimaryIndexTrigger       = RawTouch.None;\n            touchMap.PrimaryThumbstick         = RawTouch.None;\n            touchMap.PrimaryThumbRest          = RawTouch.None;\n            touchMap.PrimaryTouchpad           = RawTouch.None;\n            touchMap.SecondaryIndexTrigger     = RawTouch.None;\n            touchMap.SecondaryThumbstick       = RawTouch.None;\n            touchMap.SecondaryThumbRest        = RawTouch.None;\n            touchMap.SecondaryTouchpad         = RawTouch.None;\n        }\n\n        public override void ConfigureNearTouchMap()\n        {\n            nearTouchMap.None                      = RawNearTouch.None;\n            nearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;\n            nearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;\n            nearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;\n            nearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;\n        }\n\n        public override void ConfigureAxis1DMap()\n        {\n            axis1DMap.None                     = RawAxis1D.None;\n            axis1DMap.PrimaryIndexTrigger      = RawAxis1D.LIndexTrigger;\n            axis1DMap.PrimaryHandTrigger       = RawAxis1D.None;\n            axis1DMap.SecondaryIndexTrigger    = RawAxis1D.RIndexTrigger;\n            axis1DMap.SecondaryHandTrigger     = RawAxis1D.None;\n        }\n\n        public override void ConfigureAxis2DMap()\n        {\n            axis2DMap.None                     = RawAxis2D.None;\n            axis2DMap.PrimaryThumbstick        = RawAxis2D.LThumbstick;\n            axis2DMap.PrimaryTouchpad          = RawAxis2D.None;\n            axis2DMap.SecondaryThumbstick      = RawAxis2D.RThumbstick;\n            axis2DMap.SecondaryTouchpad        = RawAxis2D.None;\n        }\n\n        private static extern bool         OVR_GamepadController_Initialize();\n        private static extern bool         OVR_GamepadController_Destroy();\n        private static extern bool         OVR_GamepadController_Update();\n        private static extern float        OVR_GamepadController_GetAxis(int axis);\n        private static extern bool         OVR_GamepadController_GetButton(int button);\n    }\n```"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 2,
            "message": {
                "role": "assistant",
                "content": "```csharp\nOVRPlugin.ControllerState4 state;\n\n\t\t\tstate.ConnectedControllers = (uint)Controller.Gamepad;\n\n\t\t\tstate.Buttons = 0;\n\t\t\tstate.Touches = 0;\n\t\t\tstate.NearTouches = 0;\n\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.A)) state.Buttons |= (uint)RawButton.A;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.B)) state.Buttons |= (uint)RawButton.B;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.X)) state.Buttons |= (uint)RawButton.X;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Y)) state.Buttons |= (uint)RawButton.Y;\n\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Up)) state.Buttons |= (uint)RawButton.DpadUp;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Down)) state.Buttons |= (uint)RawButton.DpadDown;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Left)) state.Buttons |= (uint)RawButton.DpadLeft;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Right)) state.Buttons |= (uint)RawButton.DpadRight;\n\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Start)) state.Buttons |= (uint)RawButton.Start;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Back)) state.Buttons |= (uint)RawButton.Back;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.LStick)) state.Buttons |= (uint)RawButton.LThumbstick;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.RStick)) state.Buttons |= (uint)RawButton.RThumbstick;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.LeftShoulder)) state.Buttons |= (uint)RawButton.LShoulder;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.RightShoulder)) state.Buttons |= (uint)RawButton.RShoulder;\n\n\n\t\t\tstate.LThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.LeftXAxis);\n\t\t\tstate.LThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.LeftYAxis);\n\t\t\tstate.RThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.RightXAxis);\n\t\t\tstate.RThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.RightYAxis);\n\n\t\t\tstate.LIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.LeftTrigger);\n\t\t\tstate.RIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.RightTrigger);\n\n\t\t\tpreviousState = currentState;\n\t\t\tcurrentState = state;\n\n\t\t\treturn (Controller)currentState.ConnectedControllers;\n\t\t}\n\n\t\tpublic override void ConfigureButtonMap()\n\t\t{\n\t\t\tbuttonMap.None                     = RawButton.None;\n\t\t\tbuttonMap.One                      = RawButton.A;\n\t\t\tbuttonMap.Two                      = RawButton.B;\n\t\t\tbuttonMap.Three                    = RawButton.X;\n\t\t\tbuttonMap.Four                     = RawButton.Y;\n\t\t\tbuttonMap.Start                    = RawButton.Start;\n\t\t\tbuttonMap.Back                     = RawButton.Back;\n\t\t\tbuttonMap.PrimaryShoulder          = RawButton.LShoulder;\n\t\t\tbuttonMap.PrimaryIndexTrigger      = RawButton.None;\n\t\t\tbuttonMap.PrimaryHandTrigger       = RawButton.None;\n\t\t\tbuttonMap.PrimaryThumbstick        = RawButton.LThumbstick;\n\t\t\tbuttonMap.PrimaryThumbstickUp      = RawButton.None;\n\t\t\tbuttonMap.PrimaryThumbstickDown    = RawButton.None;\n\t\t\tbuttonMap.PrimaryThumbstickLeft    = RawButton.None;\n\t\t\tbuttonMap.PrimaryThumbstickRight   = RawButton.None;\n\t\t\tbuttonMap.PrimaryTouchpad          = RawButton.None;\n\t\t\tbuttonMap.SecondaryShoulder        = RawButton.RShoulder;\n\t\t\tbuttonMap.SecondaryIndexTrigger    = RawButton.None;\n\t\t\tbuttonMap.SecondaryHandTrigger     = RawButton.None;\n\t\t\tbuttonMap.SecondaryThumbstick      = RawButton.RThumbstick;\n\t\t\tbuttonMap.SecondaryThumbstickUp    = RawButton.None;\n\t\t\tbuttonMap.SecondaryThumbstickDown  = RawButton.None;\n\t\t\tbuttonMap.SecondaryThumbstickLeft  = RawButton.None;\n\t\t\tbuttonMap.SecondaryThumbstickRight = RawButton.None;\n\t\t\tbuttonMap.SecondaryTouchpad        = RawButton.None;\n\t\t\tbuttonMap.DpadUp                   = RawButton.DpadUp;\n\t\t\tbuttonMap.DpadDown                 = RawButton.DpadDown;\n\t\t\tbuttonMap.DpadLeft                 = RawButton.DpadLeft;\n\t\t\tbuttonMap.DpadRight                = RawButton.DpadRight;\n\t\t\tbuttonMap.Up                       = RawButton.None;\n\t\t\tbuttonMap.Down                     = RawButton.None;\n\t\t\tbuttonMap.Left                     = RawButton.None;\n\t\t\tbuttonMap.Right                    = RawButton.None;\n\t\t}\n\n\t\tpublic override void ConfigureTouchMap()\n\t\t{\n\t\t\ttouchMap.None                      = RawTouch.None;\n\t\t\ttouchMap.One                       = RawTouch.None;\n\t\t\ttouchMap.Two                       = RawTouch.None;\n\t\t\ttouchMap.Three                     = RawTouch.None;\n\t\t\ttouchMap.Four                      = RawTouch.None;\n\t\t\ttouchMap.PrimaryIndexTrigger       = RawTouch.None;\n\t\t\ttouchMap.PrimaryThumbstick         = RawTouch.None;\n\t\t\ttouchMap.PrimaryThumbRest          = RawTouch.None;\n\t\t\ttouchMap.PrimaryTouchpad           = RawTouch.None;\n\t\t\ttouchMap.SecondaryIndexTrigger     = RawTouch.None;\n\t\t\ttouchMap.SecondaryThumbstick       = RawTouch.None;\n\t\t\ttouchMap.SecondaryThumbRest        = RawTouch.None;\n\t\t\ttouchMap.SecondaryTouchpad         = RawTouch.None;\n\t\t}\n\n\t\tpublic override void ConfigureNearTouchMap()\n\t\t{\n\t\t\tnearTouchMap.None                      = RawNearTouch.None;\n\t\t\tnearTouchMap.PrimaryIndexTrigger       = RawNearTouch.None;\n\t\t\tnearTouchMap.PrimaryThumbButtons       = RawNearTouch.None;\n\t\t\tnearTouchMap.SecondaryIndexTrigger     = RawNearTouch.None;\n\t\t\tnearTouchMap.SecondaryThumbButtons     = RawNearTouch.None;\n\t\t}\n\n\t\tpublic override void ConfigureAxis1DMap()\n\t\t{\n\t\t\taxis1DMap.None                      = RawAxis1D.None;\n\t\t\taxis1DMap.PrimaryIndexTrigger       = RawAxis1D.None;\n\t\t\taxis1DMap.PrimaryHandTrigger        = RawAxis1D.None;\n\t\t\taxis1DMap.SecondaryIndexTrigger     = RawAxis1D.None;\n\t\t\taxis1DMap.SecondaryHandTrigger      = RawAxis1D.None;\n\t\t}\n\n\t\tpublic override void ConfigureAxis2DMap()\n\t\t{\n\t\t\taxis2DMap.None                      = RawAxis2D.None;\n\t\t\taxis2DMap.PrimaryThumbstick         = RawAxis2D.None;\n\t\t\taxis2DMap.PrimaryTouchpad           = RawAxis2D.None;\n\t\t\taxis2DMap.SecondaryThumbstick       = RawAxis2D.None;\n\t\t\taxis2DMap.SecondaryTouchpad         = RawAxis2D.None;\n\t\t}"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 3,
            "message": {
                "role": "assistant",
                "content": "```csharp\nOVRPlugin.ControllerState4 state = currentState;\nstate.ConnectedControllers = (uint)Controller.Gamepad;\n\nstate.Buttons = 0;\nstate.Touches = 0;\nstate.NearTouches = 0;\nstate.LIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.LeftTrigger);\nstate.RIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.RightTrigger);\nstate.LHandTrigger = 0;\nstate.RHandTrigger = 0;\nstate.LThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.LeftXAxis);\nstate.LThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.LeftYAxis);\nstate.RThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.RightXAxis);\nstate.RThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.RightYAxis);\nstate.LTouchpad.x = 0;\nstate.LTouchpad.y = 0;\nstate.RTouchpad.x = 0;\nstate.RTouchpad.y = 0;\n\nif (OVR_GamepadController_GetButton((int)ButtonGPC.A)) state.Buttons |= (uint)RawButton.A;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.B)) state.Buttons |= (uint)RawButton.B;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.X)) state.Buttons |= (uint)RawButton.X;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Y)) state.Buttons |= (uint)RawButton.Y;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Up)) state.Buttons |= (uint)RawButton.DpadUp;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Down)) state.Buttons |= (uint)RawButton.DpadDown;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Left)) state.Buttons |= (uint)RawButton.DpadLeft;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Right)) state.Buttons |= (uint)RawButton.DpadRight;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Start)) state.Buttons |= (uint)RawButton.Start;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.Back)) state.Buttons |= (uint)RawButton.Back;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.LStick)) state.Buttons |= (uint)RawButton.LThumbstick;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.RStick)) state.Buttons |= (uint)RawButton.RThumbstick;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.LeftShoulder)) state.Buttons |= (uint)RawButton.LShoulder;\nif (OVR_GamepadController_GetButton((int)ButtonGPC.RightShoulder)) state.Buttons |= (uint)RawButton.RShoulder;\n\npreviousState = currentState;\ncurrentState = state;\n\nreturn ((Controller)currentState.ConnectedControllers & controllerType);\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 4,
            "message": {
                "role": "assistant",
                "content": "```csharp\nprivate OVRPlugin.ControllerState4 state = new OVRPlugin.ControllerState4();\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 23412,
        "completion_tokens": 3671,
        "total_tokens": 27083
    },
    "system_fingerprint": "fp_811936bd4f"
}
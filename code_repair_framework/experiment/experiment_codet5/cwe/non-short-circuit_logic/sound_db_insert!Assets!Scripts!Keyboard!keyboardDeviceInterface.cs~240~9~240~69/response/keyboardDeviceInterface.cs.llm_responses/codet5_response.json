{
  "input_code": "  public override void Load(InstrumentData d) {\n    KeyboardData data = d as KeyboardData;\n    base.Load(data);\n\n    output.ID = data.jackOutID;\n    freqoutput.ID = data.freqOutID;\n    ampoutput.ID = data.ampOutID;\n\n    for (int i = 0; i < 3; i++) _adsrInterface.xyHandles[i].setPercent(data.ADSRdata[i]);\n    _adsrInterface.setDefaults = false;\n\n    muteButton.startToggled = data.muted;\n    octaveToggle.setSwitch(data.octaveSwitch);\n\n    if (data.midiInConnection != null & data.midiInConnection != \"\") {\n      midiInButton.startToggled = true;\n      _midiIn.ConnectByName(data.midiInConnection);\n    }\n<BUGS>    if (data.midiOutConnection != null & data.midiOutConnection != \"\") {\n<BUGE>      midiOutButton.startToggled = true;\n      _midiOut.ConnectByName(data.midiOutConnection);\n    }\n\n    sequenceButton.startToggled = data.sequencerEnabled;\n\n    if (data.timelinePresent) {\n      _timeline.SetTimelineData(data.timelineData);\n\n      Vector3 pos = _timeline.heightHandle.transform.localPosition;\n      pos.y = data.timelineHeight;\n      _timeline.heightHandle.transform.localPosition = pos;\n      _timeline.setStartHeight(data.timelineHeight);\n\n      for (int i = 0; i < data.timelineEvents.Length; i++) {\n        _timeline.SpawnTimelineEvent(data.timelineEvents[i].track, data.timelineEvents[i].in_out);\n      }\n    }\n  }\n",
  "model_outputs": [
    {
      "response_id": 1,
      "output": "<FIXS> if (data.midiOutConnection != null & data.midiOutConnection != \"\" && !data.midiOutConnection.equals(\"\")) { <FIXE>"
    },
    {
      "response_id": 2,
      "output": "<FIXS> if (data.midiOutConnection != null && data.midiOutConnection != \"\") { <FIXE>"
    },
    {
      "response_id": 3,
      "output": "<FIXS> PDString midiOutConnection=data.midiOutConnection; if (midiOutConnection != null && !data.midiOutConnection.equals(\"\")) { <FIXE>"
    },
    {
      "response_id": 4,
      "output": "<FIXS> PDString midiOutConnection=data.midiOutConnection; if (midiOutConnection != null && !data.midiOutConnection.equals(\"\")) {iferifer <FIXE>"
    },
    {
      "response_id": 5,
      "output": "<FIXS>omestring[0]=data.midiOutConnection;omestring[1]=data.midiOutConnection; if (data.midiOutConnection != null & data.midiOutConnection != \"\") { <FIXE>"
    }
  ],
  "model_path": "Salesforce/codet5-base",
  "parameters": {
    "max_source_length": 512,
    "max_target_length": 256,
    "beam_size": 10,
    "num_responses": 5,
    "diversity_penalty": 1.0
  }
}
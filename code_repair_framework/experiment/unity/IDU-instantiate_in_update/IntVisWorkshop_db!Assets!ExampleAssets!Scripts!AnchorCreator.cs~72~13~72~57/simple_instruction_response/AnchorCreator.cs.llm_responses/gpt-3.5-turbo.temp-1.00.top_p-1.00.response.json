"{\"id\":\"chatcmpl-B3Ib2JwEeeUHKX9NqamZLD7XoOLBQ\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```c#\\n    private ARRaycastManager m_RaycastManager;\\n    private ARAnchorManager m_AnchorManager;\\n    private ARPlaneManager m_PlaneManager;\\n    private List<ARAnchor> m_AnchorPoints;\\n    \\n    private static List<ARRaycastHit> s_Hits = new List<ARRaycastHit>();\\n    \\n    void Update()\\n    {\\n        if (Input.touchCount == 0)\\n            return;\\n    \\n        var touch = Input.GetTouch(0);\\n        if (touch.phase != TouchPhase.Began)\\n            return;\\n    \\n        if (m_RaycastManager.Raycast(touch.position, s_Hits, TrackableType.PlaneWithinPolygon))\\n        {\\n            var hitPose = s_Hits[0].pose;\\n            var hitTrackableId = s_Hits[0].trackableId;\\n            var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);\\n    \\n            var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);\\n    \\n            if (anchor == null)\\n            {\\n                Debug.Log(\\\"Error creating anchor.\\\");\\n            }\\n            else\\n            {\\n                Instantiate(m_AnchorPrefab, anchor.transform.position, anchor.transform.rotation);\\n                m_AnchorPoints.Add(anchor);\\n            }\\n        }\\n    }\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```c#\\nvoid Update()\\n{\\n    if (Input.touchCount == 0)\\n        return;\\n\\n    var touch = Input.GetTouch(0);\\n    if (touch.phase != TouchPhase.Began)\\n        return;\\n\\n    List<ARRaycastHit> s_Hits = new List<ARRaycastHit>();\\n    if (m_RaycastManager.Raycast(touch.position, s_Hits, TrackableType.PlaneWithinPolygon))\\n    {\\n        var hitPose = s_Hits[0].pose;\\n        var hitTrackableId = s_Hits[0].trackableId;\\n        var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);\\n\\n        var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);\\n        if (anchor == null)\\n        {\\n            Debug.Log(\\\"Error creating anchor.\\\");\\n        }\\n        else\\n        {\\n            m_AnchorPoints.Add(anchor);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    private ARRaycastManager m_RaycastManager;\\n    private ARAnchorManager m_AnchorManager;\\n    private ARPlaneManager m_PlaneManager;\\n    private List<ARAnchor> m_AnchorPoints;\\n\\n    static List<ARRaycastHit> s_Hits = new List<ARRaycastHit>();\\n\\n    void Update()\\n    {\\n\\n        if (Input.touchCount == 0)\\n            return;\\n\\n        var touch = Input.GetTouch(0);\\n        if (touch.phase != TouchPhase.Began)\\n            return;\\n\\n        if (m_RaycastManager.Raycast(touch.position, s_Hits, TrackableType.PlaneWithinPolygon))\\n        {\\n            var hitPose = s_Hits[0].pose;\\n            var hitTrackableId = s_Hits[0].trackableId;\\n            var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);\\n\\n            var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);\\n\\n            if (anchor == null)\\n            {\\n                Debug.Log(\\\"Error creating anchor.\\\");\\n            }\\n            else\\n            {\\n                m_AnchorPoints.Add(anchor);\\n            }\\n        }\\n    }\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n\\n    if (Input.touchCount == 0)\\n        return;\\n\\n    var touch = Input.GetTouch(0);\\n    if (touch.phase != TouchPhase.Began)\\n        return;\\n\\n    List<ARRaycastHit> hits = new List<ARRaycastHit>();\\n    if (m_RaycastManager.Raycast(touch.position, hits, TrackableType.PlaneWithinPolygon))\\n    {\\n        var hitPose = hits[0].pose;\\n        var hitTrackableId = hits[0].trackableId;\\n        var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);\\n\\n        var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);\\n\\n        if (anchor == null)\\n        {\\n            Debug.Log(\\\"Error creating anchor.\\\");\\n        }\\n        else\\n        {\\n            m_AnchorPoints.Add(anchor);\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"var s_Hits = new List<ARRaycastHit>();\\n\\nvoid Update()\\n{\\n    if (Input.touchCount == 0)\\n        return;\\n\\n    var touch = Input.GetTouch(0);\\n    if (touch.phase != TouchPhase.Began)\\n        return;\\n\\n    if (m_RaycastManager.Raycast(touch.position, s_Hits, TrackableType.PlaneWithinPolygon))\\n    {\\n        var hitPose = s_Hits[0].pose;\\n        var hitTrackableId = s_Hits[0].trackableId;\\n        var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);\\n\\n        var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);\\n\\n        if (anchor == null)\\n        {\\n            Debug.Log(\\\"Error creating anchor.\\\");\\n        }\\n        else\\n        {\\n            m_AnchorPoints.Add(anchor);\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740126168,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1038,\"prompt_tokens\":498,\"total_tokens\":1536,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
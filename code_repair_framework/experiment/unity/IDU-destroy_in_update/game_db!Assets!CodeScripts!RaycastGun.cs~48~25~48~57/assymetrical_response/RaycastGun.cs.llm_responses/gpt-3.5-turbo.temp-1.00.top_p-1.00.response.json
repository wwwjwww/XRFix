"{\"id\":\"chatcmpl-B4j08U7eHM3paKlFFem6PngIQGrCU\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid FixedUpdate()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.fixedDeltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    destroyObject.Add(hit.transform.gameObject);\\n                    Object = null; // Destroyed object\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        AddToDestroyObjects(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n                    }\\n                    else\\n                    {\\n                        laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                    }\\n                    StartCoroutine(ShootLaser());\\n                }\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    void AddToDestroyObjects(GameObject obj)\\n    {\\n        destroyObject.Add(obj);\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            ShootLaser();\\n        }\\n    }\\n}\\n\\nvoid ShootLaser()\\n{\\n    laserLine.SetPosition(0, laserOrigin.position);\\n    Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n    RaycastHit hit;\\n    if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n    {\\n        if (hit.collider.gameObject == Object)\\n        {\\n            audioManager.PlaySFX(audioManager.swordSound);\\n            laserLine.SetPosition(1, hit.point);\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            StartCoroutine(DestroyObject(hit.transform.gameObject));\\n        }\\n        else\\n        {\\n            laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n        }\\n    }\\n}\\n\\nIEnumerator DestroyObject(GameObject obj)\\n{\\n    destroyObject.Add(obj); // Add the object to the list of objects to be destroyed\\n    yield return new WaitForSeconds(laserDuration); // Wait for the laser duration\\n    foreach (GameObject go in destroyObject)\\n    {\\n        Destroy(go); // Destroy the objects in the list\\n    }\\n    destroyObject.Clear(); // Clear the list\\n    Object = null; // Destroyed object\\n}\\n\\nvoid GameOver()\\n{\\n    // Add game over logic here\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```C#\\nvoid Start()\\n{\\n    StartCoroutine(ShootObject());\\n}\\n\\nIEnumerator ShootObject()\\n{\\n    while (true)\\n    {\\n        yield return new WaitUntil(() => isPlayerOnObject && Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate);\\n        fireTimer = 0;\\n        ShootRay();\\n    }\\n}\\n\\nvoid ShootRay()\\n{\\n    laserLine.SetPosition(0, laserOrigin.position);\\n    Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n    RaycastHit hit;\\n    if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n    {\\n        if (hit.collider.gameObject == Object)\\n        {\\n            audioManager.PlaySFX(audioManager.swordSound);\\n            laserLine.SetPosition(1, hit.point);\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n\\n            Destroy(hit.transform.gameObject);\\n            Object = null;\\n            \\n            StartCoroutine(ShootLaser());\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n        else\\n        {\\n            laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n        }\\n    }\\n}\\n\\nIEnumerator ShootLaser()\\n{\\n    yield return new WaitForSeconds(laserDuration);\\n    laserLine.SetPosition(0, Vector3.zero);\\n    laserLine.SetPosition(1, Vector3.zero);\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"\\n```c#\\nvoid Update()\\n{\\n    if (isPlayerOnObject && Input.GetKeyDown(KeyCode.K))\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            ShootLaser();\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740465996,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1174,\"prompt_tokens\":572,\"total_tokens\":1746,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
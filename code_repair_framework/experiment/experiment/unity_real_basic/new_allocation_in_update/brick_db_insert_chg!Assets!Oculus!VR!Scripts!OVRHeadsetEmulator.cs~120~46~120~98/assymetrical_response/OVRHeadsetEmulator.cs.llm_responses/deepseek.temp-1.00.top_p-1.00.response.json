{
    "code_repairing_0": "emulatedPitch = ClampAngle(emulatedPitch, -90, 90);\nemulatedRoll = ClampAngle(emulatedRoll, -MAX_ROLL, MAX_ROLL);\n\nmanager.headPoseRelativeOffsetRotation = new Vector3(emulatedRoll, emulatedYaw, emulatedPitch);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (lastFrameEmulationActivated)\n\t\t\t{\n\t\t\t\tCursor.lockState=previousCursorLockMode;\n\t\t\t}\n\t\t}\n\t\tlastFrameEmulationActivated = emulationActivated;\n\t}\n\n\tbool IsEmulationActivated()\n\t{\n\t\tswitch (opMode)\n\t\t{\n\t\tcase OpMode.Off:\n\t\t\treturn false;\n\t\tcase OpMode.EditorOnly:\n\t\t\treturn Application.isEditor;\n\t\tcase OpMode.AlwaysOn:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tDebug.LogError(\"Invalid ove m\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tbool IsTweakingPitch()\n\t{\n\t\tforeach (KeyCode key in pitchKeys)\n\t\t{\n\t\t\tif (Input.GetKey(key))\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfloat ClampAngle(float angle, float min, float max)\n\t{\n\t\tangle = angle % 360;\n\t\tif ((angle >= -360F) && (angle <= 360F))\n\t\t{\n\t\t\treturn Mathf.Clamp(angle, min, max);\n\t\t}\n\n\t\tif (angle < 0)\n\t\t\tangle += 360;\n\n\t\treturn Mathf.Clamp(angle, min, max);\n\t}\n\n}",
    "code_repairing_1": "\u8fd9\u6bb5\u4ee3\u7801\u662f\u7528\u4e8e\u5728Unity\u4e2d\u6a21\u62dfOculus Rift\u5934\u663e\u7684\u4f7f\u7528\u3002\u5b83\u5141\u8bb8\u4f60\u901a\u8fc7\u9f20\u6807\u63a7\u5236\u5934\u663e\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u3002\u8fd9\u4e2a\u64cd\u4f5c\u53d7\u5230\u4e00\u7cfb\u5217\u914d\u7f6e\u7684\u63a7\u5236\uff0c\u5305\u62ec\u5728\u975e\u7f16\u8f91\u5668\u6a21\u5f0f\u4e0b\u662f\u5426\u6fc0\u6d3b\u6a21\u62df\u3001\u662f\u5426\u5728\u91ca\u653e\u65f6\u91cd\u7f6e\u5934\u663e\u4f4d\u7f6e\u3001\u662f\u5426\u4f7f\u7528\u9f20\u6807\u4e2d\u952e\u91cd\u7f6e\u5934\u663e\u4f4d\u7f6e\u3001\u6fc0\u6d3b\u6a21\u62df\u7684\u6309\u952e\u3001\u7528\u4e8e\u6539\u53d8\u65b9\u5411\u7684\u6309\u952e\u7b49\u7b49\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u53ef\u80fd\u7684\u914d\u7f6e\u9879\uff1a\n\n```csharp\n// EditorOnly: \u5728\u7f16\u8f91\u5668\u6a21\u5f0f\u4e0b\u6fc0\u6d3b\u6a21\u62df\uff0cAlwaysOn: \u5728\u4efb\u4f55\u6a21\u5f0f\u4e0b\u90fd\u6fc0\u6d3b\u6a21\u62df\npublic OpMode opMode = OpMode.EditorOnly; \n\n// \u91cd\u7f6e\u5934\u663e\u4f4d\u7f6e\npublic bool resetHmdPoseOnRelease = true; \n\n// \u91cd\u7f6e\u5934\u663e\u4f4d\u7f6e\u7684\u6309\u952e\npublic KeyCode[] activateKeys = new KeyCode[] { KeyCode.LeftControl, KeyCode.RightControl }; \n\n// \u6539\u53d8\u65b9\u5411\u7684\u6309\u952e\npublic KeyCode[] pitchKeys = new KeyCode[] { KeyCode.LeftAlt, KeyCode.RightAlt }; \n```\n\n\u7136\u800c\uff0c\u8fd9\u6bb5\u4ee3\u7801\u88ab\u5207\u5272\u4e86\uff0c\u6240\u4ee5\u6211\u65e0\u6cd5\u770b\u5230\u5b8c\u6574\u7684\u4ee3\u7801\u3002\u4f60\u53ef\u80fd\u9700\u8981\u7ee7\u7eed\u7f16\u5199\u5176\u4ed6\u90e8\u5206\u6765\u8c03\u8bd5\u6216\u4f7f\u7528\u8fd9\u4e2a\u811a\u672c\u3002",
    "code_repairing_2": "\u4f60\u5df2\u7ecf\u5199\u4e86\u4e00\u6bb5Unity C#\u4ee3\u7801\uff0c\u5b83\u6a21\u62df\u4e86Oculus\u5934\u663e\u7684\u59ff\u6001\uff0c\u800c\u4e14\u770b\u8d77\u6765\u4f60\u5728\u5904\u7406\u8f93\u5165\u4e8b\u4ef6\uff08\u9f20\u6807\u6eda\u8f6e\u548c\u9f20\u6807\u79fb\u52a8\uff09\u4ee5\u6a21\u62df\u5934\u663e\u5728\u7a7a\u95f4\u4e2d\u7684\u79fb\u52a8\u3002\n\n\u4f60\u5df2\u7ecf\u5b9a\u4e49\u4e86\u4e00\u7ec4`activateKeys`\u548c`pitchKeys`\u6765\u63a7\u5236\u6a21\u62df\u7684\u542f\u52a8\u548c\u5782\u76f4\u65b9\u5411\u7684\u79fb\u52a8\u3002\u4f60\u8fd8\u8bbe\u5b9a\u4e86\u5404\u79cd\u7f29\u653e\u5e38\u6570`MOUSE_SCALE_*`\u6765\u63a7\u5236\u9f20\u6807\u7684\u79fb\u52a8\u5982\u4f55\u6620\u5c04\u5230\u5934\u663e\u7684\u79fb\u52a8\u3002\n\n\u7136\u800c\uff0c\u4f60\u5e76\u672a\u770b\u5230\u4efb\u4f55\u5173\u4e8e\u5982\u4f55\u89e3\u7801\u8fd9\u4e9b\u8f93\u5165\u4ee5\u53ca\u5982\u4f55\u5e94\u7528\u8fd9\u4e9b\u8f93\u5165\u5230\u5934\u663e\u6a21\u62df\u7684\u5b9e\u73b0\u3002\u4f60\u7684\u4ee3\u7801\u662f\u5728\u54ea\u4e2a\u90e8\u5206\u89e6\u53d1\u5e94\u7528\u4e86\u8f93\u5165\u5417\uff1f\u662f\u5426\u6709\u5173\u4e8e\u5934\u663e\u6a21\u62df\u671f\u671b\u7684\u884c\u4e3a\u63cf\u8ff0\uff1f\n\n\u5982\u679c\u4f60\u80fd\u63d0\u4f9b\u66f4\u591a\u5173\u4e8e\u4f60\u9700\u8981\u6b64\u4ee3\u7801\u5b9e\u73b0\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u6211\u53ef\u4ee5\u5e2e\u4f60\u8fdb\u4e00\u6b65\u5b8c\u5584\u4ee3\u7801\u3002",
    "code_repairing_3": "It appears you've shared a part of a Unity C# code snippet related to emulating an Oculus Rift or other headset. However, there seems to be a missing piece, namely the part of the script after the comment \"//...additional implementation to restrict rotation around X-axis to [-85, 85] would go here...\". \n\nCould you provide this missing piece of the script?",
    "code_repairing_4": "\u770b\u8d77\u6765\u4f60\u7684\u4ee3\u7801\u662f\u5728\u6a21\u62dfOculus HMD\u7684\u8f93\u5165\uff0c\u4f46\u4f60\u7684\u4ee3\u7801\u4e2d\u7f3a\u5c11\u6700\u540e\u7684\u66f4\u65b0\u65cb\u8f6c\u7684\u90e8\u5206\u3002\u4f60\u7684\u66f4\u65b0\u65cb\u8f6c\u4ee3\u7801\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86HMD\u7684\u5b9e\u9645\u65cb\u8f6c\u3002\u4ee5\u4e0b\u662f\u5b8c\u6574\u7684\u66f4\u65b0\u65cb\u8f6c\u90e8\u5206\u7684\u4ee3\u7801\uff1a\n\n```csharp\n// Clamp values outside expected range\nemulatedRoll = Mathf.Clamp(emulatedRoll, -MAX_ROLL, MAX_ROLL);\n\n// Apply changes to the rotation\nmanager.headPoseRelativeOffsetRotation = new Vector3(emulatedRoll, emulatedYaw, emulatedPitch);\n```\n\n\u4ee5\u4e0a\u7684\u4ee3\u7801\u4f1a\u5c06\u8ba1\u7b97\u5f97\u5230\u7684emulatedRoll\u3001emulatedYaw\u548cemulatedPitch\u503c\u5e94\u7528\u5230headPoseRelativeOffsetRotation\u53d8\u91cf\u4e0a\uff0c\u4ece\u800c\u6a21\u62dfHMD\u7684\u5b9e\u9645\u65cb\u8f6c\u3002\n\n\u8fd9\u6bb5\u4ee3\u7801\u5c06\u786e\u4fdd\u6eda\u52a8\u6c38\u8fdc\u4e0d\u4f1a\u8d85\u8fc7\u4f60\u8bbe\u5b9a\u7684MAX_ROLL\u503c\uff0c\u4ece\u800c\u907f\u514d\u4e86\u53ef\u80fd\u53d1\u751f\u7684\u5f02\u5e38\u95ee\u9898\u3002\n\n\u5982\u679c\u4f60\u8fd8\u9700\u8981\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528\u8fd9\u4e9b\u66f4\u6539\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u5728Unity\u7684\u573a\u666f\u89c6\u56fe\u4e2d\u663e\u793a\u5b83\u4eec\uff0c\u4f60\u53ef\u4ee5\u5c06\u66f4\u65b0\u7684\u65cb\u8f6c\u503c\u6253\u5370\u51fa\u6765\uff0c\u4f8b\u5982\uff1a\n\n```csharp\nDebug.Log(manager.headPoseRelativeOffsetRotation);\n```\n\n\u8fd9\u6837\u4f60\u5c31\u80fd\u5728Unity\u7f16\u8f91\u5668\u7684\u63a7\u5236\u53f0\u4e2d\u770b\u5230\u66f4\u65b0\u7684\u65cb\u8f6c\u503c\u4e86\u3002"
}
"{\"id\":\"chatcmpl-BrmnNVxg3KwqfOjtXigdEQlDq6xKy\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ThrowingTutorial : MonoBehaviour\\n{\\n    [Header(\\\"References\\\")]\\n    public Transform cam;\\n    public Transform attackPoint;\\n    public GameObject objectToThrow;\\n    public GameObject armorObject;\\n    public GameObject swordObject;\\n    public GameObject player;\\n\\n    [Header(\\\"Settings\\\")]\\n    public int totalThrows;\\n    public float throwCooldown; \\n\\n    [Header(\\\"Throwing\\\")]\\n    public KeyCode throwKey = KeyCode.K;\\n    public float throwForce;\\n\\n    bool readyToThrow;\\n\\n    private int throwCounter = 0; \\n    private bool inCollider = false; \\n\\n    AudioManager audioManager;\\n\\n    private void Awake()\\n    {\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    private void Start()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void Update()\\n    {\\n        if(inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\\n        {\\n            Throw();\\n        }\\n    }\\n\\n    private void Throw()\\n    {\\n        readyToThrow = false;\\n\\n        if (throwCounter < totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.axeSound);\\n\\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\\n            throwCounter++;\\n        }\\n        else if (throwCounter == totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            armorObject.SetActive(false); \\n            audioManager.PlaySFX(audioManager.appearSound);\\n            swordObject.SetActive(true);\\n        }\\n\\n        totalThrows--;\\n\\n        Invoke(nameof(ResetThrow), throwCooldown);\\n    }\\n\\n    private void ResetThrow()\\n    {\\n        readyToThrow = true;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ThrowingTutorial : MonoBehaviour\\n{\\n    [Header(\\\"References\\\")]\\n    public Transform cam;\\n    public Transform attackPoint;\\n    public GameObject objectToThrow;\\n    public GameObject armorObject;\\n    public GameObject swordObject;\\n    public GameObject player;\\n\\n    [Header(\\\"Settings\\\")]\\n    public int totalThrows;\\n    public float throwCooldown; //after each throw\\n\\n    [Header(\\\"Throwing\\\")]\\n    public KeyCode throwKey = KeyCode.K;\\n    public float throwForce;\\n\\n    bool readyToThrow;\\n\\n    private int throwCounter = 0; // counts throws\\n    private bool inCollider = false; // tracks if player is in collider\\n\\n    AudioManager audioManager;\\n\\n    private void Awake()\\n    {\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    private void Start()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void Update()\\n    {\\n        if(inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\\n        {\\n            readyToThrow = false;\\n            Throw();\\n        }\\n    }\\n\\n    private void Throw()\\n    {\\n        if (throwCounter < totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.axeSound);\\n\\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\\n            throwCounter++;\\n        }\\n        else if (throwCounter == totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            armorObject.SetActive(false); // Make the armor disappear\\n            audioManager.PlaySFX(audioManager.appearSound);\\n            swordObject.SetActive(true); // Make the sword appear\\n        }\\n\\n        totalThrows--;\\n\\n        Invoke(nameof(ResetThrow), throwCooldown);\\n    }\\n\\n    private void ResetThrow()\\n    {\\n        readyToThrow = true;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ThrowingTutorial : MonoBehaviour\\n{\\n    [Header(\\\"References\\\")]\\n    public Transform cam;\\n    public Transform attackPoint;\\n    public GameObject objectToThrow;\\n    public GameObject armorObject;\\n    public GameObject swordObject;\\n    public GameObject player;\\n\\n    [Header(\\\"Settings\\\")]\\n    public int totalThrows;\\n    public float throwCooldown; //after each throw\\n\\n    [Header(\\\"Throwing\\\")]\\n    public KeyCode throwKey = KeyCode.K;\\n    public float throwForce;\\n\\n    bool readyToThrow;\\n\\n    private int throwCounter = 0; // counts throws\\n    private bool inCollider = false; // tracks if player is in collider\\n\\n    AudioManager audioManager;\\n\\n    private void Awake()\\n    {\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    private void Start()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void Update()\\n    {\\n        if (inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\\n        {\\n            Throw();\\n        }\\n    }\\n\\n    private void Throw()\\n    {\\n        readyToThrow = false;\\n\\n        if (throwCounter < totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.axeSound);\\n\\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\\n            throwCounter++;\\n\\n            Invoke(nameof(ResetThrow), throwCooldown);\\n        }\\n        else if (throwCounter == totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            armorObject.SetActive(false); // Make the armor disappear\\n            audioManager.PlaySFX(audioManager.appearSound);\\n            swordObject.SetActive(true); // Make the sword appear\\n        }\\n    }\\n\\n    private void ResetThrow()\\n    {\\n        readyToThrow = true;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ThrowingTutorial : MonoBehaviour\\n{\\n    [Header(\\\"References\\\")]\\n    public Transform cam;\\n    public Transform attackPoint;\\n    public GameObject objectToThrow;\\n    public GameObject armorObject;\\n    public GameObject swordObject;\\n    public GameObject player;\\n\\n    [Header(\\\"Settings\\\")]\\n    public int totalThrows;\\n    public float throwCooldown;\\n\\n    [Header(\\\"Throwing\\\")]\\n    public KeyCode throwKey = KeyCode.K;\\n    public float throwForce;\\n\\n    bool readyToThrow;\\n\\n    private int throwCounter = 0;\\n    private bool inCollider = false;\\n\\n    AudioManager audioManager;\\n\\n    private void Awake()\\n    {\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    private void Start()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void Update()\\n    {\\n        if (inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\\n        {\\n            StartCoroutine(Throw());\\n        }\\n    }\\n\\n    private IEnumerator Throw()\\n    {\\n        readyToThrow = false;\\n\\n        if (throwCounter < totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.axeSound);\\n\\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\\n            throwCounter++;\\n        }\\n        else if (throwCounter == totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            armorObject.SetActive(false);\\n            audioManager.PlaySFX(audioManager.appearSound);\\n            swordObject.SetActive(true);\\n        }\\n\\n        totalThrows--;\\n\\n        yield return new WaitForSeconds(throwCooldown);\\n        ResetThrow();\\n    }\\n\\n    private void ResetThrow()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void OnTriggerEnter(Collider other)\\n    {\\n        if (other.gameObject == player)\\n        {\\n            inCollider = true;\\n        }\\n    }\\n\\n    private void OnTriggerExit(Collider other)\\n    {\\n        if (other.gameObject == player)\\n        {\\n            inCollider = false;\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ThrowingTutorial : MonoBehaviour\\n{\\n    [Header(\\\"References\\\")]\\n    public Transform cam;\\n    public Transform attackPoint;\\n    public GameObject objectToThrow;\\n    public GameObject armorObject;\\n    public GameObject swordObject;\\n    public GameObject player;\\n\\n    [Header(\\\"Settings\\\")]\\n    public int totalThrows;\\n    public float throwCooldown; //after each throw\\n\\n    [Header(\\\"Throwing\\\")]\\n    public KeyCode throwKey = KeyCode.K;\\n    public float throwForce;\\n\\n    bool readyToThrow;\\n\\n    private int throwCounter = 0; // counts throws\\n    private bool inCollider = false; // tracks if player is in collider\\n\\n    AudioManager audioManager;\\n\\n    private void Awake()\\n    {\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    private void Start()\\n    {\\n        readyToThrow = true;\\n    }\\n\\n    private void Update()\\n    {\\n        if (inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\\n        {\\n            StartCoroutine(Throw());\\n        }\\n    }\\n\\n    private IEnumerator Throw()\\n    {\\n        readyToThrow = false;\\n\\n        if (throwCounter < totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.axeSound);\\n\\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\\n            throwCounter++;\\n        }\\n        else if (throwCounter == totalThrows)\\n        {\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            armorObject.SetActive(false); // Make the armor disappear\\n            audioManager.PlaySFX(audioManager.appearSound);\\n            swordObject.SetActive(true); // Make the sword appear\\n        }\\n\\n        totalThrows--;\\n\\n        yield return new WaitForSeconds(throwCooldown);\\n        readyToThrow = true;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752158653,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":2171,\"prompt_tokens\":894,\"total_tokens\":3065,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
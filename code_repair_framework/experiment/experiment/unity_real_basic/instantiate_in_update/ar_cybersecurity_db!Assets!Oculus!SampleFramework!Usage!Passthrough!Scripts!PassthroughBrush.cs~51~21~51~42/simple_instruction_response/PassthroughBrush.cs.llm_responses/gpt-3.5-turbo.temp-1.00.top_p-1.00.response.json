"{\"id\":\"chatcmpl-B3IZOMa264V7x3AFjqo2ShBFh1zOE\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.Get(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = Instantiate(lineSegmentPrefab, inkPos, Quaternion.identity);\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = Instantiate(lineSegmentPrefab, inkPos, Quaternion.identity);\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = Instantiate(lineSegmentPrefab, inkPos, Quaternion.identity);\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n   if (!(controllerHand.Equals(OVRInput.Controller.LTouch) || controllerHand.Equals(OVRInput.Controller.RTouch)))\\n   {\\n       return;\\n   }\\n\\n   Vector3 tipPosition = transform.position;\\n   switch (brushStatus)\\n   {\\n       case BrushState.Idle:\\n           if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n           {\\n               UndoInkLine();\\n           }\\n\\n           if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n           {\\n               StartLine(tipPosition);\\n               brushStatus = BrushState.Inking;\\n           }\\n\\n           break;\\n       case BrushState.Inking:\\n\\n           UpdateLine(tipPosition);\\n           if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n           {\\n               brushStatus = BrushState.Idle;\\n           }\\n\\n           break;\\n   }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n   GameObject newLine = Instantiate(lineSegmentPrefab, inkPos, Quaternion.identity);\\n   currentLineSegment = newLine.GetComponent<LineRenderer>();\\n   currentLineSegment.positionCount = 1;\\n   currentLineSegment.SetPosition(0, inkPos);\\n   strokeWidth = currentLineSegment.startWidth;\\n   strokeLength = 0.0f;\\n   inkPositions.Clear();\\n   inkPositions.Add(inkPos);\\n   newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = Instantiate(lineSegmentPrefab, inkPos, Quaternion.identity);\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740126066,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1460,\"prompt_tokens\":632,\"total_tokens\":2092,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
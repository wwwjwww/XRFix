"{\"id\":\"chatcmpl-B2UG9yIkijjH5MdmPHSACpVSAnW2D\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> spawnedEnemies = new List<GameObject>(); // List to keep track of spawned enemies\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n        StartCoroutine(SpawnEnemies()); // Start the coroutine for spawning enemies\\n    }\\n\\n    void Update() {\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n\\n    }\\n\\n    private IEnumerator SpawnEnemies() {\\n        while (!isGamerOver) {\\n            if (enemyPointer < player.cameraRig.transform.position.z) {\\n                enemyPointer += spawnDistanceFromEnemy;\\n\\n                GameObject enemyObject = Instantiate(enemyPrefab);\\n                enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n\\n                spawnedEnemies.Add(enemyObject); // Track the spawned enemy if needed\\n            }\\n\\n            yield return new WaitForSeconds(1f); // Adjust the delay as needed to control spawn rate\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     \\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGameOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemies = new List<GameObject>();\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n        enemyPointer = player.cameraRig.transform.position.z;\\n    }\\n\\n    void Update() {\\n        HandleEnemySpawning();\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (!isGameOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine) {\\n                isGameOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;\\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n\\n    void HandleEnemySpawning() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemies.Add(enemyObject);\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n        }\\n    }\\n\\n    void OnDestroy() {\\n        foreach (var enemy in enemies) {\\n            if (enemy != null) {\\n                Destroy(enemy);\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     // Calculator for distance of player to enemy\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemies = new List<GameObject>();\\n    private float nextSpawnZ;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   // Import the Finish Line game object \\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);  // Location to place the finish line object\\n\\n        nextSpawnZ = player.cameraRig.transform.position.z + spawnDistanceFromPlayer;\\n    }\\n\\n    void Update() {\\n        while (enemyPointer < nextSpawnZ && !isGamerOver) {\\n            SpawnEnemy();\\n            enemyPointer += spawnDistanceFromEnemy;\\n        }\\n\\n        gameTimer += Time.deltaTime;   // Increment the game timer \\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) { // Change Boolean when player hits finish line and save the final time and score\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  // What to do when the player hits the finish line\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;\\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    // Gamer restart logic\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n\\n    private void SpawnEnemy() {\\n        GameObject enemyObject = Instantiate(enemyPrefab);\\n        enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), nextSpawnZ);\\n        enemies.Add(enemyObject);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     // Calculator for distance of player to enemy\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   // Import the Finish Line game object \\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);  // Location to place the finish line object\\n        InvokeRepeating(nameof(SpawnEnemy), 0f, spawnDistanceFromEnemy / player.speed);\\n    }\\n\\n    void SpawnEnemy() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n        }\\n    }\\n\\n    void Update() {\\n        gameTimer += Time.deltaTime;   // Increment the game timer\\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed) ;\\n\\n            if (player.reachedFinishLine == true) { // Change Boolean when player hits finish line and save the final time and score\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n                CancelInvoke(nameof(SpawnEnemy));\\n            }\\n        } else {  // What to do when the player hits the finish line\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    // Gamer restart logic\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemies = new List<GameObject>();\\n    private bool spawnEnemyFlag = false;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n        StartCoroutine(SpawnEnemies()); // Start enemy spawning coroutine\\n    }\\n\\n    void Update() {\\n        gameTimer += Time.deltaTime;\\n\\n        if (!isGamerOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; \\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            if (!spawnEnemyFlag) {\\n                spawnEnemyFlag = true;\\n            }\\n        } else {\\n            spawnEnemyFlag = false;\\n        }\\n    }\\n\\n    IEnumerator SpawnEnemies() {\\n        while (true) {\\n            if (spawnEnemyFlag) {\\n                GameObject enemyObject = Instantiate(enemyPrefab);\\n                enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemyPointer += spawnDistanceFromEnemy;\\n            }\\n\\n            yield return new WaitForSeconds(1f); // Control spawn frequency as needed\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739932673,\"model\":\"gpt-4o\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_b045b4af17\",\"usage\":{\"completion_tokens\":2853,\"prompt_tokens\":714,\"total_tokens\":3567,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
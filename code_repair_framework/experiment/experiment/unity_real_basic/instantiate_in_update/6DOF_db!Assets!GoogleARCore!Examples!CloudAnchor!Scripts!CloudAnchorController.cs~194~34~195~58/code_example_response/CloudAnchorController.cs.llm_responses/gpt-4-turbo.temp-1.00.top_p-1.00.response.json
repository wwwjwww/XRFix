"{\"id\":\"chatcmpl-BrmgxvzZhQFdNOwAUq0IetT8mLWVM\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n        public RoomSharingServer RoomSharingServer;\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n        public GameObject ARCoreRoot;\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n        public GameObject ARKitRoot;\\n        public Camera ARKitFirstPersonCamera;\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n        private const float k_ModelRotation = 180.0f;\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n        private bool m_IsQuitting = false;\\n        private Component m_LastPlacedAnchor = null;\\n        private XPAnchor m_LastResolvedAnchor = null;\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n        private int m_CurrentRoom;\\n\\n        private GameObject m_CurrentAndyObject = null;\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y, TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                }\\n            }\\n\\n            if (m_LastPlacedAnchor != null && m_CurrentAndyObject == null)\\n            {\\n                m_CurrentAndyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position, m_LastPlacedAnchor.transform.rotation);\\n                m_CurrentAndyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n                m_CurrentAndyObject.transform.parent = m_LastPlacedAnchor.transform;\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n\\n        private GameObject _GetAndyPrefab()\\n        {\\n            return Application.platform != RuntimePlatform.IPhonePlayer ? ARCoreAndyAndroidPrefab : ARKitAndyAndroidPrefab;\\n        }\\n\\n        private void _ResetStatus()\\n        {\\n            // Implementation for resetting status\\n        }\\n\\n        private void _UpdateApplicationLifecycle()\\n        {\\n            // Implementation for updating application lifecycle\\n        }\\n\\n        private void _HostLastPlacedAnchor()\\n        {\\n            // Implementation for hosting last placed anchor\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n\\n\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n\\n\\n\\n\\n        public RoomSharingServer RoomSharingServer;\\n\\n\\n\\n\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n\\n\\n\\n\\n        public GameObject ARCoreRoot;\\n\\n\\n\\n\\n\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n\\n\\n\\n\\n        public GameObject ARKitRoot;\\n\\n\\n\\n\\n        public Camera ARKitFirstPersonCamera;\\n\\n\\n\\n\\n\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n\\n\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n\\n\\n\\n\\n        private const float k_ModelRotation = 180.0f;\\n\\n\\n\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n\\n\\n\\n\\n        private bool m_IsQuitting = false;\\n\\n\\n\\n\\n        private Component m_LastPlacedAnchor = null;\\n\\n\\n\\n\\n        private XPAnchor m_LastResolvedAnchor = null;\\n\\n\\n\\n\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n\\n\\n\\n\\n        private int m_CurrentRoom;\\n\\n\\n\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n\\n\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n        }\\n\\n\\n\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode == ApplicationMode.Hosting && m_LastPlacedAnchor == null)\\n            {\\n                HandleTouchInput();\\n            }\\n        }\\n\\n        private void HandleTouchInput()\\n        {\\n            if (Input.touchCount < 1)\\n            {\\n                return;\\n            }\\n\\n            Touch touch = Input.GetTouch(0);\\n\\n            if (touch.phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                    InstantiateAndy();\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                    InstantiateAndy();\\n                }\\n            }\\n        }\\n\\n        private void InstantiateAndy()\\n        {\\n            var andyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position,\\n                m_LastPlacedAnchor.transform.rotation);\\n\\n            andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n\\n            andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n\\n            _HostLastPlacedAnchor();\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n\\n\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n\\n\\n\\n\\n        public RoomSharingServer RoomSharingServer;\\n\\n\\n\\n\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n\\n\\n\\n\\n        public GameObject ARCoreRoot;\\n\\n\\n\\n\\n\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n\\n\\n\\n\\n        public GameObject ARKitRoot;\\n\\n\\n\\n\\n        public Camera ARKitFirstPersonCamera;\\n\\n\\n\\n\\n\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n\\n\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n\\n\\n\\n\\n        private const float k_ModelRotation = 180.0f;\\n\\n\\n\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n\\n\\n\\n\\n        private bool m_IsQuitting = false;\\n\\n\\n\\n\\n        private Component m_LastPlacedAnchor = null;\\n\\n\\n\\n\\n        private XPAnchor m_LastResolvedAnchor = null;\\n\\n\\n\\n\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n\\n\\n\\n\\n        private int m_CurrentRoom;\\n\\n\\n\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n\\n\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n        }\\n\\n        private void CreateAndPlaceAndyObject()\\n        {\\n            if (m_LastPlacedAnchor == null) return;\\n\\n            var andyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position, m_LastPlacedAnchor.transform.rotation);\\n            andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n            andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n\\n            _HostLastPlacedAnchor();\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y, TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                    CreateAndPlaceAndyObject();\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                    CreateAndPlaceAndyObject();\\n                }\\n            }\\n        }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n        public RoomSharingServer RoomSharingServer;\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n        public GameObject ARCoreRoot;\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n        public GameObject ARKitRoot;\\n        public Camera ARKitFirstPersonCamera;\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n        private const float k_ModelRotation = 180.0f;\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n        private bool m_IsQuitting = false;\\n        private Component m_LastPlacedAnchor = null;\\n        private XPAnchor m_LastResolvedAnchor = null;\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n        private int m_CurrentRoom;\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n        }\\n\\n        private void PlaceRoadObject()\\n        {\\n            if (m_LastPlacedAnchor == null)\\n            {\\n                return;\\n            }\\n\\n            var andyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position,\\n                m_LastPlacedAnchor.transform.rotation);\\n\\n            andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n            andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n\\n            _HostLastPlacedAnchor();\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y, \\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                    PlaceRoadObject();\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                    PlaceRoadObject();\\n                }\\n            }\\n        }\\n\\n        // Add other methods like _GetAndyPrefab, _ResetStatus, _UpdateApplicationLifecycle, _HostLastPlacedAnchor, etc.\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n        public RoomSharingServer RoomSharingServer;\\n\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n        public GameObject ARCoreRoot;\\n        \\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n        public GameObject ARKitRoot;\\n\\n        public Camera ARKitFirstPersonCamera;\\n\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n\\n        private const float k_ModelRotation = 180.0f;\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n\\n        private bool m_IsQuitting = false;\\n\\n        private Component m_LastPlacedAnchor = null;\\n\\n        private XPAnchor m_LastResolvedAnchor = null;\\n\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n\\n        private int m_CurrentRoom;\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                    _InstantiateAndHost();\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                    _InstantiateAndHost();\\n                }\\n            }\\n        }\\n\\n        private void _InstantiateAndHost()\\n        {\\n            if (m_LastPlacedAnchor != null)\\n            {\\n                var andyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position,\\n                    m_LastPlacedAnchor.transform.rotation);\\n\\n                andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n\\n                andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n\\n        private GameObject _GetAndyPrefab()\\n        {\\n            return Application.platform != RuntimePlatform.IPhonePlayer\\n                ? ARCoreAndyAndroidPrefab\\n                : ARKitAndyAndroidPrefab;\\n        }\\n\\n        private void _ResetStatus()\\n        {\\n            // Reset status implementation\\n        }\\n\\n        private void _UpdateApplicationLifecycle()\\n        {\\n            // Application lifecycle management implementation\\n        }\\n\\n        private void _HostLastPlacedAnchor()\\n        {\\n            // Hosting anchor implementation\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752158255,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":3524,\"prompt_tokens\":1138,\"total_tokens\":4662,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
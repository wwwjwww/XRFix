"{\"id\":\"chatcmpl-Brn2t2kOp4HMz6OEnwS056B4PLNdm\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing Unity.XR.CoreUtils;\\nusing UnityEngine;\\nusing System;\\n\\npublic class Targets : MonoBehaviour\\n{\\n    public GameObject target;\\n    public string level; // Use string instead of String\\n    public float spawnInterval = 3f; // Seconds between spawns\\n    public int maxTargets = 10; // Max targets allowed in scene\\n\\n    private float spawnTimer = 0f;\\n    private float spawnRange = 5f; // Range for spawning\\n    private List<GameObject> targetPool = new List<GameObject>();\\n    private int initialPoolSize = 10;\\n\\n    void Start()\\n    {\\n        level = PlayerPrefs.GetString(\\\"level\\\"); // Default to level 1 (\\\"easy\\\")\\n        InitializePool(initialPoolSize);\\n    }\\n\\n    void Update()\\n    {\\n        spawnTimer += Time.deltaTime;\\n\\n        if (spawnTimer >= spawnInterval && GameObject.FindGameObjectsWithTag(\\\"Target\\\").Length < maxTargets)\\n        {\\n            SpawnTarget();\\n            spawnTimer = 0f; // Reset the timer\\n        }\\n    }\\n\\n    void InitializePool(int poolSize)\\n    {\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = CreateNewTarget();\\n            obj.SetActive(false);\\n            targetPool.Add(obj);\\n        }\\n    }\\n\\n    GameObject GetPooledObject()\\n    {\\n        for (int i = 0; i < targetPool.Count; i++)\\n        {\\n            if (!targetPool[i].activeInHierarchy)\\n            {\\n                return targetPool[i];\\n            }\\n        }\\n\\n        GameObject obj = CreateNewTarget();\\n        obj.SetActive(false);\\n        targetPool.Add(obj);\\n        Debug.LogWarning(\\\"Expanded target pool. Consider increasing initial pool size.\\\");\\n        return obj;\\n    }\\n\\n    private GameObject CreateNewTarget()\\n    {\\n        GameObject newTarget = Instantiate(target);\\n        newTarget.tag = \\\"Target\\\";\\n        newTarget.GetComponent<Targets_movements>().level = level;\\n        return newTarget;\\n    }\\n\\n    void SpawnTarget()\\n    {\\n        Vector3 spawnPosition = new Vector3(\\n            UnityEngine.Random.Range(-spawnRange, spawnRange),  // Random x position\\n            UnityEngine.Random.Range(1f, 5f),       // Random y position between 1 and 5\\n            0);                                     // z axis is 0 for 2D\\n\\n        GameObject targetObj = GetPooledObject();\\n        targetObj.transform.position = spawnPosition;\\n        targetObj.SetActive(true);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing Unity.XR.CoreUtils;\\nusing UnityEngine;\\nusing System;\\n\\npublic class Targets : MonoBehaviour\\n{\\n    public GameObject target;\\n    public String level; \\n    public float spawnInterval = 3f; \\n    public int maxTargets = 10;\\n\\n    private float spawnTimer = 0f;\\n    private float spawnRange = 5f; \\n    private List<GameObject> targetPool;\\n    private int poolSize = 20; \\n\\n    void Start()\\n    {\\n        level = PlayerPrefs.GetString(\\\"level\\\");\\n        InitializeTargetPool();\\n    }\\n\\n    void Update()\\n    {\\n        spawnTimer += Time.deltaTime;\\n\\n        if (spawnTimer >= spawnInterval && GameObject.FindGameObjectsWithTag(\\\"Target\\\").Length < maxTargets)\\n        {\\n            SpawnTarget();\\n            spawnTimer = 0f;\\n        }\\n    }\\n\\n    private void InitializeTargetPool()\\n    {\\n        targetPool = new List<GameObject>();\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = Instantiate(target);\\n            obj.SetActive(false);\\n            targetPool.Add(obj);\\n        }\\n    }\\n\\n    private GameObject GetPooledTarget()\\n    {\\n        foreach (GameObject obj in targetPool)\\n        {\\n            if (!obj.activeInHierarchy)\\n            {\\n                return obj;\\n            }\\n        }\\n        \\n        // Expand the pool if needed\\n        GameObject extraObj = Instantiate(target);\\n        extraObj.SetActive(false);\\n        targetPool.Add(extraObj);\\n        Debug.LogWarning(\\\"Expanded target pool. Consider increasing initial pool size.\\\");\\n        return extraObj;\\n    }\\n\\n    private void SpawnTarget()\\n    {\\n        Vector3 spawnPosition = new Vector3(\\n            UnityEngine.Random.Range(-spawnRange, spawnRange),  \\n            UnityEngine.Random.Range(1f, 5f),       \\n            0);                                    \\n        \\n        GameObject newTarget = GetPooledTarget();\\n        newTarget.transform.position = spawnPosition;\\n        newTarget.transform.rotation = Quaternion.identity;\\n        newTarget.SetActive(true);\\n\\n        newTarget.tag = \\\"Target\\\";\\n        newTarget.GetComponent<Targets_movements>().level = level;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class Targets : MonoBehaviour\\n{\\n    public GameObject target;\\n    public float spawnInterval = 3f; // Seconds between spawns\\n    public int maxTargets = 10; // Max targets allowed in scene\\n    public int poolSize = 10; // Pool size for targets\\n\\n    private float spawnTimer = 0f;\\n    private float spawnRange = 5f; // Range for spawning\\n    private List<GameObject> targetPool;\\n\\n    void Start()\\n    {\\n        targetPool = new List<GameObject>();\\n\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = Instantiate(target);\\n            obj.SetActive(false);\\n            targetPool.Add(obj);\\n            obj.tag = \\\"Target\\\";\\n        }\\n\\n        string level = PlayerPrefs.GetString(\\\"level\\\", \\\"easy\\\");\\n\\n        foreach (GameObject obj in targetPool)\\n        {\\n            obj.GetComponent<Targets_movements>().level = level;\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        spawnTimer += Time.deltaTime;\\n\\n        if (spawnTimer >= spawnInterval && GameObject.FindGameObjectsWithTag(\\\"Target\\\").Length < maxTargets)\\n        {\\n            SpawnTarget();\\n            spawnTimer = 0f; // Reset the timer\\n        }\\n    }\\n\\n    void SpawnTarget()\\n    {\\n        for (int i = 0; i < targetPool.Count; i++)\\n        {\\n            if (!targetPool[i].activeInHierarchy)\\n            {\\n                Vector3 spawnPosition = new Vector3(\\n                    UnityEngine.Random.Range(-spawnRange, spawnRange),  // Random x position\\n                    UnityEngine.Random.Range(1f, 5f),       // Random y position between 1 and 5\\n                    0);                                     // z axis is 0 for 2D\\n\\n                targetPool[i].transform.position = spawnPosition;\\n                targetPool[i].SetActive(true);\\n                break;\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing Unity.XR.CoreUtils;\\nusing UnityEngine;\\nusing System;\\n\\npublic class Targets : MonoBehaviour\\n{\\n    public GameObject target;\\n    public string level; // Integer representing the difficulty level\\n    public float spawnInterval = 3f; // Seconds between spawns\\n    public int maxTargets = 10; // Max targets allowed in scene\\n\\n    private float spawnTimer = 0f;\\n    private float spawnRange = 5f; // Range for spawning\\n    private Queue<GameObject> targetPool;\\n    public int poolSize = 20; // Initial pool size\\n\\n    void Start()\\n    {\\n        level = PlayerPrefs.GetString(\\\"level\\\");\\n\\n        // Initialize the object pool\\n        targetPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = Instantiate(target);\\n            obj.SetActive(false);\\n            targetPool.Enqueue(obj);\\n        }\\n\\n        // Start the spawn coroutine\\n        StartCoroutine(SpawnCoroutine());\\n    }\\n\\n    IEnumerator SpawnCoroutine()\\n    {\\n        while (true)\\n        {\\n            yield return new WaitForSeconds(spawnInterval);\\n\\n            if (GameObject.FindGameObjectsWithTag(\\\"Target\\\").Length < maxTargets)\\n            {\\n                SpawnTarget();\\n            }\\n        }\\n    }\\n\\n    void SpawnTarget()\\n    {\\n        Vector3 spawnPosition = new Vector3(\\n            UnityEngine.Random.Range(-spawnRange, spawnRange),\\n            UnityEngine.Random.Range(1f, 5f),\\n            0);\\n\\n        GameObject newTarget;\\n\\n        if (targetPool.Count > 0)\\n        {\\n            newTarget = targetPool.Dequeue();\\n            newTarget.transform.position = spawnPosition;\\n            newTarget.transform.rotation = Quaternion.identity;\\n        }\\n        else\\n        {\\n            newTarget = Instantiate(target, spawnPosition, Quaternion.identity);\\n            Debug.LogWarning(\\\"Expanded target pool. Consider increasing initial pool size.\\\");\\n        }\\n\\n        newTarget.tag = \\\"Target\\\";\\n        newTarget.GetComponent<Targets_movements>().level = level;\\n        newTarget.SetActive(true);\\n    }\\n\\n    public void ReturnToPool(GameObject obj)\\n    {\\n        obj.SetActive(false);\\n        targetPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing Unity.XR.CoreUtils;\\nusing UnityEngine;\\nusing System;\\n\\npublic class Targets : MonoBehaviour\\n{\\n    public GameObject target;\\n    public String level;\\n    public float spawnInterval = 3f;\\n    public int maxTargets = 10;\\n\\n    private float spawnTimer = 0f;\\n    private float spawnRange = 5f;\\n    private List<GameObject> targetPool;\\n    private int poolSize = 10;\\n\\n    void Start()\\n    {\\n        level = PlayerPrefs.GetString(\\\"level\\\");\\n        targetPool = new List<GameObject>();\\n\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = Instantiate(target);\\n            obj.SetActive(false);\\n            targetPool.Add(obj);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        spawnTimer += Time.deltaTime;\\n\\n        if (spawnTimer >= spawnInterval && GameObject.FindGameObjectsWithTag(\\\"Target\\\").Length < maxTargets)\\n        {\\n            SpawnTarget();\\n            spawnTimer = 0f;\\n        }\\n    }\\n\\n    void SpawnTarget()\\n    {\\n        for (int i = 0; i < targetPool.Count; i++)\\n        {\\n            if (!targetPool[i].activeInHierarchy)\\n            {\\n                Vector3 spawnPosition = new Vector3(\\n                    UnityEngine.Random.Range(-spawnRange, spawnRange),\\n                    UnityEngine.Random.Range(1f, 5f),\\n                    0);\\n\\n                targetPool[i].transform.position = spawnPosition;\\n                targetPool[i].SetActive(true);\\n                targetPool[i].tag = \\\"Target\\\";\\n                targetPool[i].GetComponent<Targets_movements>().level = level;\\n                break;\\n            }\\n        }\\n    }\\n    \\n    public void ReturnToPool(GameObject obj)\\n    {\\n        obj.SetActive(false);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752159615,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":2248,\"prompt_tokens\":793,\"total_tokens\":3041,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
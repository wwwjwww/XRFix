"{\"id\":\"chatcmpl-BrnlezlWZ9HvutEIr8abDwtkjlWg7\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update () {\\n    #if UNITY_EDITOR   //we will only use this script on the editor side, though there is nothing that would prevent it from working on device\\n    if (Input.GetMouseButtonDown (0)) \\n    {\\n        Ray ray = Camera.main.ScreenPointToRay (Input.mousePosition);\\n        RaycastHit hit;\\n\\n        if (Physics.Raycast (ray, out hit, maxRayDistance, collisionLayer)) \\n        {\\n            CreateBall (new Vector3 (hit.point.x, hit.point.y + createHeight, hit.point.z));\\n            Debug.Log (string.Format (\\\"x:{0:0.######} y:{1:0.######} z:{2:0.######}\\\", hit.point.x, hit.point.y, hit.point.z));\\n        }\\n    }\\n    #else\\n    if (Input.touchCount > 0 )\\n    {\\n        var touch = Input.GetTouch(0);\\n        if (touch.phase == TouchPhase.Began)\\n        {\\n            var screenPosition = Camera.main.ScreenToViewportPoint(touch.position);\\n            ARPoint point = new ARPoint {\\n                x = screenPosition.x,\\n                y = screenPosition.y\\n            };\\n                    \\n            List<ARHitTestResult> hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface ().HitTest (point, \\n                ARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent);\\n            if (hitResults.Count > 0) {\\n                foreach (var hitResult in hitResults) {\\n                    Vector3 position = UnityARMatrixOps.GetPosition (hitResult.worldTransform);\\n                    CreateBall (new Vector3 (position.x, position.y + createHeight, position.z));\\n                    break;\\n                }\\n            }\\n\\n        }\\n    }\\n    #endif\\n\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start () {\\n    props = new MaterialPropertyBlock ();\\n}\\n```\\n\\n```csharp\\nvoid Update () {\\n#if UNITY_EDITOR   //we will only use this script on the editor side, though there is nothing that would prevent it from working on device\\n    if (Input.GetMouseButtonDown (0)) \\n    {\\n        Ray ray = Camera.main.ScreenPointToRay (Input.mousePosition);\\n        RaycastHit hit;\\n        \\n        if (Physics.Raycast (ray, out hit, maxRayDistance, collisionLayer)) \\n        {\\n            CreateBall (new Vector3 (hit.point.x, hit.point.y + createHeight, hit.point.z));\\n\\n            Debug.Log (string.Format (\\\"x:{0:0.######} y:{1:0.######} z:{2:0.######}\\\", hit.point.x, hit.point.y, hit.point.z));\\n        }\\n    }\\n#else\\n    if (Input.touchCount > 0 )\\n    {\\n        var touch = Input.GetTouch(0);\\n        if (touch.phase == TouchPhase.Began)\\n        {\\n            var screenPosition = Camera.main.ScreenToViewportPoint(touch.position);\\n            ARPoint point = new ARPoint {\\n                x = screenPosition.x,\\n                y = screenPosition.y\\n            };\\n                    \\n            List<ARHitTestResult> hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface ().HitTest (point, \\n                ARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent);\\n            if (hitResults.Count > 0) {\\n                foreach (var hitResult in hitResults) {\\n                    Vector3 position = UnityARMatrixOps.GetPosition (hitResult.worldTransform);\\n                    CreateBall (new Vector3 (position.x, position.y + createHeight, position.z));\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n#endif\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start () {\\n\\tprops = new MaterialPropertyBlock ();\\n}\\n```\\n\\n```csharp\\nvoid CreateBall(Vector3 atPosition)\\n{\\n\\tGameObject ballGO = Instantiate (ballPrefab, atPosition, Quaternion.identity);\\n\\t\\n\\tfloat r = Random.Range(0.0f, 1.0f);\\n\\tfloat g = Random.Range(0.0f, 1.0f);\\n\\tfloat b = Random.Range(0.0f, 1.0f);\\n\\n\\tprops.SetColor(\\\"_InstanceColor\\\", new Color(r, g, b));\\n\\n\\tMeshRenderer renderer = ballGO.GetComponent<MeshRenderer>();\\n\\trenderer.SetPropertyBlock(props);\\n}\\n```\\n\\n```csharp\\nvoid Update () {\\n\\t#if UNITY_EDITOR   //we will only use this script on the editor side, though there is nothing that would prevent it from working on device\\n\\tif (Input.GetMouseButtonDown (0)) \\n\\t{\\n\\t\\tRay ray = Camera.main.ScreenPointToRay (Input.mousePosition);\\n\\t\\tRaycastHit hit;\\n\\n\\t\\tif (Physics.Raycast (ray, out hit, maxRayDistance, collisionLayer)) \\n\\t\\t{\\n\\t\\t\\tCreateBall (new Vector3 (hit.point.x, hit.point.y + createHeight, hit.point.z));\\n\\n\\t\\t\\tDebug.Log (string.Format (\\\"x:{0:0.######} y:{1:0.######} z:{2:0.######}\\\", hit.point.x, hit.point.y, hit.point.z));\\n\\t\\t}\\n\\t}\\n\\t#else\\n\\tif (Input.touchCount > 0 )\\n\\t{\\n\\t\\tvar touch = Input.GetTouch(0);\\n\\t\\tif (touch.phase == TouchPhase.Began)\\n\\t\\t{\\n\\t\\t\\tvar screenPosition = Camera.main.ScreenToViewportPoint(touch.position);\\n\\t\\t\\tARPoint point = new ARPoint {\\n\\t\\t\\t\\tx = screenPosition.x,\\n\\t\\t\\t\\ty = screenPosition.y\\n\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\tList<ARHitTestResult> hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface ().HitTest (point, \\n\\t\\t\\t\\tARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent);\\n\\t\\t\\tif (hitResults.Count > 0) {\\n\\t\\t\\t\\tforeach (var hitResult in hitResults) {\\n\\t\\t\\t\\t\\tVector3 position = UnityARMatrixOps.GetPosition (hitResult.worldTransform);\\n\\t\\t\\t\\t\\tCreateBall (new Vector3 (position.x, position.y + createHeight, position.z));\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\t}\\n\\t#endif\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start () {\\n    props = new MaterialPropertyBlock ();\\n}\\n\\nvoid Update () {\\n#if UNITY_EDITOR   //we will only use this script on the editor side, though there is nothing that would prevent it from working on device\\n    if (Input.GetMouseButtonDown (0)) \\n    {\\n        Ray ray = Camera.main.ScreenPointToRay (Input.mousePosition);\\n        RaycastHit hit;\\n    \\n        if (Physics.Raycast (ray, out hit, maxRayDistance, collisionLayer)) \\n        {\\n            CreateBall (new Vector3 (hit.point.x, hit.point.y + createHeight, hit.point.z));\\n    \\n            Debug.Log (string.Format (\\\"x:{0:0.######} y:{1:0.######} z:{2:0.######}\\\", hit.point.x, hit.point.y, hit.point.z));\\n        }\\n    }\\n#else\\n    if (Input.touchCount > 0 )\\n    {\\n        var touch = Input.GetTouch(0);\\n        if (touch.phase == TouchPhase.Began)\\n        {\\n            var screenPosition = Camera.main.ScreenToViewportPoint(touch.position);\\n            ARPoint point = new ARPoint {\\n                x = screenPosition.x,\\n                y = screenPosition.y\\n            };\\n                        \\n            List<ARHitTestResult> hitResults = UnityARSessionNativeInterface.GetARSessionNativeInterface ().HitTest (point, \\n                ARHitTestResultType.ARHitTestResultTypeExistingPlaneUsingExtent);\\n            if (hitResults.Count > 0) {\\n                foreach (var hitResult in hitResults) {\\n                    Vector3 position = UnityARMatrixOps.GetPosition (hitResult.worldTransform);\\n                    CreateBall (new Vector3 (position.x, position.y + createHeight, position.z));\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n#endif\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start () {\\n    props = new MaterialPropertyBlock ();\\n\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752162390,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1621,\"prompt_tokens\":1234,\"total_tokens\":2855,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
"{\"id\":\"chatcmpl-BrnlYB4T4gNLFMhItIIs0UfEyAJ7l\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```\\nforeach (LineRenderer lr in lineRenderers)\\n{\\n    lr.enabled = false;\\n}\\nlineRenderers.Clear();\\n\\nfor (int i = 0; i < particleCount; i++)\\n{\\n    if (lrIndex >= maxLineRendereres)\\n        break;\\n    p1_position = particles[i].position;\\n\\n    int connections = 0;\\n    for (int j = i + 1; j < particleCount; j++)\\n    {\\n        p2_position = particles[j].position;\\n        float distanceSqr = Vector3.SqrMagnitude(p1_position - p2_position);\\n\\n        if (distanceSqr <= maxDistanceSqr)\\n        {\\n            LineRenderer lr;\\n\\n            if (lrIndex == lineRendererCount)\\n            {\\n                lr = Instantiate(lineRendererTemplate, _transform, false);\\n                lineRenderers.Add(lr);\\n\\n                lineRendererCount++;\\n\\n            }\\n\\n            lr = lineRenderers[lrIndex];\\n\\n            lr.enabled = true;\\n            lr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n            lr.SetPosition(0, p1_position);\\n            lr.SetPosition(1, p2_position);\\n\\n            lr.startColor = particles[i].GetCurrentColor(particleSystem);\\n            lr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\n            lrIndex++;\\n            connections++;\\n\\n            if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n                break;\\n\\n        }\\n\\n    }\\n}\\n\\nfor (int i = lrIndex; i < lineRendererCount; i++)\\n{\\n    lineRenderers[i].enabled = false;\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"'''\\nif (lrIndex == lineRendererCount)\\n{\\n    lr = Instantiate(lineRendererTemplate, _transform, false);\\n    lineRenderers.Add(lr);\\n    lineRendererCount++;\\n}\\n\\nlr = lineRenderers[lrIndex];\\n\\nlr.enabled = true;\\nlr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\nlr.SetPosition(0, p1_position);\\nlr.SetPosition(1, p2_position);\\n\\nlr.startColor = particles[i].GetCurrentColor(particleSystem);\\nlr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\nlrIndex++;\\nconnections++;\\n\\nif (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n{\\n    break;\\n}\\n\\n'''\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"'''\\nlr = Instantiate(lineRendererTemplate, _transform, false);\\nlineRenderers.Add(lr);\\n\\nlineRendererCount++;\\n\\nlr = lineRenderers[lrIndex];\\n\\nlr.enabled = true;\\nlr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\nlr.SetPosition(0, p1_position);\\nlr.SetPosition(1, p2_position);\\n\\nlr.startColor = particles[i].GetCurrentColor(particleSystem);\\nlr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\nlrIndex++;\\nconnections++;\\n\\nif (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n{\\n    break;\\n}\\n'''\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n// Instantiate lineRendererTemplate in Start() instead of in Update()\\nlr = Instantiate(lineRendererTemplate, _transform, false);\\nlineRenderers.Add(lr);\\nlineRendererCount++;\\n\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```\\nvoid Start()\\n{\\n    particleSystem = GetComponent<ParticleSystem>();\\n    particleSystemMainModule = particleSystem.main;\\n\\n    particles = new ParticleSystem.Particle[particleSystemMainModule.maxParticles];\\n}\\n\\nvoid LateUpdate()\\n{\\n    int lrIndex = 0;\\n\\n    if (maxConnections > 0 && maxLineRendereres > 0)\\n    {\\n        particleSystem.GetParticles(particles);\\n        int particleCount = particleSystem.particleCount;\\n\\n        float maxDistanceSqr = maxDistance * maxDistance;\\n\\n        for (int i = 0; i < particleCount; i++)\\n        {\\n            if (lrIndex >= maxLineRendereres)\\n                break;\\n\\n            Vector3 p1_position = particles[i].position;\\n\\n            int connections = 0;\\n            for (int j = i + 1; j < particleCount; j++)\\n            {\\n                Vector3 p2_position = particles[j].position;\\n                float distanceSqr = Vector3.SqrMagnitude(p1_position - p2_position);\\n\\n                if (distanceSqr <= maxDistanceSqr)\\n                {\\n                    LineRenderer lr;\\n\\n                    if (lrIndex >= lineRenderers.Count)\\n                    {\\n                        lr = Instantiate(lineRendererTemplate, _transform, false);\\n                        lineRenderers.Add(lr);\\n                    }\\n                    else\\n                    {\\n                        lr = lineRenderers[lrIndex];\\n                    }\\n\\n                    lr.enabled = true;\\n                    lr.useWorldSpace = particleSystemMainModule.simulationSpace == ParticleSystemSimulationSpace.World;\\n                    lr.SetPosition(0, p1_position);\\n                    lr.SetPosition(1, p2_position);\\n                    \\n                    lr.startColor = particles[i].GetCurrentColor(particleSystem);\\n                    lr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\n                    lrIndex++;\\n                    connections++;\\n\\n                    if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n                        break;\\n                }\\n            }\\n        }\\n\\n        for (int i = lrIndex; i < lineRenderers.Count; i++)\\n        {\\n            lineRenderers[i].enabled = false;\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752162384,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1056,\"prompt_tokens\":1412,\"total_tokens\":2468,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
"{\"id\":\"chatcmpl-B4fZXDfYI4j8HD6ZQ5fsEjiClBdYQ\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n \\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject; // List of objects to destroy\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        StartCoroutine(DestroyObjectDelayed(hit.transform.gameObject));\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n                \\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    IEnumerator DestroyObjectDelayed(GameObject objectToDestroy)\\n    {\\n        yield return new WaitForSeconds(0.02f);\\n        Destroy(objectToDestroy);\\n    }\\n\\n    void GameOver()\\n    {\\n        // Game Over Logic\\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Start()\\n    {\\n        // Initialize any pooled objects here, if needed\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        ScheduleDestroy(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    private void ScheduleDestroy(GameObject obj)\\n    {\\n        destroyObject.Add(obj);\\n    }\\n\\n    void LateUpdate()\\n    {\\n        foreach (GameObject obj in destroyObject)\\n        {\\n            Destroy(obj);\\n        }\\n        destroyObject.Clear();\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    StartCoroutine(DestroyObjectWithDelay(hit.transform.gameObject));\\n                    Object = null; // Destroyed object\\n                }\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n            StartCoroutine(ShootLaser());\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n    }\\n}\\n\\nIEnumerator DestroyObjectWithDelay(GameObject obj)\\n{\\n    yield return new WaitForEndOfFrame();\\n    destroyObject.Add(obj);\\n    Destroy(obj);\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start()\\n{\\n    // Pre-populate the destroyObject list with relevant GameObjects if necessary\\n    // This can help manage which objects should be destroyed\\n}\\n\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    \\n                    // Schedule the destruction to outside the Update loop\\n                    StartCoroutine(DestroyObjectRoutine(hit.transform.gameObject));\\n                    \\n                    Object = null; // Destroyed object\\n                }\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n            StartCoroutine(ShootLaser());\\n            \\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n    }\\n}\\n\\nIEnumerator DestroyObjectRoutine(GameObject objectToDestroy)\\n{\\n    yield return new WaitForEndOfFrame();\\n    Destroy(objectToDestroy);\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start()\\n{\\n    foreach (GameObject obj in destroyObject)\\n    {\\n        obj.SetActive(false);\\n    }\\n}\\n\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    deactivateObject(hit.transform.gameObject);\\n                    Object = null; // Deactivated object\\n                }\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n            StartCoroutine(ShootLaser());\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n    }\\n}\\n\\nvoid deactivateObject(GameObject obj)\\n{\\n    obj.SetActive(false);\\n    destroyObject.Add(obj);\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740452815,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_b705f0c291\",\"usage\":{\"completion_tokens\":1751,\"prompt_tokens\":595,\"total_tokens\":2346,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
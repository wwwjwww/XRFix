{
    "code_repairing_0": "public class GameObjectPool : MonoBehaviour\n{\n    public GameObject prefab;\n    public int poolSize = 10;\n    private List<GameObject> pool;\n\n    void Start()\n    {\n        pool = new List<GameObject>();\n        for (int i = 0; i < poolSize; i++)\n        {\n            GameObject obj = Instantiate(prefab);\n            obj.SetActive(false);\n            pool.Add(obj);\n        }\n    }\n\n    public GameObject GetPooledObject()\n    {\n        for (int i = 0; i < pool.Count; i++)\n        {\n            if (!pool[i].activeInHierarchy)\n            {\n                return pool[i];\n            }\n        }\n\n        GameObject obj = Instantiate(prefab);\n        obj.SetActive(false);\n        pool.Add(obj);\n        Debug.LogWarning(\"Expanded object pool. Consider increasing initial pool size.\");\n        return obj;\n    }\n\n    public void ReturnToPool(GameObject obj)\n    {\n        obj.SetActive(false);\n    }\n\n    void Update()\n    {\n        if (Input.GetButtonDown(\"Fire1\"))\n        {\n            GameObject gobj = GetPooledObject();\n            if (gobj)\n            {\n                gobj.transform.position = laserOrigin.position;\n                gobj.SetActive(true);\n            }\n        }\n        else if (Input.GetButtonUp(\"Release\"))\n        {\n            GameObject gobj = gobj;\n            if (gobj)\n            {\n                ReturnToPool(gobj);\n            }\n        }\n    }\n}",
    "code_repairing_1": "void Awake()\n{\n    laserLine = GetComponent<LineRenderer>();\n    audioManager = GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>();\n    destroyObject = new List<GameObject>();\n}\n\nvoid Update()\n{\n    if (isPlayerOnObject)\n    {\n        fireTimer += Time.deltaTime;\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\n        {\n            fireTimer = 0;\n            laserLine.SetPosition(0, laserOrigin.position);\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\n            RaycastHit hit;\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\n            {\n                if (hit.collider.gameObject == Object)\n                {\n                    audioManager.PlaySFX(audioManager.swordSound);\n                    laserLine.SetPosition(1, hit.point);\n                    audioManager.PlaySFX(audioManager.disappearSound);\n                    StartCoroutine(DisappearObject(hit.transform.gameObject));\n                }\n            }\n            else\n            {\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\n            }\n            StartCoroutine(ShootLaser());\n        }\n    }\n}\n\nIEnumerator DisappearObject(GameObject obj)\n{\n    destroyObject.Add(obj);\n    obj.SetActive(false",
    "code_repairing_2": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\n\npublic class RaycastGun : MonoBehaviour\n{\n    public Camera playerCamera;\n    public Transform laserOrigin;\n    public GameObject Object;\n    private bool isPlayerOnObject = false;\n    public GameObject player;\n    public float gunRange = 50f;\n    public float fireRate = 0.2f;\n    public float laserDuration = 0.05f;\n\n    LineRenderer laserLine;\n    float fireTimer;\n\n    AudioManager audioManager;\n    public List<GameObject> destroyObject; // List of objects to destroy\n\n    void Awake()\n    {\n        laserLine = GetComponent<LineRenderer>();\n        audioManager = GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>();\n    }\n\n    void Update()\n    {\n        if (isPlayerOnObject)\n        {\n            fireTimer += Time.deltaTime;\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\n            {\n                fireTimer = 0;\n                laserLine.SetPosition(0, laserOrigin.position);\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\n                RaycastHit hit;\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\n                {\n                    if (hit.collider.gameObject == Object)\n                    {\n                        audioManager.Play",
    "code_repairing_3": "```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.SceneManagement;\n\n[RequireComponent(typeof(LineRenderer))]\npublic class RaycastGun : MonoBehaviour\n{\n    public Camera playerCamera;\n    public Transform laserOrigin;\n    public GameObject Object;\n    private bool isPlayerOnObject = false;\n    public GameObject player;\n    public float gunRange = 50f;\n    public float fireRate = 0.2f;\n    public float laserDuration = 0.05f;\n \n    LineRenderer laserLine;\n    float fireTimer;\n\n    AudioManager audioManager;\n    public List<GameObject> destroyObject; // List of objects to destroy\n\n    void Awake()\n    {\n        laserLine = GetComponent<LineRenderer>();\n        audioManager = GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>();\n    }\n\n    void Update()\n    {\n        if (isPlayerOnObject)\n        {\n            fireTimer += Time.deltaTime;\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\n            {\n                fireTimer = 0;\n                laserLine.SetPosition(0, laserOrigin.position);\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\n                RaycastHit hit;\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\n                {\n                    if (hit.",
    "code_repairing_4": "```\nusing UnityEngine;\n\npublic class RaycastGun : MonoBehaviour\n{\n    public Camera playerCamera;\n    public Transform laserOrigin;\n    public GameObject prefab;\n    public float gunRange = 50f;\n    public float fireRate = 0.2f;\n    public float laserDuration = 0.05f;\n\n    LineRenderer laserLine;\n    float fireTimer;\n\n    AudioManager audioManager;\n    public List<GameObject> destroyObjects; // List of objects to destroy\n\n    // Pooling\n    public int poolSize = 10;\n    private List<GameObject> pool;\n\n    private void Awake()\n    {\n        laserLine = GetComponent<LineRenderer>();\n        audioManager = GameObject.Find(\"Audio\").GetComponent<AudioManager>();\n\n        pool = new List<GameObject>();\n        for (int i = 0; i < poolSize; i++)\n        {\n            GameObject obj = Instantiate(prefab);\n            obj.SetActive(false);\n            pool.Add(obj);\n        }\n    }\n\n    void Update()\n    {\n        if (Input.GetButtonDown(\"Fire1\"))\n        {\n            FireLaser();\n        }\n    }\n\n    public void FireLaser()\n    {\n        fireTimer += Time.deltaTime;\n        if (fireTimer > fireRate)\n        {\n            fireTimer = 0;\n\n            // Get pooled object\n            GameObject obj = GetPooledObject();\n\n            // Fire laser\n            laserLine.SetPosition(0, laserOrigin.position);\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint"
}
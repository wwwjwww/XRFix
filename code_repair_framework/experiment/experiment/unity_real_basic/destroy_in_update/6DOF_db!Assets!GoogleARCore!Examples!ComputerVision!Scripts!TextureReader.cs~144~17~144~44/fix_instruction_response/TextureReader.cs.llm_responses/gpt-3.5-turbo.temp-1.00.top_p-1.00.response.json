"{\"id\":\"chatcmpl-B1ssr0Szyw0pxRgrKZt5vCf6UzDHB\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"\\n                case CommandType.Reset:\\n                {\\n                    if (m_TextureReaderApi != null)\\n                    {\\n                        m_TextureReaderApi.Destroy();\\n                        m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n                        m_ImageBufferIndex = -1;\\n                    }\\n                    break;\\n                }\\n                \\n                case CommandType.ReleasePreviousBuffer:\\n                {\\n                    if (m_TextureReaderApi != null)\\n                    {\\n                        m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                        m_ImageBufferIndex = -1;\\n                    }\\n                    break;\\n                }\\n\\n                case CommandType.ProcessNextFrame:\\n                {\\n                    if (m_ImageBufferIndex >= 0)\\n                    {\\n                        int bufferSize = 0;\\n                        IntPtr pixelBuffer = m_TextureReaderApi.AcquireFrame(m_ImageBufferIndex, ref bufferSize);\\n\\n                        if (pixelBuffer != IntPtr.Zero && OnImageAvailableCallback != null)\\n                        {\\n                            OnImageAvailableCallback(ImageFormat, ImageWidth, ImageHeight, pixelBuffer, bufferSize);\\n                        }\\n\\n                        m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                    }\\n\\n                    break;\\n                }\\n\\n                case CommandType.None:\\n                default:\\n                    break;\\n                }\\n\\n                \\n                if (Frame.CameraImage.Texture != null)\\n                {\\n                    int textureId = Frame.CameraImage.Texture.GetNativeTexturePtr().ToInt32();\\n                    m_ImageBufferIndex =\\n                        m_TextureReaderApi.SubmitFrame(textureId, k_ARCoreTextureWidth, k_ARCoreTextureHeight);\\n                }\\n\\n                \\n                m_Command = CommandType.ProcessNextFrame;\\n            }\\n        }\\n\\n        \\n        \\n        \\n        private void OnDestroy()\\n        {\\n            if (m_TextureReaderApi != null)\\n            {\\n                m_TextureReaderApi.Destroy();\\n                m_TextureReaderApi = null;\\n            }\\n        }\\n\\n        \\n        \\n        \\n        \\n        \\n        private void OnDisable()\\n        {\\n            \\n            m_Command = CommandType.ReleasePreviousBuffer;\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"public void Update()\\n{\\n    if (!enabled)\\n    {\\n        return;\\n    }\\n\\n    switch (m_Command)\\n    {\\n        case CommandType.Create:\\n        {\\n            m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n            break;\\n        }\\n\\n        case CommandType.Reset:\\n        {\\n            m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n            m_TextureReaderApi.Destroy();\\n            m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n            m_ImageBufferIndex = -1;\\n            break;\\n        }\\n\\n        case CommandType.ReleasePreviousBuffer:\\n        {\\n            m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n            m_ImageBufferIndex = -1;\\n            break;\\n        }\\n\\n        case CommandType.ProcessNextFrame:\\n        {\\n            if (m_ImageBufferIndex >= 0)\\n            {\\n                int bufferSize = 0;\\n                IntPtr pixelBuffer = m_TextureReaderApi.AcquireFrame(m_ImageBufferIndex, ref bufferSize);\\n\\n                if (pixelBuffer != IntPtr.Zero && OnImageAvailableCallback != null)\\n                {\\n                    OnImageAvailableCallback(ImageFormat, ImageWidth, ImageHeight, pixelBuffer, bufferSize);\\n                }\\n\\n                m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n            }\\n\\n            break;\\n        }\\n\\n        case CommandType.None:\\n        default:\\n            break;\\n    }\\n\\n    if (Frame.CameraImage.Texture != null)\\n    {\\n        int textureId = Frame.CameraImage.Texture.GetNativeTexturePtr().ToInt32();\\n        m_ImageBufferIndex = m_TextureReaderApi.SubmitFrame(textureId, k_ARCoreTextureWidth, k_ARCoreTextureHeight);\\n    }\\n\\n    m_Command = CommandType.ProcessNextFrame;\\n}\\n\\nprivate void OnDestroy()\\n{\\n    if (m_TextureReaderApi != null)\\n    {\\n        m_TextureReaderApi.Destroy();\\n        m_TextureReaderApi = null;\\n    }\\n}\\n\\nprivate void OnDisable()\\n{\\n    m_Command = CommandType.ReleasePreviousBuffer;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"\\n                case CommandType.Reset:\\n                {\\n                    if (m_TextureReaderApi != null)\\n                    {\\n                        m_TextureReaderApi.Destroy();\\n                        m_TextureReaderApi = null;\\n                    }\\n                    m_TextureReaderApi = new TextureReaderApi();\\n                    m_Command = CommandType.Create;\\n                    m_ImageBufferIndex = -1;\\n                    break;\\n                }\\n                \\n                case CommandType.ReleasePreviousBuffer:\\n                {\\n                    if (m_TextureReaderApi != null)\\n                    {\\n                        m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                        m_ImageBufferIndex = -1;\\n                    }\\n                    break;\\n                }\\n\\n                case CommandType.ProcessNextFrame:\\n                {\\n                    if (m_ImageBufferIndex >= 0)\\n                    {\\n                        int bufferSize = 0;\\n                        IntPtr pixelBuffer = m_TextureReaderApi.AcquireFrame(m_ImageBufferIndex, ref bufferSize);\\n\\n                        if (pixelBuffer != IntPtr.Zero && OnImageAvailableCallback != null)\\n                        {\\n                            OnImageAvailableCallback(ImageFormat, ImageWidth, ImageHeight, pixelBuffer, bufferSize);\\n                        }\\n\\n                        m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                    }\\n\\n                    if (Frame.CameraImage.Texture != null)\\n                    {\\n                        int textureId = Frame.CameraImage.Texture.GetNativeTexturePtr().ToInt32();\\n                        m_ImageBufferIndex = m_TextureReaderApi.SubmitFrame(textureId, k_ARCoreTextureWidth, k_ARCoreTextureHeight);\\n                    }\\n\\n                    m_Command = CommandType.ProcessNextFrame;\\n                    break;\\n                }\\n\\n                case CommandType.None:\\n                default:\\n                    break;\\n                }\\n            }\\n\\n            \\n\\n            \\n            private void OnDestroy()\\n            {\\n                if (m_TextureReaderApi != null)\\n                {\\n                    m_TextureReaderApi.Destroy();\\n                    m_TextureReaderApi = null;\\n                }\\n            }\\n\\n            \\n            \\n            \\n            private void OnDisable()\\n            {\\n                m_Command = CommandType.ReleasePreviousBuffer;\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"public void Update()\\n{\\n    if (!enabled)\\n    {\\n        return;\\n    }\\n\\n    switch (m_Command)\\n    {\\n        case CommandType.Create:\\n            {\\n                m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n                break;\\n            }\\n\\n        case CommandType.Reset:\\n            {\\n                m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                m_TextureReaderApi.Destroy();\\n                m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n                m_ImageBufferIndex = -1;\\n                break;\\n            }\\n    }\\n\\n    if (Frame.CameraImage.Texture != null)\\n    {\\n        int textureId = Frame.CameraImage.Texture.GetNativeTexturePtr().ToInt32();\\n        m_ImageBufferIndex = m_TextureReaderApi.SubmitFrame(textureId, k_ARCoreTextureWidth, k_ARCoreTextureHeight);\\n    }\\n\\n    m_Command = CommandType.ProcessNextFrame;\\n}\\n\\nprivate void OnDestroy()\\n{\\n    if (m_TextureReaderApi != null)\\n    {\\n        m_TextureReaderApi.Destroy();\\n        m_TextureReaderApi = null;\\n    }\\n}\\n\\nprivate void OnDisable()\\n{\\n    m_Command = CommandType.ReleasePreviousBuffer;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"public void Update()\\n{\\n    if (!enabled)\\n    {\\n        return;\\n    }\\n\\n    switch (m_Command)\\n    {\\n        case CommandType.Create:\\n            {\\n                m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n                break;\\n            }\\n\\n        case CommandType.Reset:\\n            {\\n                m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                m_TextureReaderApi.Destroy();\\n                m_TextureReaderApi.Create(ImageFormat, ImageWidth, ImageHeight, ImageSampleMode == SampleMode.KeepAspectRatio);\\n                m_ImageBufferIndex = -1;\\n                break;\\n            }\\n\\n        case CommandType.ReleasePreviousBuffer:\\n            {\\n                m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                m_ImageBufferIndex = -1;\\n                break;\\n            }\\n\\n        case CommandType.ProcessNextFrame:\\n            {\\n                if (m_ImageBufferIndex >= 0)\\n                {\\n                    int bufferSize = 0;\\n                    IntPtr pixelBuffer = m_TextureReaderApi.AcquireFrame(m_ImageBufferIndex, ref bufferSize);\\n\\n                    if (pixelBuffer != IntPtr.Zero && OnImageAvailableCallback != null)\\n                    {\\n                        OnImageAvailableCallback(ImageFormat, ImageWidth, ImageHeight, pixelBuffer, bufferSize);\\n                    }\\n\\n                    m_TextureReaderApi.ReleaseFrame(m_ImageBufferIndex);\\n                }\\n\\n                break;\\n            }\\n\\n        case CommandType.None:\\n        default:\\n            break;\\n    }\\n\\n    if (Frame.CameraImage.Texture != null)\\n    {\\n        int textureId = Frame.CameraImage.Texture.GetNativeTexturePtr().ToInt32();\\n        m_ImageBufferIndex = m_TextureReaderApi.SubmitFrame(textureId, k_ARCoreTextureWidth, k_ARCoreTextureHeight);\\n    }\\n\\n    m_Command = CommandType.ProcessNextFrame;\\n}\\n\\nprivate void OnDestroy()\\n{\\n    if (m_TextureReaderApi != null)\\n    {\\n        m_TextureReaderApi.Destroy();\\n        m_TextureReaderApi = null;\\n    }\\n}\\n\\nprivate void OnDisable()\\n{\\n    m_Command = CommandType.ReleasePreviousBuffer;\\n}\\n}\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739789001,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_0165350fbb\",\"usage\":{\"completion_tokens\":1802,\"prompt_tokens\":1058,\"total_tokens\":2860,\"completion_tokens_details\":null,\"prompt_tokens_details\":null}}"
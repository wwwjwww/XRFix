"{\"id\":\"chatcmpl-B3IdLSk5RsJefcvF09nCxVNG23ZTQ\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"public void Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else\\n    {\\n        ThrowArrow();\\n    }\\n}\\n\\nprivate void Fire()\\n{\\n    if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\\n    {\\n        float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\\n        currentArrow.transform.parent = null;\\n        Rigidbody r = currentArrow.GetComponent<Rigidbody>();\\n        r.velocity = currentArrow.transform.forward * 25f * dist;\\n        r.useGravity = true;\\n        currentArrow.GetComponent<Collider>().isTrigger = false;\\n        currentArrow = null;\\n        hasArrow = false;\\n        isAttached = false;\\n    }\\n}\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrow();\\n            } else if (isAttached) {\\n                Fire();\\n            }\\n        }\\n        else ThrowArrow();\\n    }\\n\\n    public void AttachArrow()\\n    {\\n        if (currentArrow == null)\\n        {\\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\\n            hasArrow = true;\\n        }\\n    }\\n\\n    private void Fire()\\n    {\\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\\n        {\\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\\n            currentArrow.transform.parent = null;\\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\\n            r.velocity = currentArrow.transform.forward * 25f * dist;\\n            r.useGravity = true;\\n            currentArrow.GetComponent<Collider>().isTrigger = false;\\n            currentArrow = null;\\n            hasArrow = false;\\n            isAttached = false;\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"public void Fire()\\n{\\n    if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\\n    {\\n        float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\\n        currentArrow.transform.parent = null;\\n        Rigidbody r = currentArrow.GetComponent<Rigidbody>();\\n        r.velocity = currentArrow.transform.forward * 25f * dist;\\n        r.useGravity = true;\\n        currentArrow.GetComponent<Collider>().isTrigger = false;\\n        currentArrow = null;\\n        hasArrow = false;\\n        isAttached = false;\\n    }\\n}\\n\\npublic void Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else\\n    {\\n        ThrowArrow();\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"public void Update()\\n{\\n    debug.text = controler.transform.rotation.x.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                 \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n    if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger, controller) > 0)\\n    {\\n        if (!hasArrow)\\n        {\\n            AttachArrow();\\n        }\\n        else if (isAttached)\\n        {\\n            Fire();\\n        }\\n    }\\n    else\\n    {\\n        ThrowArrow();\\n    }\\n}\\n\\nprivate void Fire()\\n{\\n    if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger, controller) < 0)\\n    {\\n        float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\\n        currentArrow.transform.parent = null;\\n        Rigidbody r = currentArrow.GetComponent<Rigidbody>();\\n        r.velocity = currentArrow.transform.forward * 25f * dist;\\n        r.useGravity = true;\\n        currentArrow.GetComponent<Collider>().isTrigger = false;\\n        currentArrow = null;\\n        hasArrow = false;\\n        isAttached = false;\\n    }\\n}\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"public void ThrowArrow()\\n{\\n    if (hasArrow && !isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) <= 0)\\n    {\\n        Destroy(currentArrow);\\n        currentArrow = null;\\n        hasArrow = false;\\n    }\\n}\\n\\npublic void Fire()\\n{\\n    if (hasArrow && isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) <= 0)\\n    {\\n        float dist = Vector3.Distance(arrowStartPoint.transform.position, controler.transform.position);\\n        currentArrow.transform.SetParent(null);\\n        Rigidbody r = currentArrow.GetComponent<Rigidbody>();\\n        r.velocity = currentArrow.transform.forward * 25f * dist;\\n        r.useGravity = true;\\n        currentArrow.GetComponent<Collider>().isTrigger = false;\\n        currentArrow = null;\\n        hasArrow = false;\\n        isAttached = false;\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740126311,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1303,\"prompt_tokens\":564,\"total_tokens\":1867,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
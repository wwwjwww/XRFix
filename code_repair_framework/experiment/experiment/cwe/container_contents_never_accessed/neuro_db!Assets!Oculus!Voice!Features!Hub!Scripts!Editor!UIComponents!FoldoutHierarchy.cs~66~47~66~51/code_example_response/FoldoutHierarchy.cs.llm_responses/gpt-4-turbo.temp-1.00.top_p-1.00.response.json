"{\"id\":\"chatcmpl-BrmPH7skCsQJ2NCiFrUTDKF4t3o5Z\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private List<FoldoutHierarchyItem<T>> _data = new List<FoldoutHierarchyItem<T>>();\\n\\n        public FoldoutGroup(string name)\\n        {\\n            _name = name;\\n        }\\n\\n        public void AddChild(FoldoutGroup<T> group, FoldoutHierarchyItem<T> item, bool isLeaf)\\n        {\\n            _children.Add(group);\\n            if (isLeaf)\\n            {\\n                _data.Add(item);\\n            }\\n        }\\n\\n        public FoldoutGroup<T> Parent\\n        {\\n            get { return _parent; }\\n            set { _parent = value; }\\n        }\\n\\n        public void Draw()\\n        {\\n            // Draw logic for the group\\n            foreach (var item in _data)\\n            {\\n                item.onDraw?.Invoke(item.item);\\n            }\\n\\n            foreach (var child in _children)\\n            {\\n                if (child is FoldoutGroup<T> foldoutGroup)\\n                {\\n                    foldoutGroup.Draw();\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private List<FoldoutHierarchyItem<T>> _data = new List<FoldoutHierarchyItem<T>>();\\n\\n        public FoldoutGroup(string name)\\n        {\\n            _name = name;\\n        }\\n\\n        public FoldoutGroup<T> Parent => _parent;\\n\\n        public void AddChild(FoldoutGroup<T> child, FoldoutHierarchyItem<T> item, bool isLeaf)\\n        {\\n            child._parent = this;\\n            _children.Add(child);\\n            if (isLeaf)\\n            {\\n                _data.Add(item);\\n            }\\n        }\\n\\n        public void Draw()\\n        {\\n            GUILayout.Label(_name);\\n            foreach (var child in _children)\\n            {\\n                if (child is FoldoutGroup<T> group)\\n                {\\n                    group.Draw();\\n                }\\n            }\\n\\n            foreach (var dataItem in _data)\\n            {\\n                dataItem.onDraw?.Invoke(dataItem.item);\\n            }\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private List<FoldoutHierarchyItem<T>> _data = new List<FoldoutHierarchyItem<T>>();\\n\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        // FIXED CODE:\\n        private List<FoldoutHierarchyItem<T>> _data = new List<FoldoutHierarchyItem<T>>();\\n\\n        public FoldoutGroup(string name)\\n        {\\n            _name = name;\\n        }\\n\\n        public FoldoutGroup<T> Parent\\n        {\\n            get { return _parent; }\\n        }\\n\\n        public void AddChild(FoldoutGroup<T> child, FoldoutHierarchyItem<T> item, bool isEndOfPath)\\n        {\\n            child._parent = this;\\n            _children.Add(child);\\n\\n            if (isEndOfPath)\\n            {\\n                _data.Add(item);\\n            }\\n        }\\n\\n        public void Draw()\\n        {\\n            foreach (var child in _children)\\n            {\\n                if (child is FoldoutGroup<T> group)\\n                {\\n                    group.Draw();\\n                }\\n            }\\n\\n            foreach (var dataItem in _data)\\n            {\\n                dataItem.onDraw?.Invoke(dataItem.item);\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private List<FoldoutHierarchyItem<T>> _data = new List<FoldoutHierarchyItem<T>>();\\n        \\n        public FoldoutGroup(string name)\\n        {\\n            _name = name;\\n        }\\n\\n        public FoldoutGroup<T> Parent => _parent;\\n        \\n        public void AddChild(FoldoutGroup<T> childGroup, FoldoutHierarchyItem<T> item, bool isEndNode)\\n        {\\n            childGroup._parent = this;\\n            _children.Add(childGroup);\\n\\n            if (isEndNode)\\n            {\\n                _data.Add(item);\\n            }\\n        }\\n\\n        public void Draw()\\n        {\\n            foreach (var child in _children)\\n            {\\n                if (child is FoldoutGroup<T> group)\\n                {\\n                    group.Draw();\\n                }\\n            }\\n\\n            foreach (var item in _data)\\n            {\\n                item.onDraw?.Invoke(item.item);\\n            }\\n        }\\n    }\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752157159,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_a288987b44\",\"usage\":{\"completion_tokens\":818,\"prompt_tokens\":566,\"total_tokens\":1384,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
{
    "id": "chatcmpl-9yyxGywycPSpTtULsn5AV5WhhKVSd",
    "object": "chat.completion",
    "created": 1724321018,
    "model": "gpt-35-turbo",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "```csharp\nvoid FixedUpdate() {\n  if (desireSetSelect != 0) {\n    if (desireSetSelect == 1) {\n      curState = manipState.selected;\n    } else {\n      curState = manipState.off;\n    }\n    desireSetSelect = 0;\n  }\n}\n```"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 1,
            "message": {
                "role": "assistant",
                "content": "```csharp\npublic override void Awake() {\n    base.Awake();\n    _deviceInterface = transform.parent.GetComponent<deviceInterface>();\n    rend = GetComponent<Renderer>();\n    offMat = rend.material;\n    glowMat = new Material(onMat);\n    glowMat.SetColor(\"_Color\", glowColor); // Change \"_TintColor\" to \"_Color\"\n}\n\nvoid Start() {\n    initialized = true;\n}\n```"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 2,
            "message": {
                "role": "assistant",
                "content": "```csharp\n  public override void Start() {\n    base.Start();\n    initialized = true;\n  }\n\n  void Update() {\n    keyHitCheck();\n  }\n\n  public void setOffMat(Material m) {\n    offMat = m;\n    rend.material = offMat;\n  }\n\n  public bool isHit = false;\n\n  public void keyHitCheck() {\n    if (!initialized) return;\n    bool on = touching || curState == manipState.grabbed || toggled;\n\n    if (on != isHit) {\n      isHit = on;\n      _deviceInterface.hit(on, keyValue);\n    }\n  }\n\n  enum keyState {\n    off,\n    touched,\n    grabbedOn,\n    grabbedOff,\n    selectedOff,\n    selectedOn\n  };\n\n  int desireSetSelect = 0;\n  public void setSelectAsynch(bool on) {\n    desireSetSelect = on ? 1 : 2;\n  }\n\n  bool phantomHitUpdate = false;\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 3,
            "message": {
                "role": "assistant",
                "content": "public class key : manipObject\n{\n    public int keyValue = 0;\n    public Material onMat;\n    Renderer rend;\n    Material offMat;\n    Material glowMat;\n    deviceInterface _deviceInterface;\n  \n    public bool sticky = true;\n  \n    Color glowColor = Color.HSVToRGB(.4f, .5f, .1f);\n  \n    public bool isKeyboard = false;\n  \n    public override void Awake()\n    {\n        base.Awake();\n        _deviceInterface = transform.parent.GetComponent<deviceInterface>();\n        rend = GetComponent<Renderer>();\n        offMat = rend.material;\n        glowMat = new Material(onMat);\n        glowMat.SetColor(\"_TintColor\", glowColor);\n    }\n  \n    bool initialized = false;\n    void Start()\n    {\n        initialized = true;\n    }\n  \n    public void setOffMat(Material m)\n    {\n        rend.material = m;\n        offMat = m;\n    }\n  \n    public bool isHit = false;\n  \n    public void keyHitCheck()\n    {\n        if (!initialized) return;\n        bool on = touching || curState == manipState.grabbed || toggled;\n  \n        if (on != isHit)\n        {\n            isHit = on;\n            _deviceInterface.hit(on, keyValue);\n        }\n    }\n  \n    enum keyState\n    {\n        off,\n        touched,\n        grabbedOn,\n        grabbedOff,\n        selectedOff,\n        selectedOn\n    };\n  \n    int desireSetSelect = 0;\n    public void setSelectAsynch(bool on)\n    {\n        desireSetSelect = on ? 1 : 2;\n    }\n  \n    bool phantomHitUpdate = false;\n    //   Queue<bool> hits = new Queue<bool>();\n}"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 4,
            "message": {
                "role": "assistant",
                "content": "```csharp\n    void Update() {\n        keyHitCheck();\n        if (desireSetSelect != 0) {\n            if (desireSetSelect == 1) {\n                setOn();\n            } else {\n                setOff();\n            }\n            desireSetSelect = 0;\n        }\n    }\n\n    public void setOn() {\n        rend.material = onMat;\n    }\n\n    public void setOff() {\n        rend.material = offMat;\n    }\n}\n```"
            },
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 415,
        "completion_tokens": 802,
        "total_tokens": 1217
    },
    "system_fingerprint": "fp_e49e4201a9"
}
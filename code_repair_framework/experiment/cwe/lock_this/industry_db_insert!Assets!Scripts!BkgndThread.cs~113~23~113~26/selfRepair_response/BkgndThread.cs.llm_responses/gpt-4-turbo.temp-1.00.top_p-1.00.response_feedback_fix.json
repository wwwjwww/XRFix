using System.Collections.Generic;
using System.Threading;
using UnityEngine;

public class SomeClass // Assuming there is a class definition
{
    private Object lockObject = new Object(); // Move Object declaration outside to make it a class member

    public delegate T RunDelegateWithCompute(SomeClass obj);

    public void Compute(RunDelegateWithCompute run_delegate)
    {
        Schedule(() =>
        {
            T result1 = run_delegate(this);
            lock (lockObject) // Use the lockObject for locking instead of 'this'.
            {
                result = result1;
                got_answer = true;
            }
        });
    }

    private void Schedule(System.Action action)
    {
        // Assume there is some implementation here
    }

    private T result; // Assuming T is declared elsewhere in the class
    private bool got_answer; // Assuming got_answer is a class member
}

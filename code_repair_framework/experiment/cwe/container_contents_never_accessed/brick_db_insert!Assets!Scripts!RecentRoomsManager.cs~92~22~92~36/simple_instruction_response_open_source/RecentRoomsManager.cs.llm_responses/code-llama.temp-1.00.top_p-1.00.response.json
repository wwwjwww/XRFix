{
    "code_repairing_0": "Here's the fixed code:\n```\n\ufeffusing System.Collections.Generic;\nusing System.Globalization;\nusing UnityEngine.Events;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine;\nusing System.IO;\nusing TMPro;\n\npublic class RecentRoomsManager : MonoBehaviour\n{\n    public UserSettings userSettings;\n    public SessionManager SessionManager;\n\n    public GameObject noSavedRoomsObject;\n    public GameObject savedRoomsObject;\n\n    public GameObject recentRoomPrefab;\n    public GameObject loadingPage;\n\n    private bool _initializedSavedRoomsList;\n    private TextInfo _textInfo;\n\n    private const int NumberOfRoomsToLoad = 40;\n\n    public GameObject[] savedRooms;\n    public TextMeshProUGUI[] recentRoomsRoomCodes;\n    public TextMeshProUGUI[] recentRoomsNames;\n    public TextMeshProUGUI[] recentRoomsBrickCounts;\n\n    public PagedScroll pagedScroll;\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    private void OnEnable()\n    {\n        _textInfo = new CultureInfo(\"en-US\", false).TextInfo;\n        RenderSavedRoomsList();\n    }\n\n    private string[] FindSaves() {\n        if(!Directory.Exists($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\"))\n            Directory.CreateDirectory($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\");\n        \n        return Directory.GetFiles($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\")\n            .Where(file => file.EndsWith(\".bricks\")).ToArray();\n    }\n\n    private void RenderNoSavedRooms()\n    {\n        noSavedRoomsObject.SetActive(true);\n        savedRoomsObject.SetActive(false);\n        pagedScroll.DisableButtons();\n    }\n\n    private void RenderSavedRoomsList()\n    {\n        noSavedRoomsObject.SetActive(false);\n        savedRoomsObject.SetActive(true);\n\n        InitializeSavedRoomsList();\n        _initializedSavedRoomsList = true;\n    }\n\n    private void InitializeSavedRoomsList()\n    {\n        string[] rooms = FindSaves();\n\n        if(rooms.Length <= 0) {\n            RenderNoSavedRooms();\n            return;\n        }\n\n        \n\n        // Fixed code starts here\n        foreach (var roomFilename in rooms)\n        {\n            var roomCode = System.IO.Path.GetFileNameWithoutExtension(roomFilename);\n            var roomGameObject = Instantiate(recentRoomPrefab);\n            roomGameObject.transform.SetParent(savedRoomsObject.transform, false);\n\n            TextMeshProUGUI roomCodeText = roomGameObject.transform.GetChild(0).GetComponent<TextMeshProUGUI>();\n            TextMeshProUGUI roomNameText = roomGameObject.transform.GetChild(1).GetComponent<TextMeshProUGUI>();\n            TextMeshProUGUI roomBrickCountText = roomGameObject.transform.GetChild(2).GetComponent<TextMeshProUGUI>();\n\n            roomCodeText.text = roomCode;\n            roomNameText.text = \"Loading...\";\n            roomBrickCountText.text = \"Loading...\";\n\n            var roomPrefab = Instantiate(recentRoomPrefab);\n            roomPrefab.SetActive(false);\n            roomGameObject.SetActive(true);\n\n            SessionManager.LoadRoom(roomCode, (roomId, roomInfo) => {\n                roomGameObject.SetActive(false);\n                roomNameText.text = _textInfo.ToTitleCase(roomInfo.name);\n                roomBrickCountText.text = $\"{roomInfo.brickCount} Bricks\";\n            });\n        }\n        // Fixed code ends here\n    }\n}\n```\nThe fixed code fixes the issue by first calling `FindSaves()` to get the list of saved rooms. Then, it instantiate a `recentRoomPrefab` for each room and sets its parent to `savedRoomsObject`. Then, it populates the room information (name, brick count, etc.) by calling `SessionManager.LoadRoom()` and passing in the room code. Finally, it enables the room game object when the data is loaded.",
    "code_repairing_1": "Here is the corrected code:\n\n\ufeffusing System.Collections.Generic;\nusing System.Globalization;\nusing UnityEngine.Events;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine;\nusing System.IO;\nusing TMPro;\n\npublic class RecentRoomsManager : MonoBehaviour\n{\n    public UserSettings userSettings;\n    public SessionManager SessionManager;\n\n    public GameObject noSavedRoomsObject;\n    public GameObject savedRoomsObject;\n\n    public GameObject recentRoomPrefab;\n    public GameObject loadingPage;\n\n    private bool _initializedSavedRoomsList;\n    private TextInfo _textInfo;\n\n    private const int NumberOfRoomsToLoad = 40;\n\n    public GameObject[] savedRooms;\n    public TextMeshProUGUI[] recentRoomsRoomCodes;\n    public TextMeshProUGUI[] recentRoomsNames;\n    public TextMeshProUGUI[] recentRoomsBrickCounts;\n\n    public PagedScroll pagedScroll;\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    private void OnEnable()\n    {\n        _textInfo = new CultureInfo(\"en-US\", false).TextInfo;\n        RenderSavedRoomsList();\n    }\n\n    private string[] FindSaves()\n    {\n        if(!Directory.Exists($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\"))\n            Directory.CreateDirectory($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\");\n        \n        return Directory.GetFiles($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\")\n            .Where(file => file.EndsWith(\".bricks\")).ToArray();\n    }\n\n    private void RenderNoSavedRooms()\n    {\n        noSavedRoomsObject.SetActive(true);\n        savedRoomsObject.SetActive(false);\n        pagedScroll.DisableButtons();\n    }\n\n    private void RenderSavedRoomsList()\n    {\n        noSavedRoomsObject.SetActive(false);\n        savedRoomsObject.SetActive(true);\n\n        InitializeSavedRoomsList();\n        _initializedSavedRoomsList = true;\n    }\n\n    private void InitializeSavedRoomsList()\n    {\n        string[] rooms = FindSaves();\n\n        if(rooms.Length <= 0) {\n            RenderNoSavedRooms();\n            return;\n        }\n\n        for (int i = 0; i < rooms.Length - 1; i += 2)\n        {\n            GameObject roomUI = Instantiate(recentRoomPrefab, savedRoomsObject.transform);\n            roomUI.transform.localScale = Vector3.one;\n            roomUI.gameObject.SetActive(true);\n\n            string roomName = Path.GetFileNameWithoutExtension(rooms[i]);\n            string roomCode = _textInfo.ToTitleCase(Path.GetDirectoryName(rooms[i]));\n            string roomBrickCountString = rooms[i + 1];\n\n            TextMeshProUGUI[] texts = roomUI.GetComponentsInChildren<TextMeshProUGUI>();\n            texts[0].text = roomCode;\n            texts[1].text = roomName;\n            texts[2].text = roomBrickCountString;\n        }\n\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n        RenderSavedRoomsList();\n        pagedScroll.DisableButtons();\n    }\n}",
    "code_repairing_2": "```\n\ufeffusing System.Collections.Generic;\nusing System.Globalization;\nusing UnityEngine.Events;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine;\nusing System.IO;\nusing TMPro;\n\npublic class RecentRoomsManager : MonoBehaviour\n{\n    public UserSettings userSettings;\n    public SessionManager SessionManager;\n\n    public GameObject noSavedRoomsObject;\n    public GameObject savedRoomsObject;\n\n    public GameObject recentRoomPrefab;\n    public GameObject loadingPage;\n\n    private bool _initializedSavedRoomsList;\n    private TextInfo _textInfo;\n\n    private const int NumberOfRoomsToLoad = 40;\n\n    public GameObject[] savedRooms;\n    public TextMeshProUGUI[] recentRoomsRoomCodes;\n    public TextMeshProUGUI[] recentRoomsNames;\n    public TextMeshProUGUI[] recentRoomsBrickCounts;\n\n    public PagedScroll pagedScroll;\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    private void OnEnable()\n    {\n        _textInfo = new CultureInfo(\"en-US\", false).TextInfo;\n        RenderSavedRoomsList();\n    }\n\n    private string[] FindSaves() {\n        if (!Directory.Exists($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\"))\n            Directory.CreateDirectory($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\");\n        \n        return Directory.GetFiles($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\")\n            .Where(file => file.EndsWith(\".bricks\")).ToArray();\n    }\n\n    private void RenderNoSavedRooms()\n    {\n        noSavedRoomsObject.SetActive(true);\n        savedRoomsObject.SetActive(false);\n        pagedScroll.DisableButtons();\n    }\n\n    private void RenderSavedRoomsList()\n    {\n        noSavedRoomsObject.SetActive(false);\n        savedRoomsObject.SetActive(true);\n\n        \n\n    }\n\n    private void InitializeSavedRoomsList()\n    {\n        string[] rooms = FindSaves();\n\n        if (rooms.Length <= 0) {\n            RenderNoSavedRooms();\n            return;\n        }\n\n        int numberOfRoomsToLoad = NumberOfRoomsToLoad;\n\n        int numberOfRooms = rooms.Length;\n        if (numberOfRooms > numberOfRoomsToLoad)\n            numberOfRooms = NumberOfRoomsToLoad;\n\n        for (int i = 0; i < numberOfRooms; i++)\n        {\n            \n\n        }\n    }\n}\n\n```",
    "code_repairing_3": "Here is the fixed code:\n\n\ufeffusing System.Collections.Generic;\nusing System.Globalization;\nusing UnityEngine.Events;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine;\nusing System.IO;\nusing TMPro;\n\npublic class RecentRoomsManager : MonoBehaviour\n{\n    public UserSettings userSettings;\n    public SessionManager SessionManager;\n\n    public GameObject noSavedRoomsObject;\n    public GameObject savedRoomsObject;\n\n    public GameObject recentRoomPrefab;\n    public GameObject loadingPage;\n\n    private bool _initializedSavedRoomsList;\n    private TextInfo _textInfo;\n\n    private const int NumberOfRoomsToLoad = 40;\n\n    public GameObject[] savedRooms;\n    public TextMeshProUGUI[] recentRoomsRoomCodes;\n    public TextMeshProUGUI[] recentRoomsNames;\n    public TextMeshProUGUI[] recentRoomsBrickCounts;\n\n    public PagedScroll pagedScroll;\n\n    private void OnEnable()\n    {\n        _textInfo = new CultureInfo(\"en-US\", false).TextInfo;\n        RenderSavedRoomsList();\n    }\n\n    private string[] FindSaves()\n    {\n        if(!Directory.Exists($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\"))\n            Directory.CreateDirectory($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\");\n\n        return Directory.GetFiles($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\")\n            .Where(file => file.EndsWith(\".bricks\")).ToArray();\n    }\n\n    private void RenderNoSavedRooms()\n    {\n        noSavedRoomsObject.SetActive(true);\n        savedRoomsObject.SetActive(false);\n        pagedScroll.DisableButtons();\n    }\n\n    private void RenderSavedRoomsList()\n    {\n        noSavedRoomsObject.SetActive(false);\n        savedRoomsObject.SetActive(true);\n\n        InitializeSavedRoomsList();\n        _initializedSavedRoomsList = true;\n    }\n\n    private void InitializeSavedRoomsList()\n    {\n        string[] rooms = FindSaves();\n\n        if(rooms.Length <= 0)\n        {\n            RenderNoSavedRooms();\n          return;\n        }\n\n        \n\n        bool isMoreRoomsAvailable = rooms.Length > NumberOfRoomsToLoad;\n        int numOfRoomsToRender = Mathf.Min(NumberOfRoomsToLoad, rooms.Length);\n\n        for(int i = 0; i < numOfRoomsToRender; i++)\n        {\n            int roomIndex = i;\n\n            string roomName = rooms[roomIndex].Split('/').Last().Replace(\".bricks\", \"\");\n\n            string[] splitName = roomName.Split('-');\n            string shortenedRoomName = \"\";\n            for(int j = 0; j < splitName.Length; j++)\n            {\n                shortenedRoomName += splitName[j].Substring(0, 1).ToUpper() + splitName[j].Substring(1);\n                if(j < splitName.Length - 1)\n                {\n                    shortenedRoomName += \" \";\n                }\n            }\n\n            string roomCode = _textInfo.ToTitleCase(roomName).Replace(\"-\", \" \");\n\n            int brickCount = int.Parse(File.ReadAllText(rooms[roomIndex]).Split(' ').Skip(2).FirstOrDefault());\n\n            //Creating the recent room objects\n            GameObject newRoom = Instantiate(recentRoomPrefab, savedRoomsObject.transform);\n            newRoom.transform.SetAsLastSibling();\n            newRoom.transform.Find(\"RoomName\").GetComponent<TextMeshProUGUI>().text = shortenedRoomName;\n            newRoom.transform.Find(\"RoomCode\").GetComponent<TextMeshProUGUI>().text = roomCode;\n            newRoom.transform.Find(\"BrickCount\").GetComponent<TextMeshProUGUI>().text = brickCount.ToString();\n\n            newRoom.GetComponent<Button>().onClick.AddListener(() =>\n            {\n                loadingPage.SetActive(true);\n                  SessionManager.LoadGame(rooms[roomIndex], () =>\n                {\n                    loadingPage.SetActive(false);\n                  userSettings.autoLoadSave = true;\n                });\n            });\n        }\n\n        if(isMoreRoomsAvailable)\n        {\n            pagedScroll.EnableButtons();\n        }\n        else\n        {\n            pagedScroll.DisableButtons();\n        }\n    }\n}",
    "code_repairing_4": "FIXED CODE:\n\ufeffusing System.Collections.Generic;\nusing System.Globalization;\nusing UnityEngine.Events;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine;\nusing System.IO;\nusing TMPro;\n\npublic class RecentRoomsManager : MonoBehaviour\n{\n    public UserSettings userSettings;\n    public SessionManager SessionManager;\n\n    public GameObject noSavedRoomsObject;\n    public GameObject savedRoomsObject;\n\n    public GameObject recentRoomPrefab;\n    public GameObject loadingPage;\n\n    private bool _initializedSavedRoomsList;\n    private TextInfo _textInfo;\n\n    private const int NumberOfRoomsToLoad = 40;\n\n    public GameObject[] savedRooms;\n    public TextMeshProUGUI[] recentRoomsRoomCodes;\n    public TextMeshProUGUI[] recentRoomsNames;\n    public TextMeshProUGUI[] recentRoomsBrickCounts;\n\n    public PagedScroll pagedScroll;\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    private void OnEnable()\n    {\n        _textInfo = new CultureInfo(\"en-US\", false).TextInfo;\n        RenderSavedRoomsList();\n    }\n\n    private string[] FindSaves() {\n        if(!Directory.Exists($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\"))\n            Directory.CreateDirectory($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\");\n        \n        return Directory.GetFiles($\"{(Application.isEditor ? Application.dataPath : Application.persistentDataPath)}/saves/\")\n            .Where(file => file.EndsWith(\".bricks\")).ToArray();\n    }\n\n    private void RenderNoSavedRooms()\n    {\n        noSavedRoomsObject.SetActive(true);\n        savedRoomsObject.SetActive(false);\n        pagedScroll.DisableButtons();\n    }\n\n    private void RenderSavedRoomsList()\n    {\n        noSavedRoomsObject.SetActive(false);\n        savedRoomsObject.SetActive(true);\n\n        InitializeSavedRoomsList();\n        _initializedSavedRoomsList = true;\n    }\n\n    private void InitializeSavedRoomsList()\n    {\n        string[] rooms = FindSaves();\n\n        if(rooms.Length <= 0) {\n            RenderNoSavedRooms();\n            return;\n        }\n\n        savedRooms = new GameObject[rooms.Length];\n        recentRoomsRoomCodes = new TextMeshProUGUI[rooms.Length];\n        recentRoomsNames = new TextMeshProUGUI[rooms.Length];\n        recentRoomsBrickCounts = new TextMeshProUGUI[rooms.Length];\n\n        for (int i = 0; i < rooms.Length; i++)\n        {\n            string roomName = _textInfo.ToTitleCase(Path.GetDirectoryName(rooms[i]));\n            string roomCode = Path.GetFileName(rooms[i]).Replace(\".bricks\", \"\");\n            int brickCount = File.ReadAllText(rooms[i]).Split('-').Length - 1;\n\n            savedRooms[i] = Instantiate(recentRoomPrefab, savedRoomsObject.transform);\n            recentRoomsRoomCodes[i] = savedRooms[i].transform.Find(\"Room Code\").GetComponent<TextMeshProUGUI>();\n            recentRoomsNames[i] = savedRooms[i].transform.Find(\"Room Name\").GetComponent<TextMeshProUGUI>();\n            recentRoomsBrickCounts[i] = savedRooms[i].transform.Find(\"Brick Count\").GetComponent<TextMeshProUGUI>();\n\n            recentRoomsRoomCodes[i].text = roomCode;\n            recentRoomsNames[i].text = roomName;\n            recentRoomsBrickCounts[i].text = brickCount.ToString();\n        }\n    }\n}"
}
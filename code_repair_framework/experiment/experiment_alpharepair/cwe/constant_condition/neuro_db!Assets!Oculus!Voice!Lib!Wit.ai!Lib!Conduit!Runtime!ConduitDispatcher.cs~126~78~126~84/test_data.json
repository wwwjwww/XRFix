{
  "test_code": "        public bool InvokeAction(IParameterProvider parameterProvider, string actionId, bool relaxed,\n            float confidence = 1f, bool partial = false)\n        {\n            if (!Manifest.ContainsAction(actionId))\n            {\n                var hasBeenHandledWithoutConduit = Manifest.WitResponseMatcherIntents.Contains(actionId);\n                if (!_ignoredActionIds.Contains(actionId) && !hasBeenHandledWithoutConduit)\n                {\n                    _ignoredActionIds.Add(actionId);\n                    InvokeError(actionId, new Exception($\"Conduit did not find intent '{actionId}' in manifest.\"));\n                    VLog.W($\"Conduit did not find intent '{actionId}' in manifest.\");\n                }\n                return false;\n            }\n\n            parameterProvider.PopulateRoles(_parameterToRoleMap);\n\n            var filter =\n                new InvocationContextFilter(parameterProvider, Manifest.GetInvocationContexts(actionId), relaxed);\n\n            var invocationContexts = filter.ResolveInvocationContexts(actionId, confidence, partial);\n            if (invocationContexts.Count < 1)\n            {\n\n                if (!partial && filter.ResolveInvocationContexts(actionId, confidence, true).Count < 1)\n                {\n                   VLog.W(\n                        $\"Failed to resolve {(partial ? \"partial\" : \"final\")} method for {actionId} with supplied context\");\n<BUGS>                   InvokeError(actionId, new Exception($\"Failed to resolve {(partial ? \"partial\" : \"final\")} method for {actionId} with supplied context\")\n<BUGE>                   );\n                }\n\n                return false;\n            }\n\n            var allSucceeded = true;\n            foreach (var invocationContext in invocationContexts)\n            {\n                try\n                {\n                    if (!InvokeMethod(invocationContext, parameterProvider, relaxed))\n                    {\n                        allSucceeded = false;\n                    }\n                }\n                catch (Exception e)\n                {\n                    VLog.W($\"Failed to invoke {invocationContext.MethodInfo.Name}. {e}\");\n                    allSucceeded = false;\n                    InvokeError( invocationContext.MethodInfo.Name, e);\n                }\n            }\n\n            return allSucceeded;\n        }\n"
}
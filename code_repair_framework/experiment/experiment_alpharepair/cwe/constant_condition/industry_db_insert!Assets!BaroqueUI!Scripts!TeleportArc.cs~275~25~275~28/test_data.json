{
  "test_code": "        private float FindProjectileCollision(out RaycastHit hitInfo)\n        {\n            float timeStep = arcDuration / segmentCount;\n            float segmentStartTime = 0.0f;\n\n            hitInfo = new RaycastHit();\n\n            Vector3 segmentStartPos = GetArcPositionAtTime(segmentStartTime);\n            for (int i = 0; i < segmentCount; ++i)\n            {\n                float segmentEndTime = segmentStartTime + timeStep;\n                Vector3 segmentEndPos = GetArcPositionAtTime(segmentEndTime);\n\n                if (Physics.Linecast(segmentStartPos, segmentEndPos, out hitInfo, traceLayerMask))\n                {\n#if false\n                    if (hitInfo.collider.GetComponent<IgnoreTeleportTrace>() == null)\n#else\n<BUGS>                    if (true)\n<BUGE>#endif\n                    {\n#if false\n                        Util.DrawCross(hitInfo.point, Color.red, 0.5f);\n#endif\n                        float segmentDistance = Vector3.Distance(segmentStartPos, segmentEndPos);\n                        float hitTime = segmentStartTime + (timeStep * (hitInfo.distance / segmentDistance));\n                        return hitTime;\n                    }\n                }\n\n                segmentStartTime = segmentEndTime;\n                segmentStartPos = segmentEndPos;\n            }\n\n            return float.MaxValue;\n        }\n"
}
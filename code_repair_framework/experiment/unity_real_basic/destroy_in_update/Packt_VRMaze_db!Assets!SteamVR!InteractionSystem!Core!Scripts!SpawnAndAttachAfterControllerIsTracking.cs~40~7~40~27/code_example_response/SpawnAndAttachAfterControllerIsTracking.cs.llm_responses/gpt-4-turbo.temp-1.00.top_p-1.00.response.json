"{\"id\":\"chatcmpl-BrmdcxbT7id5GQWhNJyUjL98xv1yV\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool isAttached = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (!isAttached && itemPrefab != null)\\n            {\\n                if (hand.controller != null && hand.controller.hasTracking)\\n                {\\n                    GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n                    objectToAttach.SetActive(true);\\n                    hand.AttachObject(objectToAttach);\\n                    hand.controller.TriggerHapticPulse(800);\\n                    objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n                    isAttached = true;\\n                    Destroy(gameObject);\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n\\n\\tpublic class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n\\t{\\n\\t\\tprivate Hand hand;\\n\\t\\tpublic GameObject itemPrefab;\\n\\n\\t\\tvoid Start()\\n\\t\\t{\\n\\t\\t\\thand = GetComponentInParent<Hand>();\\n\\t\\t}\\n\\n\\t\\tIEnumerator AttachWhenTracking()\\n\\t\\t{\\n\\t\\t\\twhile (true)\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (itemPrefab != null)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (hand.controller != null)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tif (hand.controller.hasTracking)\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\tGameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n\\t\\t\\t\\t\\t\\t\\tobjectToAttach.SetActive(true);\\n\\t\\t\\t\\t\\t\\t\\thand.AttachObject(objectToAttach);\\n\\t\\t\\t\\t\\t\\t\\thand.controller.TriggerHapticPulse(800);\\n\\n\\t\\t\\t\\t\\t\\t\\tobjectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n\\n\\t\\t\\t\\t\\t\\t\\tDestroy(gameObject);\\n\\t\\t\\t\\t\\t\\t\\tyield break; // Exit coroutine after destroying the gameObject\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tyield return null;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tvoid OnEnable()\\n\\t\\t{\\n\\t\\t\\tStartCoroutine(AttachWhenTracking());\\n\\t\\t}\\n\\t}\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n\\tpublic class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n\\t{\\n\\t\\tprivate Hand hand;\\n\\t\\tpublic GameObject itemPrefab;\\n\\t\\tprivate bool hasAttached = false; // Added a flag to track if the attachment has been done\\n\\n\\t\\tvoid Start()\\n\\t\\t{\\n\\t\\t\\thand = GetComponentInParent<Hand>();\\n\\t\\t}\\n\\n\\t\\tvoid Update()\\n\\t\\t{\\n\\t\\t\\tif (itemPrefab != null && !hasAttached) // Check the flag\\n\\t\\t\\t{\\n\\t\\t\\t\\tif (hand.controller != null)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tif (hand.controller.hasTracking)\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\tGameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n\\t\\t\\t\\t\\t\\tobjectToAttach.SetActive(true);\\n\\t\\t\\t\\t\\t\\thand.AttachObject(objectToAttach);\\n\\t\\t\\t\\t\\t\\thand.controller.TriggerHapticPulse(800);\\n\\n\\t\\t\\t\\t\\t\\tobjectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n\\t\\t\\t\\t\\t\\thasAttached = true; // Set the flag to true to avoid re-attaching\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool hasSpawned = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n        \\n        void Update()\\n        {\\n            if (!hasSpawned && itemPrefab != null)\\n            {\\n                if (hand.controller != null && hand.controller.hasTracking)\\n                {\\n                    GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n                    objectToAttach.SetActive(true);\\n                    hand.AttachObject(objectToAttach);\\n                    hand.controller.TriggerHapticPulse(800);\\n\\n                    objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n\\n                    // Mark as spawned to prevent repeating the action every frame\\n                    hasSpawned = true;\\n\\n                    // Safely schedule object destruction, replacing it with Destroy in Update.\\n                    Destroy(gameObject, 1f);\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool hasSpawned = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (!hasSpawned && itemPrefab != null && hand.controller != null && hand.controller.hasTracking)\\n            {\\n                GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n                objectToAttach.SetActive(true);\\n                hand.AttachObject(objectToAttach);\\n                hand.controller.TriggerHapticPulse(800);\\n\\n                objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n                hasSpawned = true; // Ensure the object is instantiated only once\\n                Destroy(gameObject); // Move Destroy call outside Update\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752158048,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":1115,\"prompt_tokens\":684,\"total_tokens\":1799,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
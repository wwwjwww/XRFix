{
    "code_repairing_0": "```\n\t\tvoid Update()\n\t\t{\n\t\t\tif ((burnTime != 0) && (Time.time > (ignitionTime + burnTime)) && isBurning)\n\t\t\t{\n\t\t\t\tisBurning = false;\n\t\t\t\tif (customParticles != null)\n\t\t\t\t{\n\t\t\t\t\tcustomParticles.Stop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDestroy(fireObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n```",
    "code_repairing_1": "The code you provided has a lot of unnecessary and redundant logic that can be simplified and improved. Here's the fixed code based on the improvements you requested:\n\n\ufeff//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n\n\n\n\n\nusing UnityEngine;\nusing System.Collections;\n\nnamespace Valve.VR.InteractionSystem\n{\n\n\tpublic class FireSource : MonoBehaviour\n\t{\n\t\tpublic GameObject fireParticlePrefab;\n\t\tpublic bool startActive;\n\t\tprivate GameObject fireObject;\n\n\t\tpublic ParticleSystem customParticles;\n\n\t\tpublic bool isBurning;\n\n\t\tpublic float burnTime;\n\t\tpublic float ignitionDelay = 0;\n\t\tprivate float ignitionTime;\n\n\t\tprivate Hand hand;\n\n\t\tpublic AudioSource ignitionSound;\n\n\t\tpublic bool canSpreadFromThisSource = true;\n\n\n\t\tvoid Start()\n\t\t{\n\t\t\tif ( startActive )\n\t\t\t{\n\t\t\t\tStartBurning();\n\t\t\t}\n\t\t}\n\n\n\n\t\tvoid Update()\n\t\t{\n\t\t\tif ( isBurning && Time.time > (ignitionTime + burnTime) )\n\t\t\t{\n\t\t\t\tisBurning = false;\n\t\t\t\tif (customParticles != null)\n\t\t\t\t{\n\t\t\t\t\tcustomParticles.Stop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDestroy(fireObject);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic void StartBurning()\n\t\t{\n\t\t\tisBurning = true;\n\t\t\tignitionTime = Time.time + ignitionDelay;\n\t\t\tif (ignitionSound != null)\n\t\t\t{\n\t\t\t\tignitionSound.Play();\n\t\t\t}\n\t\t\tif (customParticles != null)\n\t\t\t{\n\t\t\t\tcustomParticles.Play();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfireObject = Instantiate(fireParticlePrefab, transform.position, transform.rotation);\n\t\t\t\tDestroy(fireObject, burnTime);\n\t\t\t}\n\t\t}\n\t}\n}",
    "code_repairing_2": "\ufeff//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n\n\n\n\n\nusing UnityEngine;\nusing System.Collections;\n\nnamespace Valve.VR.InteractionSystem\n{\n\n\tpublic class FireSource : MonoBehaviour\n\t{\n\t\tpublic GameObject fireParticlePrefab;\n\t\tpublic bool startActive;\n\t\tprivate GameObject fireObject;\n\n\t\tpublic ParticleSystem customParticles;\n\n\t\tpublic bool isBurning;\n\n\t\tpublic float burnTime;\n\t\tpublic float ignitionDelay = 0;\n\t\tprivate float ignitionTime;\n\n\t\tprivate Hand hand;\n\n\t\tpublic AudioSource ignitionSound;\n\n\t\tpublic bool canSpreadFromThisSource = true;\n\n\n\t\tvoid Start()\n\t\t{\n\t\t\tif ( startActive )\n\t\t\t{\n\t\t\t\tStartBurning();\n\t\t\t}\n\t\t}\n\n\n\n\t\tvoid Update()\n\t\t{\n\t\t\tif ( ( burnTime != 0 ) && ( Time.time > ( ignitionTime + burnTime ) ) && isBurning )\n\t\t\t{\n\t\t\t\tisBurning = false;\n\t\t\t\tif ( customParticles != null )\n\t\t\t\t{\n\t\t\t\t\tcustomParticles.Stop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDestroy( fireObject );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
    "code_repairing_3": "```\n\ufeff//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n\n\n\n\n\nusing UnityEngine;\nusing System.Collections;\n\nnamespace Valve.VR.InteractionSystem\n{\n\n\tpublic class FireSource : MonoBehaviour\n\t{\n\t\tpublic GameObject fireParticlePrefab;\n\t\tpublic bool startActive;\n\t\tprivate GameObject fireObject;\n\n\t\tpublic ParticleSystem customParticles;\n\n\t\tpublic bool isBurning;\n\n\t\tpublic float burnTime;\n\t\tpublic float ignitionDelay = 0;\n\t\tprivate float ignitionTime;\n\n\t\tprivate Hand hand;\n\n\t\tpublic AudioSource ignitionSound;\n\n\t\tpublic bool canSpreadFromThisSource = true;\n\n\n\t\tvoid Start()\n\t\t{\n\t\t\tif ( startActive )\n\t\t\t{\n\t\t\t\tStartBurning();\n\t\t\t}\n\t\t}\n\n\n\n\t\tvoid Update()\n\t\t{\n\t\t\tif ( ( burnTime != 0 ) && ( Time.time > ( ignitionTime + burnTime ) ) && isBurning )\n\t\t\t{\n\t\t\t\tisBurning = false;\n\t\t\t\tif ( customParticles != null )\n\t\t\t\t{\n\t\t\t\t\tcustomParticles.Stop();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// FIXED CODE:\n\t\t\t\t\tDestroy( fireObject );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n```",
    "code_repairing_4": "Here are the code snippets with the fixed code:\n\n\ufeff//======= Copyright (c) Valve Corporation, All rights reserved. ===============\n\n\n\n\n\n\ufeffusing UnityEngine;\n\ufeffusing System.Collections;\n\ufeff\n\ufeffnamespace Valve.VR.InteractionSystem\n\ufeff{\n\n\ufeffpublic class FireSource : MonoBehaviour\n\ufeff{\n\ufeff\t\ufeffpublic GameObject fireParticlePrefab;\n\ufeff\t\ufeffpublic bool startActive;\n\ufeff\t\ufeffprivate GameObject fireObject;\n\n\ufeff\t\ufeffpublic ParticleSystem customParticles;\n\n\ufeff\t\ufeffpublic bool isBurning;\n\n\ufeff\t\ufeffpublic float burnTime;\n\ufeff\t\ufeffpublic float ignitionDelay = 0;\n\ufeff\t\ufeffprivate float ignitionTime;\n\n\ufeff\t\ufeffprivate Hand hand;\n\n\ufeff\t\ufeffpublic AudioSource ignitionSound;\n\n\ufeff\t\ufeffpublic bool canSpreadFromThisSource = true;\n\n\n\ufeff\t\ufeffvoid Start()\n\ufeff\t{\n\ufeff\t\t\ufeffif ( startActive )\n\ufeff\t\t{\n\ufeff\t\t\t\ufeffStartBurning();\n\ufeff\t\t}\n\ufeff\t}\n\n\n\ufeff\t\ufeffvoid Update()\n\ufeff\t{\n\ufeff\t\t\ufeffif ( ( burnTime != 0 ) && ( Time.time > ( ignitionTime + burnTime ) ) && isBurning )\n\ufeff\t\t{\n\ufeff\t\t\t\ufeffisBurning = false;\n\ufeff\t\t\t\ufeffif ( customParticles != null )\n\ufeff\t\t\t{\n\ufeff\t\t\t\t\ufeffcustomParticles.Stop();\n\ufeff\t\t\t}\n\ufeff\t\t\t\ufeffelse\n\ufeff\t\t\t{\n\ufeff\t\t\t\t\ufeffDestroy( fireObject );\n\ufeff\t\t\t}\n\ufeff\t\t}\n\ufeff\t}"
}
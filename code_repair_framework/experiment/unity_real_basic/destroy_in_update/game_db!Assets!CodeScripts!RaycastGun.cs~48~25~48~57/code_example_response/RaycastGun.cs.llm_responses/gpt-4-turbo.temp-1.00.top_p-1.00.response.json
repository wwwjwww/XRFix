"{\"id\":\"chatcmpl-BrmcvNvyjAhExMLMrnHTGJsvPPcX5\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n\\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject;\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        // Store the object to destroy\\n                        destroyObject.Add(hit.transform.gameObject); \\n                        Object = null;\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n\\n        // Process destroyObject list outside of the main input check\\n        if (destroyObject.Count > 0)\\n        {\\n            DestroyObjectsInList();\\n        }\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void DestroyObjectsInList()\\n    {\\n        foreach (GameObject obj in destroyObject)\\n        {\\n            Destroy(obj);\\n        }\\n        destroyObject.Clear();\\n    }\\n\\n    void GameOver()\\n    {\\n        // Game Over logic\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n\\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject; // List of objects to destroy\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        StartCoroutine(DestroyGameObjectCoroutine(hit.transform.gameObject));\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    private IEnumerator DestroyGameObjectCoroutine(GameObject target)\\n    {\\n        yield return new WaitForEndOfFrame(); // Add slight delay\\n        Destroy(target);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n \\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject; // List of objects to destroy\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n\\n                        // Queue the destruction of the object\\n                        StartCoroutine(DestroyObject(hit.transform.gameObject));\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    IEnumerator DestroyObject(GameObject target)\\n    {\\n        yield return new WaitForEndOfFrame();\\n        Destroy(target);\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void GameOver()\\n    {\\n        // Your Game Over logic\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n \\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject;\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n    \\n    public void DestroyObject(GameObject obj)\\n    {\\n        if (destroyObject.Contains(obj))\\n        {\\n            destroyObject.Remove(obj);\\n            Destroy(obj);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        DestroyObject(hit.transform.gameObject);\\n                        Object = null;\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void GameOver()\\n    {\\n        SceneManager.LoadScene(\\\"GameOver\\\");\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\n[RequireComponent(typeof(LineRenderer))]\\npublic class RaycastGun : MonoBehaviour\\n{\\n    public Camera playerCamera;\\n    public Transform laserOrigin;\\n    public GameObject Object;\\n    private bool isPlayerOnObject = false;\\n    public GameObject player;\\n    public float gunRange = 50f;\\n    public float fireRate = 0.2f;\\n    public float laserDuration = 0.05f;\\n \\n    LineRenderer laserLine;\\n    float fireTimer;\\n\\n    AudioManager audioManager;\\n    public List<GameObject> destroyObject; // List of objects to destroy\\n\\n    void Awake()\\n    {\\n        laserLine = GetComponent<LineRenderer>();\\n        audioManager = GameObject.FindGameObjectWithTag(\\\"Audio\\\").GetComponent<AudioManager>();\\n    }\\n\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        StartCoroutine(DestroyObject(hit.transform.gameObject)); // Schedule destruction\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n                \\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    IEnumerator DestroyObject(GameObject obj)\\n    {\\n        yield return new WaitForEndOfFrame(); // Wait until the end of frame\\n        Destroy(obj);\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void GameOver()\\n    {\\n        // Implement the game over logic here\\n        Debug.Log(\\\"Game Over!\\\");\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752158005,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":2546,\"prompt_tokens\":907,\"total_tokens\":3453,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
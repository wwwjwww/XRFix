"{\"id\":\"chatcmpl-B3IkuLstNgfYje5N5BNvrYQYnKkn3\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer >= fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        Destroy(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n\\n                        if (Object == null)\\n                        {\\n                            audioManager.PlaySFX(audioManager.disappearSound);\\n                            GameOver();\\n                        }\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n            }\\n        }\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        Destroy(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    void GameOver()\\n    {\\n        // Implement game over logic here, e.g. load a game over scene\\n        SceneManager.LoadScene(\\\"GameOverScene\\\");\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n\\n                        Destroy(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    private IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    private void OnTriggerEnter(Collider other)\\n    {\\n        if (other.gameObject == player)\\n        {\\n            isPlayerOnObject = true;\\n        }\\n    }\\n\\n    private void OnTriggerExit(Collider other)\\n    {\\n        if (other.gameObject == player)\\n        {\\n            isPlayerOnObject = false;\\n        }\\n    }\\n\\n    private void GameOver()\\n    {\\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex); // Reload current scene\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    Destroy(hit.transform.gameObject);\\n                    Object = null; // Destroyed object\\n                }\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n            StartCoroutine(ShootLaser());\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void Update()\\n    {\\n        if (isPlayerOnObject)\\n        {\\n            fireTimer += Time.deltaTime;\\n            if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n            {\\n                fireTimer = 0;\\n                laserLine.SetPosition(0, laserOrigin.position);\\n                Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n                RaycastHit hit;\\n                if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n                {\\n                    if (hit.collider.gameObject == Object)\\n                    {\\n                        audioManager.PlaySFX(audioManager.swordSound);\\n                        laserLine.SetPosition(1, hit.point);\\n                        audioManager.PlaySFX(audioManager.disappearSound);\\n                        Destroy(hit.transform.gameObject);\\n                        Object = null; // Destroyed object\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n\\n                if (Object == null)\\n                {\\n                    GameOver();\\n                }\\n            }\\n        }\\n    }\\n\\n    private IEnumerator ShootLaser()\\n    {\\n        laserLine.enabled = true;\\n        yield return new WaitForSeconds(laserDuration);\\n        laserLine.enabled = false;\\n    }\\n\\n    private void GameOver()\\n    {\\n        // Implement game over logic, such as loading a new scene\\n        SceneManager.LoadScene(\\\"GameOverScene\\\");\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740126780,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_eb9dce56a8\",\"usage\":{\"completion_tokens\":1518,\"prompt_tokens\":525,\"total_tokens\":2043,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
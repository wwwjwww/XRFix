{
    "code_repairing_0": "// This code uses C# 8.0 features like init-only properties and lambdas. \n\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing TMPro;\n\npublic class ThrowingTutorial : MonoBehaviour\n{\n    [Header(\"References\")]\n    public Transform cam;\n    public Transform attackPoint;\n    public GameObject objectToThrow;\n    public GameObject armorObject;\n    public GameObject swordObject;\n    public GameObject player;\n\n    [Header(\"Settings\")]\n    public int totalThrows;\n    public float throwCooldown; //after each throw\n\n    [Header(\"Throwing\")]\n    public KeyCode throwKey = KeyCode.K;\n    public float throwForce;\n\n    bool readyToThrow;\n\n    private int throwCounter = 0; // counts throws\n    private bool inCollider = false; // tracks if player is in collider\n\n    AudioManager audioManager;\n\n    private void Awake()\n    {\n        audioManager = GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>();\n    }\n\n    private void Start()\n    {\n        readyToThrow = true;\n    }\n\n    private void Update()\n    {\n        if (inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\n        {\n            Throw();\n        }\n    }\n\n    private void Throw()\n    {\n        readyToThrow = false;\n\n        if (throwCounter < totalThrows)\n        {\n            audioManager.PlaySFX(audioManager.axeSound);\n\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\n            throwCounter++;\n        }\n        else if (throwCounter == totalThrows)\n        {\n            audioManager.PlaySFX(audioManager.disappearSound);\n            armorObject.SetActive(false); // Make the armor disappear\n            audioManager.PlaySFX(audioManager.appearSound);\n            swordObject.SetActive(true); // Make the sword appear\n        }\n\n        totalThrows--;\n\n        Invoke(nameof(ResetThrow), throwCooldown);\n    }\n\n    private void ResetThrow()\n    {\n        readyToThrow = true;\n    }\n}",
    "code_repairing_1": "Aqu\u00ed est\u00e1 una lista de las provincias",
    "code_repairing_2": "You have come to the right place! I will be your personal guide, and together we will learn everything you need to know about 3D printing.\n\nWhat is 3D printing?\n3D printing is a process of making a three-dimensional object from a digital model by laying down successive layers of material. This material can be anything from plastic to metal, and the finished object is created by building up material from the bottom up.\n\nWhy do we 3D print?\n3D printing has many applications, including prototyping, manufacturing, and personal use. Prototyping is when we use 3D printing to create a physical model of a product or idea so that we can test it out and get feedback before making the final version. Manufacturing is when we use 3D printing to make many identical copies of a product, often in just a few hours. Personal use is when someone uses a 3D printer to make something for themselves, such as a toy or jewelry.\n\nDifferent types of 3D printers\nThere are several different types of 3D printers, each with their own pros and cons. The main types of 3D printers are:\n\nFDM (Fused Deposition Modeling) Printers: These are the most common type of 3D printer and use a heated nozzle to melt and fuse filament material, typically plastic, one layer at a time. They are usually affordable and easy to use, but the quality of the final product can vary.\n\nSLA (Stereolithography) Printer",
    "code_repairing_3": "To create a Discord bot in Python, you'll need to use the",
    "code_repairing_4": "I'm sorry, I am"
}
"{\"id\":\"chatcmpl-B4fuMQhRdWHjjNySc0FcXDwaKwXGp\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n\\n    private Queue<GameObject> objectPool;\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        objectPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            if (objectPool.Count > 0) {\\n                GameObject temp = objectPool.Dequeue();\\n                temp.transform.position = transform.position;\\n                temp.transform.rotation = transform.rotation;\\n                temp.SetActive(true);\\n                Rigidbody rb = temp.GetComponent<Rigidbody>();\\n                if (rb != null) {\\n                    rb.AddForce(transform.forward * force, ForceMode.Impulse);\\n                }\\n                Launchable launchable = temp.GetComponent<Launchable>();\\n                if (launchable != null) {\\n                    launchable.Player = player;\\n                    launchable.button = button;\\n                }\\n            }\\n        }\\n    }\\n\\n    public void ReturnToPool(GameObject returnedObject) {\\n        returnedObject.SetActive(false);\\n        objectPool.Enqueue(returnedObject);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n    \\n    private Queue<GameObject> objectPool = new Queue<GameObject>();\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject temp = Instantiate(launchObject, transform.position, transform.rotation);\\n            temp.SetActive(false);\\n            objectPool.Enqueue(temp);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.SetActive(true);\\n            temp.GetComponent<Rigidbody>().velocity = Vector3.zero; // Reset velocity\\n            temp.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n            temp.GetComponent<Launchable>().Player = player;\\n            temp.GetComponent<Launchable>().button = button;\\n            StartCoroutine(DeactivateAndEnqueue(temp));\\n        }\\n    }\\n\\n    IEnumerator DeactivateAndEnqueue(GameObject launchedObject) {\\n        yield return new WaitForSeconds(3); // Adjust the duration as needed\\n        launchedObject.SetActive(false);\\n        objectPool.Enqueue(launchedObject);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour\\n{\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n    private List<GameObject> objectPool = new List<GameObject>();\\n    private int poolSize = 10;\\n\\n    void Start()\\n    {\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Add(obj);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        if (Input.GetButtonDown(button))\\n        {\\n            GameObject obj = GetPooledObject();\\n            if (obj != null)\\n            {\\n                obj.transform.position = transform.position;\\n                obj.transform.rotation = transform.rotation;\\n                obj.SetActive(true);\\n                obj.GetComponent<Rigidbody>().velocity = Vector3.zero;\\n                obj.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n                obj.GetComponent<Launchable>().Player = player;\\n                obj.GetComponent<Launchable>().button = button;\\n            }\\n        }\\n    }\\n\\n    GameObject GetPooledObject()\\n    {\\n        foreach (GameObject obj in objectPool)\\n        {\\n            if (!obj.activeInHierarchy)\\n            {\\n                return obj;\\n            }\\n        }\\n        return null;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Start() {\\n    // Initialize object pool\\n    objectPool = new List<GameObject>();\\n}\\n\\nvoid Update() {\\n    if (Input.GetButtonDown(button)) {\\n        // Reuse object from pool if available, otherwise instantiate a new one\\n        GameObject temp = GetPooledObject();\\n        if (temp == null) {\\n            temp = Instantiate(launchObject, transform.position, transform.rotation);\\n            AddToPool(temp);\\n        } else {\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.SetActive(true);\\n        }\\n        \\n        Rigidbody rb = temp.GetComponent<Rigidbody>();\\n        if (rb != null) {\\n            rb.AddForce(transform.forward * force, ForceMode.Impulse);\\n        }\\n        \\n        Launchable launchScript = temp.GetComponent<Launchable>();\\n        if (launchScript != null) {\\n            launchScript.Player = player;\\n            launchScript.button = button;\\n        }\\n    }\\n}\\n\\nprivate List<GameObject> objectPool;\\n\\nprivate GameObject GetPooledObject() {\\n    foreach (GameObject obj in objectPool) {\\n        if (!obj.activeInHierarchy) {\\n            return obj;\\n        }\\n    }\\n    return null;\\n}\\n\\nprivate void AddToPool(GameObject obj) {\\n    obj.SetActive(false);\\n    objectPool.Add(obj);\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n    private Queue<GameObject> objectPool;\\n    private int poolSize = 10;\\n\\n    void Start() {\\n        objectPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n    \\n    void Update () {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.SetActive(true);\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            Rigidbody rb = temp.GetComponent<Rigidbody>();\\n            if (rb != null) {\\n                rb.velocity = Vector3.zero;\\n                rb.AddForce(transform.forward * force, ForceMode.Impulse);\\n            }\\n            Launchable launchable = temp.GetComponent<Launchable>();\\n            if (launchable != null) {\\n                launchable.Player = player;\\n                launchable.button = button;\\n            }\\n        }\\n    }\\n\\n    public void ReturnToPool(GameObject obj) {\\n        obj.SetActive(false);\\n        objectPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740454106,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_eb9dce56a8\",\"usage\":{\"completion_tokens\":1502,\"prompt_tokens\":265,\"total_tokens\":1767,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
"{\"id\":\"chatcmpl-BrnjiOzHzbNBVWxoks3RfCZ60xYJX\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"    void LateUpdate()\\n    {\\n\\n        transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n        if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n        {\\n            return;\\n        }\\n\\n        Vector3 tipPosition = transform.position;\\n        switch (brushStatus)\\n        {\\n            case BrushState.Idle:\\n                if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n                {\\n                    UndoInkLine();\\n                }\\n\\n                if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n                {\\n                    StartLine(tipPosition);\\n                    brushStatus = BrushState.Inking;\\n                }\\n\\n                break;\\n            case BrushState.Inking:\\n\\n                UpdateLine(tipPosition);\\n                if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n                {\\n                    brushStatus = BrushState.Idle;\\n                }\\n\\n                break;\\n        }\\n    }\\n\\n    void StartLine(Vector3 inkPos)\\n    {\\n        GameObject newLine = PoolManager.Instance.GetPooledObject();\\n        newLine.transform.position = inkPos;\\n        newLine.transform.rotation = Quaternion.identity;\\n\\n        currentLineSegment = newLine.GetComponent<LineRenderer>();\\n        currentLineSegment.positionCount = 1;\\n        currentLineSegment.SetPosition(0, inkPos);\\n        strokeWidth = currentLineSegment.startWidth;\\n        strokeLength = 0.0f;\\n        inkPositions.Clear();\\n        inkPositions.Add(inkPos);\\n        newLine.transform.parent = lineContainer.transform;\\n        newLine.SetActive(true);\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = ObjectPool.Instance.GetPooledObject(lineSegmentPrefab);\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"void Update()\\n{\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = GetPooledObject();\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"    void LateUpdate()\\n    {\\n        transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n        if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n        {\\n            return;\\n        }\\n\\n        Vector3 tipPosition = transform.position;\\n        switch (brushStatus)\\n        {\\n            case BrushState.Idle:\\n                if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n                {\\n                    UndoInkLine();\\n                }\\n\\n                if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n                {\\n                    StartLine(tipPosition);\\n                    brushStatus = BrushState.Inking;\\n                }\\n\\n                break;\\n            case BrushState.Inking:\\n\\n                UpdateLine(tipPosition);\\n                if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n                {\\n                    brushStatus = BrushState.Idle;\\n                }\\n\\n                break;\\n        }\\n    }\\n\\n    void StartLine(Vector3 inkPos)\\n    {\\n        GameObject newLine = ObjectPool.Instance.GetPooledObject();\\n        currentLineSegment = newLine.GetComponent<LineRenderer>();\\n        currentLineSegment.positionCount = 1;\\n        currentLineSegment.SetPosition(0, inkPos);\\n        strokeWidth = currentLineSegment.startWidth;\\n        strokeLength = 0.0f;\\n        inkPositions.Clear();\\n        inkPositions.Add(inkPos);\\n        newLine.transform.parent = lineContainer.transform;\\n    }\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"void LateUpdate()\\n{\\n    transform.rotation = Quaternion.LookRotation(transform.position - Camera.main.transform.position);\\n\\n    if (!(controllerHand == OVRInput.Controller.LTouch || controllerHand == OVRInput.Controller.RTouch))\\n    {\\n        return;\\n    }\\n\\n    Vector3 tipPosition = transform.position;\\n    switch (brushStatus)\\n    {\\n        case BrushState.Idle:\\n            if (OVRInput.GetUp(OVRInput.Button.One, controllerHand))\\n            {\\n                UndoInkLine();\\n            }\\n\\n            if (OVRInput.GetDown(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                StartLine(tipPosition);\\n                brushStatus = BrushState.Inking;\\n            }\\n\\n            break;\\n        case BrushState.Inking:\\n\\n            UpdateLine(tipPosition);\\n            if (OVRInput.GetUp(OVRInput.Button.PrimaryIndexTrigger, controllerHand))\\n            {\\n                brushStatus = BrushState.Idle;\\n            }\\n\\n            break;\\n    }\\n}\\n\\nvoid StartLine(Vector3 inkPos)\\n{\\n    GameObject newLine = GetPooledObject();\\n    currentLineSegment = newLine.GetComponent<LineRenderer>();\\n    currentLineSegment.positionCount = 1;\\n    currentLineSegment.SetPosition(0, inkPos);\\n    strokeWidth = currentLineSegment.startWidth;\\n    strokeLength = 0.0f;\\n    inkPositions.Clear();\\n    inkPositions.Add(inkPos);\\n    newLine.transform.parent = lineContainer.transform;\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752162270,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1488,\"prompt_tokens\":994,\"total_tokens\":2482,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
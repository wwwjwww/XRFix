"{\"id\":\"chatcmpl-BrmojgEvyc4NiFkcUpzEQrZfE99sl\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour\\n{\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private Queue<GameObject> enemyPool;\\n    public int initialPoolSize = 5;\\n\\n    void Start()\\n    {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n\\n        enemyPool = new Queue<GameObject>();\\n        for (int i = 0; i < initialPoolSize; i++)\\n        {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Enqueue(enemyObject);\\n        }\\n\\n        StartCoroutine(SpawnEnemies());\\n    }\\n\\n    IEnumerator SpawnEnemies()\\n    {\\n        while (!isGamerOver)\\n        {\\n            if (enemyPointer < player.cameraRig.transform.position.z)\\n            {\\n                enemyPointer += spawnDistanceFromEnemy;\\n\\n                GameObject enemyObject = GetPooledEnemy();\\n                enemyObject.transform.position = new Vector3(\\n                    Random.Range(-4f, 4f),\\n                    Random.Range(2.5f, 6.5f),\\n                    player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemyObject.SetActive(true);\\n            }\\n\\n            yield return new WaitForSeconds(1f); \\n        }\\n    }\\n\\n    GameObject GetPooledEnemy()\\n    {\\n        foreach (var enemy in enemyPool)\\n        {\\n            if (!enemy.activeInHierarchy)\\n            {\\n                return enemy;\\n            }\\n        }\\n\\n        GameObject enemyObject = Instantiate(enemyPrefab);\\n        enemyObject.SetActive(false);\\n        enemyPool.Enqueue(enemyObject);\\n        return enemyObject;\\n    }\\n\\n    void Update()\\n    {\\n        gameTimer += Time.deltaTime;\\n\\n        if (isGamerOver == false)\\n        {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true)\\n            {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        }\\n        else\\n        {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;\\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0)\\n            {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemyPool;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0, 0, finishLinePosition);\\n\\n        enemyPool = new List<GameObject>();\\n        for (int i = 0; i < 10; i++)\\n        {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Add(enemyObject);\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            SpawnEnemy();\\n        }\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n            if (player.reachedFinishLine == true) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n\\n    private void SpawnEnemy() {\\n        for (int i = 0; i < enemyPool.Count; i++) {\\n            if (!enemyPool[i].activeInHierarchy) {\\n                enemyPool[i].transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemyPool[i].SetActive(true);\\n                return;\\n            }\\n        }\\n\\n        GameObject enemyObject = Instantiate(enemyPrefab);\\n        enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n        enemyPool.Add(enemyObject);\\n        Debug.LogWarning(\\\"Expanded enemy pool. Consider increasing initial pool size.\\\");\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemies;\\n    public int initialEnemyCount = 10;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);\\n\\n        enemies = new List<GameObject>();\\n        for (int i = 0; i < initialEnemyCount; i++)\\n        {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemies.Add(enemyObject);\\n        }\\n    }\\n\\n    void Update() {\\n\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            if (TryGetInactiveEnemy(out GameObject enemyObject))\\n            {\\n                enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemyObject.SetActive(true);\\n                enemyPointer += spawnDistanceFromEnemy;\\n            }\\n        }\\n\\n        gameTimer += Time.deltaTime;\\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score  +  \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  \\n            player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    \\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n\\n    }\\n\\n    private bool TryGetInactiveEnemy(out GameObject enemy)\\n    {\\n        foreach (var e in enemies)\\n        {\\n            if (!e.activeInHierarchy)\\n            {\\n                enemy = e;\\n                return true;\\n            }\\n        }\\n        enemy = null;\\n        return false;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    private List<GameObject> enemyPool;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");\\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);\\n\\n        enemyPool = new List<GameObject>();\\n        for (int i = 0; i < 10; i++) \\n        {\\n            GameObject enemyObject = Instantiate(enemyPrefab);\\n            enemyObject.SetActive(false);\\n            enemyPool.Add(enemyObject);\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n            SpawnEnemy();\\n        }\\n\\n        gameTimer += Time.deltaTime;   \\n\\n        if (!isGamerOver) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine) {\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  \\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f;  player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name);\\n            }\\n        }\\n    }\\n\\n    void SpawnEnemy() {\\n        foreach (GameObject enemy in enemyPool) {\\n            if (!enemy.activeInHierarchy) {\\n                enemy.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n                enemy.SetActive(true);\\n                return;\\n            }\\n        }\\n\\n        GameObject enemyObject = Instantiate(enemyPrefab);\\n        enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n        enemyPool.Add(enemyObject);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\nusing UnityEngine.SceneManagement;\\n\\npublic class GameManager : MonoBehaviour {\\n\\n    public GameObject enemyPrefab;\\n    public Player player;\\n\\n    private float enemyPointer;     // Calculator for distance of player to enemy\\n    public float spawnDistanceFromPlayer = 20f;\\n    public float spawnDistanceFromEnemy = 5f;\\n    public int enemyPoolSize = 10;\\n    private Queue<GameObject> enemyPool;\\n\\n    public TextMesh uiText;\\n\\n    public float gameTimer;\\n    private float finalTime;\\n    private int finalScore;\\n    private bool isGamerOver = false;\\n    private float gameOverTimer = 4.5f;\\n\\n    public GameObject finishLine;\\n    public float finishLinePosition = 200f;\\n\\n    void Start() {\\n        finishLine = GameObject.Find(\\\"FinishLine\\\");   // Import the Finish Line game object \\n        finishLine.transform.position = new Vector3(0,0,finishLinePosition);  // Location to place the finish line object\\n        \\n        // Initialize enemy pool\\n        enemyPool = new Queue<GameObject>();\\n        for (int i = 0; i < enemyPoolSize; i++)\\n        {\\n            GameObject enemy = Instantiate(enemyPrefab);\\n            enemy.SetActive(false);\\n            enemyPool.Enqueue(enemy);\\n        }\\n    }\\n\\n    GameObject GetPooledEnemy()\\n    {\\n        if (enemyPool.Count > 0)\\n        {\\n            GameObject enemy = enemyPool.Dequeue();\\n            enemy.SetActive(true);\\n            return enemy;\\n        }\\n        else\\n        {\\n            GameObject enemy = Instantiate(enemyPrefab);\\n            return enemy;\\n        }\\n    }\\n\\n    void Update() {\\n        if (enemyPointer < player.cameraRig.transform.position.z) {\\n            enemyPointer += spawnDistanceFromEnemy;\\n\\n            GameObject enemyObject = GetPooledEnemy();\\n            enemyObject.transform.position = new Vector3(Random.Range(-4f, 4f), Random.Range(2.5f, 6.5f), player.cameraRig.transform.position.z + spawnDistanceFromPlayer);\\n        }\\n\\n        gameTimer += Time.deltaTime;   // Increment the game timer \\n\\n        if (isGamerOver == false) {\\n            uiText.text = \\\"Time: \\\" + Mathf.FloorToInt(gameTimer) + \\\"   Score: \\\" + player.score + \\\"   Speed: \\\" + Mathf.Floor(player.speed);\\n\\n            if (player.reachedFinishLine == true) { // Change Boolean when player hits finish line and save the final time and score\\n                isGamerOver = true;\\n                finalTime = gameTimer;\\n                finalScore = player.score;\\n            }\\n        } else {  // What to do when the player hits the finish line\\n            uiText.text = \\\"Game Over!\\\\nTime: \\\" + Mathf.FloorToInt(finalTime) + \\\"   Score: \\\" + finalScore + \\\"\\\\nRestarting in: \\\" + Mathf.Floor(gameOverTimer);\\n            player.speed = 0.3f; player.maxSpeed = 0.75f;\\n\\n            gameOverTimer -= Time.deltaTime;    // Gamer restart logic\\n            if (gameOverTimer <= 0) {\\n                SceneManager.LoadScene(SceneManager.GetActiveScene().name); \\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752158737,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":3253,\"prompt_tokens\":1063,\"total_tokens\":4316,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
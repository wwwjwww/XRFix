"{\"id\":\"chatcmpl-BpuZSlSWyLpagQ7Iqb4DkOOktEjUB\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private GameObject m_AndyObject;\\n\\n        public void Awake()\\n        {\\n            // Pre-instantiate the Andy object and deactivate it\\n            m_AndyObject = Instantiate(_GetAndyPrefab());\\n            m_AndyObject.SetActive(false);\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                }\\n            }\\n\\n            if (m_LastPlacedAnchor != null)\\n            {\\n                // Position and activate pre-instantiated Andy object\\n                m_AndyObject.transform.position = m_LastPlacedAnchor.transform.position;\\n                m_AndyObject.transform.rotation = m_LastPlacedAnchor.transform.rotation;\\n                m_AndyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n\\n                m_AndyObject.transform.parent = m_LastPlacedAnchor.transform;\\n                m_AndyObject.SetActive(true);\\n\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n        public RoomSharingServer RoomSharingServer;\\n\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n        public GameObject ARCoreRoot;\\n\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n        public GameObject ARKitRoot;\\n\\n        public Camera ARKitFirstPersonCamera;\\n\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n\\n        private const float k_ModelRotation = 180.0f;\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n\\n        private bool m_IsQuitting = false;\\n\\n        private Component m_LastPlacedAnchor = null;\\n\\n        private XPAnchor m_LastResolvedAnchor = null;\\n\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n\\n        private int m_CurrentRoom;\\n\\n        private List<GameObject> m_AndyPool = new List<GameObject>();\\n        private int m_CurrentPoolIndex = 0;\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n            _InitializeAndyPool(10); // Initialize the pool with a certain number of Andy objects\\n        }\\n\\n        private void _InitializeAndyPool(int poolSize)\\n        {\\n            for (int i = 0; i < poolSize; i++)\\n            {\\n                var andyObject = Instantiate(_GetAndyPrefab(), Vector3.zero, Quaternion.identity);\\n                andyObject.SetActive(false);\\n                m_AndyPool.Add(andyObject);\\n            }\\n        }\\n\\n        private GameObject _GetPooledAndyObject()\\n        {\\n            var andyObject = m_AndyPool[m_CurrentPoolIndex];\\n            m_CurrentPoolIndex = (m_CurrentPoolIndex + 1) % m_AndyPool.Count;\\n            return andyObject;\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                }\\n            }\\n\\n            if (m_LastPlacedAnchor != null)\\n            {\\n                var andyObject = _GetPooledAndyObject();\\n                andyObject.transform.position = m_LastPlacedAnchor.transform.position;\\n                andyObject.transform.rotation = m_LastPlacedAnchor.transform.rotation;\\n                andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n                andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n                andyObject.SetActive(true);\\n\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//-----------------------------------------------------------------------\\n\\nnamespace GoogleARCore.Examples.CloudAnchor\\n{\\n    using System.Collections.Generic;\\n    using GoogleARCore;\\n    using GoogleARCore.CrossPlatform;\\n    using GoogleARCore.Examples.Common;\\n    using UnityEngine;\\n    using UnityEngine.UI;\\n\\n#if UNITY_EDITOR\\n\\n    using Input = InstantPreviewInput;\\n#endif\\n\\n    public class CloudAnchorController : MonoBehaviour\\n    {\\n        public RoomSharingServer RoomSharingServer;\\n        public CloudAnchorUIController UIController;\\n\\n        [Header(\\\"ARCore\\\")]\\n        public GameObject ARCoreRoot;\\n        public GameObject ARCoreAndyAndroidPrefab;\\n\\n        [Header(\\\"ARKit\\\")]\\n        public GameObject ARKitRoot;\\n        public Camera ARKitFirstPersonCamera;\\n        public GameObject ARKitAndyAndroidPrefab;\\n\\n        private const string k_LoopbackIpAddress = \\\"127.0.0.1\\\";\\n        private const float k_ModelRotation = 180.0f;\\n\\n        private ARKitHelper m_ARKit = new ARKitHelper();\\n        private bool m_IsQuitting = false;\\n        private Component m_LastPlacedAnchor = null;\\n        private XPAnchor m_LastResolvedAnchor = null;\\n        private ApplicationMode m_CurrentMode = ApplicationMode.Ready;\\n        private int m_CurrentRoom;\\n        \\n        private GameObject m_AndyObjectPool;\\n\\n        public enum ApplicationMode\\n        {\\n            Ready,\\n            Hosting,\\n            Resolving,\\n        }\\n\\n        public void Start()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                ARCoreRoot.SetActive(true);\\n                ARKitRoot.SetActive(false);\\n            }\\n            else\\n            {\\n                ARCoreRoot.SetActive(false);\\n                ARKitRoot.SetActive(true);\\n            }\\n\\n            _ResetStatus();\\n\\n            // Initialize the Andy object pool\\n            m_AndyObjectPool = new GameObject(\\\"AndyObjectPool\\\");\\n            m_AndyObjectPool.SetActive(false); // Disable pool initially\\n        }\\n\\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                }\\n            }\\n\\n            if (m_LastPlacedAnchor != null)\\n            {\\n                var andyObject = Instantiate(_GetAndyPrefab(), m_LastPlacedAnchor.transform.position,\\n                        m_LastPlacedAnchor.transform.rotation, m_AndyObjectPool.transform);\\n\\n                andyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n                andyObject.transform.parent = m_LastPlacedAnchor.transform;\\n\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n\\n        private GameObject _GetAndyPrefab()\\n        {\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                return ARCoreAndyAndroidPrefab;\\n            }\\n            else\\n            {\\n                return ARKitAndyAndroidPrefab;\\n            }\\n        }\\n\\n        private void _ResetStatus()\\n        {\\n            m_LastPlacedAnchor = null;\\n            m_LastResolvedAnchor = null;\\n            m_CurrentMode = ApplicationMode.Ready;\\n        }\\n\\n        private void _UpdateApplicationLifecycle()\\n        {\\n            // Handle application lifecycle here (e.g., check for quitting, handle life cycle events).\\n        }\\n\\n        private void _HostLastPlacedAnchor()\\n        {\\n            // Hosting logic for the last placed anchor.\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\npublic class CloudAnchorController : MonoBehaviour\\n{\\n    // Omitted code for brevity\\n\\n    private GameObject m_AndyObject;\\n\\n    public void Start()\\n    {\\n        // Omitted code for brevity\\n        m_AndyObject = Instantiate(_GetAndyPrefab());\\n        m_AndyObject.SetActive(false);\\n        _ResetStatus();\\n    }\\n\\n    public void Update()\\n    {\\n        _UpdateApplicationLifecycle();\\n\\n        if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n        {\\n            return;\\n        }\\n\\n        Touch touch;\\n        if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n        {\\n            return;\\n        }\\n\\n        Pose hitPose;\\n        if (Application.platform != RuntimePlatform.IPhonePlayer)\\n        {\\n            TrackableHit hit;\\n            if (Frame.Raycast(touch.position.x, touch.position.y,\\n                    TrackableHitFlags.PlaneWithinPolygon, out hit))\\n            {\\n                m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n            }\\n        }\\n        else\\n        {\\n            if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n            {\\n                m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n            }\\n        }\\n\\n        if (m_LastPlacedAnchor != null)\\n        {\\n            m_AndyObject.transform.position = m_LastPlacedAnchor.transform.position;\\n            m_AndyObject.transform.rotation = m_LastPlacedAnchor.transform.rotation;\\n            m_AndyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n            m_AndyObject.transform.parent = m_LastPlacedAnchor.transform;\\n            m_AndyObject.SetActive(true);\\n            _HostLastPlacedAnchor();\\n        }\\n    }\\n\\n    // Omitted code for brevity\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n        private GameObject m_AndyObject;\\n\\n        public void Awake()\\n        {\\n            m_AndyObject = Instantiate(_GetAndyPrefab());\\n            m_AndyObject.SetActive(false);\\n        }\\n        \\n        public void Update()\\n        {\\n            _UpdateApplicationLifecycle();\\n\\n            if (m_CurrentMode != ApplicationMode.Hosting || m_LastPlacedAnchor != null)\\n            {\\n                return;\\n            }\\n\\n            Touch touch;\\n            if (Input.touchCount < 1 || (touch = Input.GetTouch(0)).phase != TouchPhase.Began)\\n            {\\n                return;\\n            }\\n\\n            if (Application.platform != RuntimePlatform.IPhonePlayer)\\n            {\\n                TrackableHit hit;\\n                if (Frame.Raycast(touch.position.x, touch.position.y,\\n                        TrackableHitFlags.PlaneWithinPolygon, out hit))\\n                {\\n                    m_LastPlacedAnchor = hit.Trackable.CreateAnchor(hit.Pose);\\n                }\\n            }\\n            else\\n            {\\n                Pose hitPose;\\n                if (m_ARKit.RaycastPlane(ARKitFirstPersonCamera, touch.position.x, touch.position.y, out hitPose))\\n                {\\n                    m_LastPlacedAnchor = m_ARKit.CreateAnchor(hitPose);\\n                }\\n            }\\n\\n            if (m_LastPlacedAnchor != null)\\n            {\\n                m_AndyObject.transform.position = m_LastPlacedAnchor.transform.position;\\n                m_AndyObject.transform.rotation = m_LastPlacedAnchor.transform.rotation;\\n                m_AndyObject.transform.Rotate(0, k_ModelRotation, 0, Space.Self);\\n                m_AndyObject.transform.parent = m_LastPlacedAnchor.transform;\\n                m_AndyObject.SetActive(true);\\n\\n                _HostLastPlacedAnchor();\\n            }\\n        }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1751711886,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":2758,\"prompt_tokens\":807,\"total_tokens\":3565,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
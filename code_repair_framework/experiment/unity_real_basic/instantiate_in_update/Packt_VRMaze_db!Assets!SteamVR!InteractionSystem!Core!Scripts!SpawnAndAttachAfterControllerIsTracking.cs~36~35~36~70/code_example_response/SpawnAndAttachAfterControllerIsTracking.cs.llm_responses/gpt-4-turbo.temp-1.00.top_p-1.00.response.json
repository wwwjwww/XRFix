"{\"id\":\"chatcmpl-BrmzdS22PzoGadxTmawMXHkgu4Fyf\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool objectAttached = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (itemPrefab != null && !objectAttached)\\n            {\\n                if (hand.controller != null && hand.controller.hasTracking)\\n                {\\n                    GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n                    objectToAttach.SetActive(true);\\n                    hand.AttachObject(objectToAttach);\\n                    hand.controller.TriggerHapticPulse(800);\\n                    objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n                    Destroy(gameObject);\\n                    objectAttached = true;\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n\\n\\tpublic class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n\\t{\\n\\t\\tprivate Hand hand;\\n\\t\\tpublic GameObject itemPrefab;\\n\\t\\tprivate bool isObjectSpawned = false;\\n\\n\\t\\tvoid Start()\\n\\t\\t{\\n\\t\\t\\thand = GetComponentInParent<Hand>();\\n\\t\\t}\\n\\n\\t\\tvoid Update()\\n\\t\\t{\\n\\t\\t\\tif (!isObjectSpawned && itemPrefab != null && hand.controller != null && hand.controller.hasTracking)\\n\\t\\t\\t{\\n\\t\\t\\t\\tGameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n\\t\\t\\t\\tobjectToAttach.SetActive(true);\\n\\t\\t\\t\\thand.AttachObject(objectToAttach);\\n\\t\\t\\t\\thand.controller.TriggerHapticPulse(800);\\n\\t\\t\\t\\tDestroy(gameObject);\\n\\n\\t\\t\\t\\tobjectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n\\t\\t\\t\\tisObjectSpawned = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n\ufeff//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool hasSpawned = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (!hasSpawned && itemPrefab != null)\\n            {\\n                if (hand.controller != null && hand.controller.hasTracking)\\n                {\\n                    GameObject objectToAttach = Instantiate(itemPrefab);\\n                    objectToAttach.SetActive(true);\\n                    hand.AttachObject(objectToAttach);\\n                    hand.controller.TriggerHapticPulse(800);\\n                    Destroy(gameObject);\\n\\n                    objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n                    hasSpawned = true;\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool objectAttached = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (!objectAttached && itemPrefab != null)\\n            {\\n                if (hand.controller != null)\\n                {\\n                    if (hand.controller.hasTracking)\\n                    {\\n                        GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n                        objectToAttach.SetActive(true);\\n                        hand.AttachObject(objectToAttach);\\n                        hand.controller.TriggerHapticPulse(800);\\n                        objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n                        Destroy(gameObject);\\n                        objectAttached = true;\\n                    }\\n                }\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n//======= Copyright (c) Valve Corporation, All rights reserved. ===============\\n\\nusing UnityEngine;\\nusing System.Collections;\\n\\nnamespace Valve.VR.InteractionSystem\\n{\\n    public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour\\n    {\\n        private Hand hand;\\n        public GameObject itemPrefab;\\n        private bool hasSpawned = false;\\n\\n        void Start()\\n        {\\n            hand = GetComponentInParent<Hand>();\\n        }\\n\\n        void Update()\\n        {\\n            if (!hasSpawned && itemPrefab != null)\\n            {\\n                if (hand.controller != null && hand.controller.hasTracking)\\n                {\\n                    SpawnAndAttach();\\n                    hasSpawned = true;\\n                }\\n            }\\n        }\\n\\n        private void SpawnAndAttach()\\n        {\\n            GameObject objectToAttach = GameObject.Instantiate(itemPrefab);\\n            objectToAttach.SetActive(true);\\n            hand.AttachObject(objectToAttach);\\n            hand.controller.TriggerHapticPulse(800);\\n            objectToAttach.transform.localScale = itemPrefab.transform.localScale;\\n            Destroy(gameObject);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1752159413,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":1035,\"prompt_tokens\":696,\"total_tokens\":1731,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
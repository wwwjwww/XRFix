"{\"id\":\"chatcmpl-B4j2N02KT4CX9TV0x4XctHlsUTfo8\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n\\n    private List<GameObject> arrowPool = new List<GameObject>();\\n    private int poolSize = 5;\\n\\n    private void Start()\\n    {\\n        for (int i = 0; i < poolSize; i++)\\n        {\\n            GameObject arrow = Instantiate(arrowPrefab);\\n            arrow.SetActive(false);\\n            arrowPool.Add(arrow);\\n        }\\n    }\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrow();\\n            }\\n            else if (isAttached)\\n            {\\n                Fire();\\n            }\\n        }\\n        else ThrowArrow();\\n    }\\n\\n    public void AttachArrow()\\n    {\\n        foreach (GameObject arrow in arrowPool)\\n        {\\n            if (!arrow.activeInHierarchy)\\n            {\\n                currentArrow = arrow;\\n                currentArrow.transform.position = controler.transform.position;\\n                currentArrow.transform.rotation = controler.transform.rotation;\\n                currentArrow.SetActive(true);\\n                hasArrow = true;\\n                break;\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n    \\n    private List<GameObject> arrowPool = new List<GameObject>();\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Start()\\n    {\\n        for (int i = 0; i < 10; i++)\\n        {\\n            GameObject arrow = Instantiate(arrowPrefab, controler.transform);\\n            arrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n            arrow.GetComponent<Rigidbody>().isKinematic = true;\\n            arrow.SetActive(false);\\n            arrowPool.Add(arrow);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrow();\\n            }\\n            else if (isAttached)\\n            {\\n                Fire();\\n            }\\n        }\\n        else\\n        {\\n            ThrowArrow();\\n        }\\n    }\\n\\n    public void AttachArrow()\\n    {\\n        if (arrowPool.Count > 0)\\n        {\\n            currentArrow = arrowPool[0];\\n            arrowPool.RemoveAt(0);\\n            currentArrow.transform.SetParent(controler.transform);\\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n            currentArrow.SetActive(true);\\n            hasArrow = true;\\n        }\\n    }\\n}\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"public void AttachArrow()\\n{\\n    if (currentArrow == null)\\n    {\\n        currentArrow = Instantiate(arrowPrefab, controler.transform.position, controler.transform.rotation);\\n        currentArrow.transform.parent = controler.transform;\\n        currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n        currentArrow.GetComponent<Rigidbody>().isKinematic = true;\\n        hasArrow = true;\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nList<GameObject> arrowPool = new List<GameObject>();\\nint poolSize = 5;\\n\\nvoid Start()\\n{\\n    for (int i = 0; i < poolSize; i++)\\n    {\\n        GameObject newArrow = Instantiate(arrowPrefab);\\n        newArrow.SetActive(false);\\n        arrowPool.Add(newArrow);\\n    }\\n}\\n\\nvoid Update()\\n{\\n    // Your existing code in Update() method...\\n}\\n\\npublic void AttachArrow()\\n{\\n    foreach (GameObject arrow in arrowPool)\\n    {\\n        if (!arrow.activeInHierarchy)\\n        {\\n            currentArrow = arrow;\\n            currentArrow.transform.position = controler.transform.position;\\n            currentArrow.transform.rotation = controler.transform.rotation;\\n            currentArrow.SetActive(true);\\n            hasArrow = true;\\n            break;\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"public class ArrowManager : MonoBehaviour\\n{\\n    private GameObject currentArrow;\\n    public static ArrowManager Instance;\\n    public OVRInput.Controller controller;\\n    public GameObject controler;\\n    public GameObject arrowPrefab;\\n    public GameObject LastArrow;\\n    public GameObject arrowStartPoint;\\n    public TextMesh debug;\\n    private bool hasArrow = false;\\n    private bool isAttached = false;\\n    \\n    private List<GameObject> arrowPool = new List<GameObject>();\\n    private int poolSize = 10;\\n\\n    void Awake()\\n    {\\n        if (Instance == null)\\n            Instance = this;\\n\\n        for(int i=0; i<poolSize; i++)\\n        {\\n            GameObject newArrow = Instantiate(arrowPrefab, controler.transform);\\n            newArrow.SetActive(false);\\n            arrowPool.Add(newArrow);\\n        }\\n    }\\n\\n    void OnDestroy()\\n    {\\n        if (Instance == this)\\n            Instance = null;\\n    }\\n\\n    void Update()\\n    {\\n        debug.text = controler.transform.rotation.x.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.y.ToString() +\\n                     \\\"\\\\n\\\" + controler.transform.rotation.z.ToString();\\n\\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\\n        {\\n            if (!hasArrow)\\n            {\\n                AttachArrow();\\n            }\\n            else if (isAttached)\\n            {\\n                Fire();\\n            }\\n        }\\n        else\\n        {\\n            ThrowArrow();\\n        }\\n    }\\n\\n    public void AttachArrow()\\n    {\\n        for(int i=0; i < arrowPool.Count; i++)\\n        {\\n            if(!arrowPool[i].activeInHierarchy)\\n            {\\n                currentArrow = arrowPool[i];\\n                currentArrow.SetActive(true);\\n                currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\\n                currentArrow.GetComponent<Rigidbody>().isKinematic = true;\\n                hasArrow = true;\\n                break;\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740466135,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1439,\"prompt_tokens\":484,\"total_tokens\":1923,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
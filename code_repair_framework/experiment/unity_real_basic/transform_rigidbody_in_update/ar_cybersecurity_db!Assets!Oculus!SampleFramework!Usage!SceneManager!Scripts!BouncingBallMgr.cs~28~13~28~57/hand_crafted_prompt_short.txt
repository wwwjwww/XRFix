//Here're the buggy code lines from /Assets/Oculus/SampleFramework/Usage/SceneManager/Scripts/BouncingBallMgr.cs:
using UnityEngine;

// BUG: Transform object of Rigidbody in Update() methods
// MESSAGE: Rigidbody needs to be transformed in FixedUpdate() methods to simulate real-world movement.
//    private void Update()
//    {
//        if (!ballGrabbed && OVRInput.GetDown(actionBtn))
//        {
//            currentBall = Instantiate(ball, rightControllerPivot.transform.position, Quaternion.identity);
//            currentBall.transform.parent = rightControllerPivot.transform;
//            ballGrabbed = true;
//        }
//
//        if (ballGrabbed && OVRInput.GetUp(actionBtn))
//        {
//            currentBall.transform.parent = null;
//            var ballPos = currentBall.transform.position;
//            var vel = trackingspace.rotation * OVRInput.GetLocalControllerVelocity(OVRInput.Controller.RTouch);
//            var angVel = OVRInput.GetLocalControllerAngularVelocity(OVRInput.Controller.RTouch);
//            currentBall.GetComponent<BouncingBallLogic>().Release(ballPos, vel, angVel);
//            ballGrabbed = false;
//        }
//    }
//Here's the definition of function call in another component.
//Related code from /Assets/Oculus/SampleFramework/Usage/SceneManager/Scripts/BouncingBallLogic.cs:
using System.Collections;
using UnityEngine;

//    public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
//    {
//        isReleased = true;
//        transform.position = pos; // set the orign to match target
//        GetComponent<Rigidbody>().isKinematic = false;
//        GetComponent<Rigidbody>().velocity = vel;
//        GetComponent<Rigidbody>().angularVelocity = angVel;
//    }

// FIXED CODE:

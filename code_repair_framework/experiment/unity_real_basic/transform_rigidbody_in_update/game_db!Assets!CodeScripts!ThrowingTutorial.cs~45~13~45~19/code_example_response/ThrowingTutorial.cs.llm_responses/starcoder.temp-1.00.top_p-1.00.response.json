{
    "code_repairing_0": "```csharp\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ThrowingTutorial : MonoBehaviour\n{\n    [Header(\"References\")]\n    public Transform cam;\n    public Transform attackPoint;\n    public GameObject objectToThrow;\n    public GameObject armorObject;\n    public GameObject swordObject;\n    public GameObject player;\n\n    [Header(\"Settings\")]\n    public int totalThrows;\n    public float throwCooldown; //after each throw\n\n    [Header(\"Throwing\")]\n    public KeyCode throwKey = KeyCode.K;\n    public float throwForce;\n\n    bool readyToThrow;\n\n    private int throwCounter = 0; // counts throws\n    private bool inCollider = false; // tracks if player is in collider\n\n    AudioManager audioManager;\n\n    private void Awake()\n    {\n        audioManager = GameObject.FindGameObjectWithTag(\"Audio\").GetComponent<AudioManager>();\n    }\n\n    private void Start()\n    {\n        readyToThrow = true;\n    }\n\n    private void FixedUpdate()\n    {\n        if (inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)\n        {\n            Throw();\n        }\n    }\n\n    private void Throw()\n    {\n        readyToThrow = false;\n\n        if (throwCounter < totalThrows)\n        {\n            audioManager.PlaySFX(audioManager.axeSound);\n\n            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);\n            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();\n            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);\n            throwCounter++;\n        }\n        else if (throwCounter == totalThrows)\n        {\n            audioManager.PlaySFX(audioManager.disappearSound);\n            armorObject.SetActive(false); // Make the armor disappear\n            audioManager.PlaySFX(audioManager.appearSound);\n            swordObject.SetActive(true); // Make the sword appear\n        }\n\n        totalThrows--;\n\n        Invoke(nameof(ResetThrow), throwCooldown);\n    }\n\n    private void ResetThrow()\n    {\n        readyToThrow = true;\n    }\n\n    private void OnTriggerEnter(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            inCollider = true;\n        }\n    }\n\n    private void OnTriggerExit(Collider other)\n    {\n        if (other.CompareTag(\"Player\"))\n        {\n            inCollider = false;\n        }\n    }\n}\n```",
    "code_repairing_1": "PyTorch is a powerful",
    "code_repairing_2": "Bendita sea la casa en la que vivo,\ncuidada y amable como la que soy.\n\nMi cari\u00f1o la protege y le da vida,\nque en paz reposee y seale todo am",
    "code_repairing_3": "To cite a YouTube video in APA Style, you need to provide the following information:",
    "code_repairing_4": "Here's an example of how to rotate a game object every frame in C# using Unity's built-in functionality:\n\n```csharp\nusing UnityEngine;\n\npublic class ExampleScript : MonoBehaviour"
}
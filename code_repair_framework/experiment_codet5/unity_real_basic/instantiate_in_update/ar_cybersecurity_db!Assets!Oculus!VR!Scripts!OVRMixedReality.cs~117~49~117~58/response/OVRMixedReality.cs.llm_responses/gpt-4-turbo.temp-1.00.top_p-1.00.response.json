"{\"id\":\"chatcmpl-BpvpsufeijfS3LwhE1XdtHtTAXUSr\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\ninternal static class OVRMixedReality\\n{\\n    private static OVRExternalComposition cachedComposition = null;\\n    private static bool isInitialized = false;\\n\\n    public static bool useFakeExternalCamera = false;\\n\\n    public static Vector3 fakeCameraFloorLevelPosition = new Vector3(0.0f, 2.0f, -0.5f);\\n    public static Vector3 fakeCameraEyeLevelPosition = fakeCameraFloorLevelPosition - new Vector3(0.0f, 1.8f, 0.0f);\\n\\n    public static Quaternion fakeCameraRotation = Quaternion.LookRotation(\\n        (new Vector3(0.0f, fakeCameraFloorLevelPosition.y, 0.0f) - fakeCameraFloorLevelPosition).normalized,\\n        Vector3.up);\\n\\n    public static float fakeCameraFov = 60.0f;\\n    public static float fakeCameraAspect = 16.0f / 9.0f;\\n\\n    public static OVRComposition currentComposition = null;\\n\\n    public static void Initialize(GameObject parentObject, Camera mainCamera, OVRMixedRealityCaptureConfiguration configuration)\\n    {\\n        if (isInitialized) return;\\n\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            OVRPlugin.InitializeMixedReality();\\n            if (OVRPlugin.IsMixedRealityInitialized())\\n            {\\n                Debug.Log(\\\"OVRPlugin_MixedReality initialized\\\");\\n            }\\n            else\\n            {\\n                Debug.LogError(\\\"Unable to initialize OVRPlugin_MixedReality\\\");\\n                return;\\n            }\\n        }\\n\\n        if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n        {\\n            if (cachedComposition == null)\\n            {\\n                cachedComposition = new OVRExternalComposition(parentObject, mainCamera, configuration);\\n                currentComposition = cachedComposition;\\n            }\\n        }\\n        else\\n        {\\n            Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            return;\\n        }\\n\\n        isInitialized = true;\\n    }\\n\\n    public static void Update(GameObject parentObject, Camera mainCamera, OVRMixedRealityCaptureConfiguration configuration, OVRManager.TrackingOrigin trackingOrigin)\\n    {\\n        if (!isInitialized) return;\\n\\n        OVRPlugin.UpdateExternalCamera();\\n#if !OVR_ANDROID_MRC\\n        OVRPlugin.UpdateCameraDevices();\\n#endif\\n\\n#if OVR_ANDROID_MRC\\n        useFakeExternalCamera = OVRPlugin.Media.UseMrcDebugCamera();\\n#endif\\n\\n        if (currentComposition != null && (currentComposition.CompositionMethod() != configuration.compositionMethod))\\n        {\\n            currentComposition.Cleanup();\\n            currentComposition = null;\\n        }\\n\\n        if (currentComposition == null)\\n        {\\n            currentComposition = cachedComposition;\\n        }\\n\\n        if (currentComposition != null)\\n        {\\n            currentComposition.Update(parentObject, mainCamera, configuration, trackingOrigin);\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\ninternal static class OVRMixedReality\\n{\\n    public static bool useFakeExternalCamera = false;\\n    public static Vector3 fakeCameraFloorLevelPosition = new Vector3(0.0f, 2.0f, -0.5f);\\n    public static Vector3 fakeCameraEyeLevelPosition = fakeCameraFloorLevelPosition - new Vector3(0.0f, 1.8f, 0.0f);\\n    public static Quaternion fakeCameraRotation = Quaternion.LookRotation(\\n        (new Vector3(0.0f, fakeCameraFloorLevelPosition.y, 0.0f) - fakeCameraFloorLevelPosition).normalized,\\n        Vector3.up);\\n    public static float fakeCameraFov = 60.0f;\\n    public static float fakeCameraAspect = 16.0f / 9.0f;\\n    public static OVRComposition currentComposition = null;\\n    private static bool initializedMixedReality = false;\\n\\n    // Method to initialize mixed reality if not already initialized\\n    private static void InitializeMixedRealityIfNeeded()\\n    {\\n        if (!initializedMixedReality)\\n        {\\n            if (!OVRPlugin.IsMixedRealityInitialized())\\n            {\\n                OVRPlugin.InitializeMixedReality();\\n                if (!OVRPlugin.IsMixedRealityInitialized())\\n                {\\n                    Debug.LogError(\\\"Unable to initialize OVRPlugin_MixedReality\\\");\\n                    return;\\n                }\\n                else\\n                {\\n                    Debug.Log(\\\"OVRPlugin_MixedReality initialized\\\");\\n                }\\n            }\\n            initializedMixedReality = true;\\n        }\\n    }\\n\\n    public static void Update(GameObject parentObject, Camera mainCamera,\\n        OVRMixedRealityCaptureConfiguration configuration, OVRManager.TrackingOrigin trackingOrigin)\\n    {\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        InitializeMixedRealityIfNeeded();\\n\\n        if (!initializedMixedReality)\\n        {\\n            return;\\n        }\\n\\n        OVRPlugin.UpdateExternalCamera();\\n#if !OVR_ANDROID_MRC\\n        OVRPlugin.UpdateCameraDevices();\\n#endif\\n\\n#if OVR_ANDROID_MRC\\n        useFakeExternalCamera = OVRPlugin.Media.UseMrcDebugCamera();\\n#endif\\n\\n        if (currentComposition != null && (currentComposition.CompositionMethod() != configuration.compositionMethod))\\n        {\\n            currentComposition.Cleanup();\\n            currentComposition = null;\\n        }\\n\\n        if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n        {\\n            if (currentComposition == null)\\n            {\\n                currentComposition = new OVRExternalComposition(parentObject, mainCamera, configuration);\\n            }\\n        }\\n        else\\n        {\\n            Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            return;\\n        }\\n\\n        currentComposition.Update(parentObject, mainCamera, configuration, trackingOrigin);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\ninternal static class OVRMixedReality\\n{\\n    public static bool useFakeExternalCamera = false;\\n\\n    public static Vector3 fakeCameraFloorLevelPosition = new Vector3(0.0f, 2.0f, -0.5f);\\n    public static Vector3 fakeCameraEyeLevelPosition = fakeCameraFloorLevelPosition - new Vector3(0.0f, 1.8f, 0.0f);\\n\\n    public static Quaternion fakeCameraRotation = Quaternion.LookRotation(\\n        (new Vector3(0.0f, fakeCameraFloorLevelPosition.y, 0.0f) - fakeCameraFloorLevelPosition).normalized,\\n        Vector3.up);\\n\\n    public static float fakeCameraFov = 60.0f;\\n    public static float fakeCameraAspect = 16.0f / 9.0f;\\n\\n    public static OVRComposition currentComposition = null;\\n    private static OVRExternalComposition externalCompositionInstance = null;\\n\\n    public static void Initialize(GameObject parentObject, Camera mainCamera, OVRMixedRealityCaptureConfiguration configuration)\\n    {\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            OVRPlugin.InitializeMixedReality();\\n            if (OVRPlugin.IsMixedRealityInitialized())\\n            {\\n                Debug.Log(\\\"OVRPlugin_MixedReality initialized\\\");\\n            }\\n            else\\n            {\\n                Debug.LogError(\\\"Unable to initialize OVRPlugin_MixedReality\\\");\\n                return;\\n            }\\n        }\\n\\n        // Create an external composition instance for reuse\\n        externalCompositionInstance = new OVRExternalComposition(parentObject, mainCamera, configuration);\\n    }\\n\\n    public static void Update(GameObject parentObject, Camera mainCamera,\\n        OVRMixedRealityCaptureConfiguration configuration, OVRManager.TrackingOrigin trackingOrigin)\\n    {\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            return;\\n        }\\n\\n        OVRPlugin.UpdateExternalCamera();\\n#if !OVR_ANDROID_MRC\\n        OVRPlugin.UpdateCameraDevices();\\n#endif\\n\\n#if OVR_ANDROID_MRC\\n        useFakeExternalCamera = OVRPlugin.Media.UseMrcDebugCamera();\\n#endif\\n\\n        if (currentComposition != null && (currentComposition.CompositionMethod() != configuration.compositionMethod))\\n        {\\n            currentComposition.Cleanup();\\n            currentComposition = null;\\n        }\\n\\n        if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n        {\\n            if (currentComposition == null)\\n            {\\n                currentComposition = externalCompositionInstance;\\n            }\\n        }\\n        else\\n        {\\n            Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            return;\\n        }\\n\\n        currentComposition.Update(parentObject, mainCamera, configuration, trackingOrigin);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\ninternal static class OVRMixedReality\\n{\\n    private static OVRExternalComposition externalCompositionInstance = null;\\n\\n    public static void Initialize(GameObject parentObject, Camera mainCamera, OVRMixedRealityCaptureConfiguration configuration)\\n    {\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            OVRPlugin.InitializeMixedReality();\\n            if (OVRPlugin.IsMixedRealityInitialized())\\n            {\\n                Debug.Log(\\\"OVRPlugin_MixedReality initialized\\\");\\n            }\\n            else\\n            {\\n                Debug.LogError(\\\"Unable to initialize OVRPlugin_MixedReality\\\");\\n                return;\\n            }\\n        }\\n\\n        if (externalCompositionInstance == null)\\n        {\\n            externalCompositionInstance = new OVRExternalComposition(parentObject, mainCamera, configuration);\\n        }\\n    }\\n\\n    public static void Update(GameObject parentObject, Camera mainCamera, OVRMixedRealityCaptureConfiguration configuration, OVRManager.TrackingOrigin trackingOrigin)\\n    {\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            return;\\n        }\\n\\n        OVRPlugin.UpdateExternalCamera();\\n\\n#if !OVR_ANDROID_MRC\\n        OVRPlugin.UpdateCameraDevices();\\n#endif\\n\\n#if OVR_ANDROID_MRC\\n        useFakeExternalCamera = OVRPlugin.Media.UseMrcDebugCamera();\\n#endif\\n        \\n        if (externalCompositionInstance != null && (externalCompositionInstance.CompositionMethod() != configuration.compositionMethod))\\n        {\\n            externalCompositionInstance.Cleanup();\\n            externalCompositionInstance = null;\\n        }\\n\\n        if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n        {\\n            if (externalCompositionInstance == null)\\n            {\\n                externalCompositionInstance = new OVRExternalComposition(parentObject, mainCamera, configuration);\\n            }\\n        }\\n        else\\n        {\\n            Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            return;\\n        }\\n\\n        externalCompositionInstance.Update(parentObject, mainCamera, configuration, trackingOrigin);\\n    }\\n}\\n```\\n\\nThis code initializes the `OVRExternalComposition` instance outside of the `Update` method to avoid repeated instantiation each frame. The instantiation of `OVRExternalComposition` is moved to a method called `Initialize`. Thus, the object is created once and reused, improving performance and preventing the overhead that resulted from instantiating in the `Update` method.\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\ninternal static class OVRMixedReality\\n{\\n    private static OVRExternalComposition externalCompositionInstance = null;\\n    private static GameObject parentObj = null;\\n    private static Camera mainCam = null;\\n    private static OVRMixedRealityCaptureConfiguration currentConfig = null;\\n\\n    public static bool useFakeExternalCamera = false;\\n\\n    public static Vector3 fakeCameraFloorLevelPosition = new Vector3(0.0f, 2.0f, -0.5f);\\n    public static Vector3 fakeCameraEyeLevelPosition = fakeCameraFloorLevelPosition - new Vector3(0.0f, 1.8f, 0.0f);\\n\\n    public static Quaternion fakeCameraRotation = Quaternion.LookRotation(\\n        (new Vector3(0.0f, fakeCameraFloorLevelPosition.y, 0.0f) - fakeCameraFloorLevelPosition).normalized,\\n        Vector3.up);\\n\\n    public static float fakeCameraFov = 60.0f;\\n    public static float fakeCameraAspect = 16.0f / 9.0f;\\n\\n    public static OVRComposition currentComposition = null;\\n\\n    public static void InitializeComposition(GameObject parentObject, Camera mainCamera,\\n        OVRMixedRealityCaptureConfiguration configuration)\\n    {\\n        parentObj = parentObject;\\n        mainCam = mainCamera;\\n        currentConfig = configuration;\\n\\n        if (currentComposition == null)\\n        {\\n            if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n            {\\n                currentComposition = new OVRExternalComposition(parentObj, mainCam, currentConfig);\\n            }\\n            else\\n            {\\n                Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            }\\n        }\\n\\n        externalCompositionInstance =\\n            currentComposition as OVRExternalComposition; // Preserve the external composition if present.\\n    }\\n\\n    public static void UpdateComposition(GameObject parentObject, Camera mainCamera,\\n        OVRMixedRealityCaptureConfiguration configuration, OVRManager.TrackingOrigin trackingOrigin)\\n    {\\n        if (!OVRPlugin.initialized)\\n        {\\n            Debug.LogError(\\\"OVRPlugin not initialized\\\");\\n            return;\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            OVRPlugin.InitializeMixedReality();\\n            if (OVRPlugin.IsMixedRealityInitialized())\\n            {\\n                Debug.Log(\\\"OVRPlugin_MixedReality initialized\\\");\\n            }\\n            else\\n            {\\n                Debug.LogError(\\\"Unable to initialize OVRPlugin_MixedReality\\\");\\n                return;\\n            }\\n        }\\n\\n        if (!OVRPlugin.IsMixedRealityInitialized())\\n        {\\n            return;\\n        }\\n\\n        OVRPlugin.UpdateExternalCamera();\\n#if !OVR_ANDROID_MRC\\n        OVRPlugin.UpdateCameraDevices();\\n#endif\\n\\n#if OVR_ANDROID_MRC\\n        useFakeExternalCamera = OVRPlugin.Media.UseMrcDebugCamera();\\n#endif\\n\\n        if (currentComposition != null && (currentComposition.CompositionMethod() != configuration.compositionMethod))\\n        {\\n            currentComposition.Cleanup();\\n            currentComposition = null;\\n        }\\n\\n        if (configuration.compositionMethod == OVRManager.CompositionMethod.External)\\n        {\\n            if (currentComposition == null && externalCompositionInstance != null)\\n            {\\n                currentComposition = externalCompositionInstance;\\n                currentComposition.RefreshCameraObjects(parentObject, mainCamera, configuration);\\n            }\\n        }\\n        else\\n        {\\n            Debug.LogError(\\\"Unknown/Unsupported CompositionMethod : \\\" + configuration.compositionMethod);\\n            return;\\n        }\\n\\n        currentComposition.Update(parentObject, mainCamera, configuration, trackingOrigin);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1751716748,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_a288987b44\",\"usage\":{\"completion_tokens\":3047,\"prompt_tokens\":2912,\"total_tokens\":5959,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
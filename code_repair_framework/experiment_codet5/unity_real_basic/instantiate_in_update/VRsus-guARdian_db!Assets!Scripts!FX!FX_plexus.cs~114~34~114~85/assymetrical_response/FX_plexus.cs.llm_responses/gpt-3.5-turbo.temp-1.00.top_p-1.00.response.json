"{\"id\":\"chatcmpl-B4j2T0CKQPvXlkjuvqSyDqQwEauRv\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```c#\\n\\tvoid Update()\\n\\t{\\n\\t\\tif (lrIndex == lineRendererCount)\\n\\t\\t{\\n\\t\\t\\tLineRenderer lr = Instantiate(lineRendererTemplate, _transform, false);\\n\\t\\t\\tlineRenderers.Add(lr);\\n\\t\\t\\tlineRendererCount++;\\n\\t\\t}\\n\\n\\t\\tlr = lineRenderers[lrIndex];\\n\\n\\t\\tlr.enabled = true;\\n\\t\\tlr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n\\t\\tlr.SetPosition(0, p1_position);\\n\\t\\tlr.SetPosition(1, p2_position);\\n\\n\\t\\tlr.startColor = particles[i].GetCurrentColor(particleSystem);\\n\\t\\tlr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\n\\t\\tlrIndex++;\\n\\t\\tconnections++;\\n\\n\\t\\tif (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n\\t\\t\\tbreak;\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n    {\\n        int maxParticles = particleSystemMainModule.maxParticles;\\n\\n        if (particles == null || particles.Length < maxParticles)\\n        {\\n            particles = new ParticleSystem.Particle[maxParticles];\\n        }\\n\\n        int lrIndex = 0;\\n        int lineRendererCount = lineRenderers.Count;\\n\\n        if (lineRendererCount > maxLineRendereres)\\n        {\\n            for (int i = maxLineRendereres; i < lineRendererCount; i++)\\n            {\\n                Destroy(lineRenderers[i].gameObject);\\n            }\\n\\n            int removedCount = lineRendererCount - maxLineRendereres;\\n            lineRenderers.RemoveRange(maxLineRendereres, removedCount);\\n            lineRendererCount -= removedCount;\\n        }\\n\\n\\n        if (maxConnections > 0 && maxLineRendereres > 0)\\n        {\\n            particleSystem.GetParticles(particles);\\n            int particleCount = particleSystem.particleCount;\\n\\n            float maxDistanceSqr = maxDistance * maxDistance;\\n\\n\\n            Vector3 p1_position, p2_position;\\n\\n            ParticleSystemSimulationSpace simulationSpace = particleSystemMainModule.simulationSpace;\\n\\n            switch (simulationSpace)\\n            {\\n                case ParticleSystemSimulationSpace.Local:\\n                    {\\n                        _transform = transform;\\n\\n                        break;\\n                    }\\n                case ParticleSystemSimulationSpace.Custom:\\n                    {\\n                        _transform = particleSystemMainModule.customSimulationSpace;\\n\\n                        break;\\n                    }\\n                case ParticleSystemSimulationSpace.World:\\n                    {\\n                        _transform = transform;\\n\\n                        break;\\n                    }\\n                default:\\n                    {\\n                        throw new System.NotSupportedException(\\n                            string.Format(\\\"Unsupported Simulation Space '{0}'.\\\", System.Enum.GetName(typeof(ParticleSystemSimulationSpace), particleSystemMainModule.simulationSpace)));\\n                    }\\n            }\\n            for (int i = 0; i < particleCount; i++)\\n            {\\n                if (lrIndex >= maxLineRendereres)\\n                    break;\\n                p1_position = particles[i].position;\\n\\n                int connections = 0;\\n                for (int j = i + 1; j < particleCount; j++)\\n                {\\n                    p2_position = particles[j].position;\\n                    float distanceSqr = Vector3.SqrMagnitude(p1_position - p2_position);\\n\\n                    if (distanceSqr <= maxDistanceSqr)\\n                    {\\n                        LineRenderer lr;\\n\\n                        if (lrIndex == lineRendererCount)\\n                        {\\n                            lr = Instantiate(lineRendererTemplate, _transform, false);\\n                            lineRenderers.Add(lr);\\n\\n                            lineRendererCount++;\\n\\n                        }\\n\\n                        lr = lineRenderers[lrIndex];\\n\\n                        lr.enabled = true;\\n                        lr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n                        lr.SetPosition(0, p1_position);\\n                        lr.SetPosition(1, p2_position);\\n\\n                        lr.startColor = particles[i].GetCurrentColor(particleSystem);\\n                        lr.endColor = particles[j].GetCurrentColor(particleSystem);\\n\\n\\n                        lrIndex++;\\n                        connections++;\\n\\n                        if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n                            break;\\n\\n                    }\\n\\n                }\\n            }\\n        }\\n\\n        for (int i = lrIndex; i < lineRendererCount; i++)\\n        {\\n            lineRenderers[i].enabled = false;\\n        }\\n    }\\n\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```c#\\nvoid Update()\\n{\\n    int maxParticles = particleSystemMainModule.maxParticles;\\n\\n    if (particles == null || particles.Length < maxParticles)\\n    {\\n        particles = new ParticleSystem.Particle[maxParticles];\\n    }\\n\\n    int lrIndex = 0;\\n    int lineRendererCount = lineRenderers.Count;\\n\\n    if (lineRendererCount > maxLineRendereres)\\n    {\\n        for (int i = maxLineRendereres; i < lineRendererCount; i++)\\n        {\\n            Destroy(lineRenderers[i].gameObject);\\n        }\\n\\n        int removedCount = lineRendererCount - maxLineRendereres;\\n        lineRenderers.RemoveRange(maxLineRendereres, removedCount);\\n        lineRendererCount -= removedCount;\\n    }\\n\\n\\n    if (maxConnections > 0 && maxLineRendereres > 0)\\n    {\\n        particleSystem.GetParticles(particles);\\n        int particleCount = particleSystem.particleCount;\\n\\n        float maxDistanceSqr = maxDistance * maxDistance;\\n\\n        Vector3 p1_position, p2_position;\\n\\n        ParticleSystemSimulationSpace simulationSpace = particleSystemMainModule.simulationSpace;\\n\\n        switch (simulationSpace)\\n        {\\n            case ParticleSystemSimulationSpace.Local:\\n                {\\n                    _transform = transform;\\n                    break;\\n                }\\n            case ParticleSystemSimulationSpace.Custom:\\n                {\\n                    _transform = particleSystemMainModule.customSimulationSpace;\\n                    break;\\n                }\\n            case ParticleSystemSimulationSpace.World:\\n                {\\n                    _transform = transform;\\n                    break;\\n                }\\n            default:\\n                {\\n                    throw new System.NotSupportedException(\\n                        string.Format(\\\"Unsupported Simulation Space '{0}'.\\\", System.Enum.GetName(typeof(ParticleSystemSimulationSpace), particleSystemMainModule.simulationSpace)));\\n                }\\n        }\\n        for (int i = 0; i < particleCount; i++)\\n        {\\n            if (lrIndex >= maxLineRendereres)\\n                break;\\n            p1_position = particles[i].position;\\n\\n            int connections = 0;\\n            for (int j = i + 1; j < particleCount; j++)\\n            {\\n                p2_position = particles[j].position;\\n                float distanceSqr = Vector3.SqrMagnitude(p1_position - p2_position);\\n\\n                if (distanceSqr <= maxDistanceSqr)\\n                {\\n                    LineRenderer lr;\\n\\n                    if (lrIndex == lineRendererCount)\\n                    {\\n                        lr = Instantiate(lineRendererTemplate, _transform, false);\\n                        lineRenderers.Add(lr);\\n\\n                        lineRendererCount++;\\n\\n                    }\\n\\n                    lr = lineRenderers[lrIndex];\\n\\n                    lr.enabled = true;\\n                    lr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n                    lr.SetPosition(0, p1_position);\\n                    lr.SetPosition(1, p2_position);\\n\\n                    lr.startColor = particles[i].startColor;\\n                    lr.endColor = particles[j].startColor;\\n\\n\\n                    lrIndex++;\\n                    connections++;\\n\\n                    if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n                        break;\\n\\n                }\\n\\n            }\\n        }\\n    }\\n\\n    for (int i = lrIndex; i < lineRendererCount; i++)\\n    {\\n        lineRenderers[i].enabled = false;\\n    }\\n\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n    void LateUpdate()\\n    {\\n        int maxParticles = particleSystemMainModule.maxParticles;\\n\\n        if (particles == null || particles.Length < maxParticles)\\n        {\\n            particles = new ParticleSystem.Particle[maxParticles];\\n        }\\n\\n        int lrIndex = 0;\\n        int lineRendererCount = lineRenderers.Count;\\n\\n        if (lineRendererCount > maxLineRendereres)\\n        {\\n            for (int i = maxLineRendereres; i < lineRendererCount; i++)\\n            {\\n                Destroy(lineRenderers[i].gameObject);\\n            }\\n\\n            int removedCount = lineRendererCount - maxLineRendereres;\\n            lineRenderers.RemoveRange(maxLineRendereres, removedCount);\\n            lineRendererCount -= removedCount;\\n        }\\n\\n\\n        if (maxConnections > 0 && maxLineRendereres > 0)\\n        {\\n\\n\\n            particleSystem.GetParticles(particles);\\n            int particleCount = particleSystem.particleCount;\\n\\n            float maxDistanceSqr = maxDistance * maxDistance;\\n\\n            Vector3 p1_position, p2_position;\\n\\n            ParticleSystemSimulationSpace simulationSpace = particleSystemMainModule.simulationSpace;\\n\\n            if (_transform == null)\\n            {\\n                _transform = simulationSpace == ParticleSystemSimulationSpace.Custom ? particleSystemMainModule.customSimulationSpace : transform;\\n            }\\n\\n            for (int i = 0; i < particleCount; i++)\\n            {\\n                if (lrIndex >= maxLineRendereres)\\n                    break;\\n                p1_position = particles[i].position;\\n\\n                int connections = 0;\\n                for (int j = i + 1; j < particleCount; j++)\\n                {\\n                    p2_position = particles[j].position;\\n                    float distanceSqr = Vector3.SqrMagnitude(p1_position - p2_position);\\n\\n                    if (distanceSqr <= maxDistanceSqr)\\n                    {\\n                        LineRenderer lr;\\n\\n                        if (lrIndex == lineRendererCount)\\n                        {\\n                            lr = Instantiate(lineRendererTemplate, _transform, false);\\n                            lineRenderers.Add(lr);\\n\\n                            lineRendererCount++;\\n\\n                        }\\n\\n                        lr = lineRenderers[lrIndex];\\n\\n                        lr.enabled = true;\\n                        lr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n                        lr.SetPosition(0, p1_position);\\n                        lr.SetPosition(1, p2_position);\\n\\n                        lr.startColor = particles[i].startColor;\\n                        lr.endColor = particles[j].startColor;\\n\\n\\n                        lrIndex++;\\n                        connections++;\\n\\n                        if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n                            break;\\n\\n                    }\\n\\n                }\\n            }\\n\\n            for (int i = lrIndex; i < lineRendererCount; i++)\\n            {\\n                lineRenderers[i].enabled = false;\\n            }\\n\\n        }\\n\\n    }\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (lrIndex == lineRendererCount)\\n    {\\n        LineRenderer lr = Instantiate(lineRendererTemplate, _transform, false);\\n        lineRenderers.Add(lr);\\n\\n        lineRendererCount++;\\n    }\\n\\n    LineRenderer lr = lineRenderers[lrIndex];\\n\\n    lr.enabled = true;\\n    lr.useWorldSpace = simulationSpace == ParticleSystemSimulationSpace.World ? true : false;\\n\\n    lr.SetPosition(0, p1_position);\\n    lr.SetPosition(1, p2_position);\\n\\n    lr.startColor = particles[i].startColor;\\n    lr.endColor = particles[j].startColor;\\n\\n    lrIndex++;\\n    connections++;\\n\\n    if (connections >= maxConnections || lrIndex >= maxLineRendereres)\\n    {\\n        break;\\n    }\\n}\\n\\nfor (int i = lrIndex; i < lineRendererCount; i++)\\n{\\n    lineRenderers[i].enabled = false;\\n}\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740466141,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":2245,\"prompt_tokens\":1102,\"total_tokens\":3347,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
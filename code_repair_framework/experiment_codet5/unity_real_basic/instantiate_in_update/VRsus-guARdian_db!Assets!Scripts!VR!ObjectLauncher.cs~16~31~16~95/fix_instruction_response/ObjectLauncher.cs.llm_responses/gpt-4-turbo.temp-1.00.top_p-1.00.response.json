"{\"id\":\"chatcmpl-B1sZoIaWXM6HzORtu3iGieL7E3sjB\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n\\n    private Queue<GameObject> objectPool = new Queue<GameObject>();\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject temp = Instantiate(launchObject);\\n            temp.SetActive(false);\\n            objectPool.Enqueue(temp);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject obj = objectPool.Dequeue();\\n            obj.transform.position = transform.position;\\n            obj.transform.rotation = transform.rotation;\\n            obj.SetActive(true);\\n\\n            Rigidbody rb = obj.GetComponent<Rigidbody>();\\n            if (rb != null) {\\n                rb.AddForce(transform.forward * force, ForceMode.Impulse);\\n            }\\n\\n            Launchable launchable = obj.GetComponent<Launchable>();\\n            if (launchable != null) {\\n                launchable.Player = player;\\n                launchable.button = button;\\n            }           \\n        }\\n    }\\n\\n    public void ReturnToPool(GameObject obj) {\\n        obj.SetActive(false);\\n        objectPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour\\n{\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n    private Queue<GameObject> objectPool = new Queue<GameObject>();\\n\\n    void Start()\\n    {\\n        // Initialize the object pool\\n        for (int i = 0; i < 10; i++)\\n        {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update()\\n    {\\n        if (Input.GetButtonDown(button))\\n        {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject()\\n    {\\n        if (objectPool.Count > 0)\\n        {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.SetActive(true);\\n            temp.GetComponent<Rigidbody>().velocity = Vector3.zero;\\n            temp.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n            Launchable launchable = temp.GetComponent<Launchable>();\\n            if (launchable != null)\\n            {\\n                launchable.Player = player;\\n                launchable.button = button;\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n\\n    private Queue<GameObject> objectPool = new Queue<GameObject>();\\n    private int poolSize = 10;\\n\\n    void Start() {\\n        // Initialize the object pool\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.SetActive(true);\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n            temp.GetComponent<Launchable>().Player = player;\\n            temp.GetComponent<Launchable>().button = button;\\n\\n            // Optional: Enqueue back to pool after some time\\n            StartCoroutine(RecycleObject(temp));\\n        }\\n    }\\n\\n    IEnumerator RecycleObject(GameObject obj) {\\n        yield return new WaitForSeconds(5); // Adjust time as needed\\n        obj.SetActive(false);\\n        objectPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n    private Queue<GameObject> objectPool;\\n    public int poolSize = 10;\\n\\n    void Start() {\\n        // Initialize the object pool\\n        objectPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.SetActive(true);\\n            temp.GetComponent<Rigidbody>().velocity = Vector3.zero; // reset velocity\\n            temp.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n            temp.GetComponent<Launchable>().Player = player;\\n            temp.GetComponent<Launchable>().button = button;\\n\\n            StartCoroutine(ReturnToPool(temp, 5f)); // Return to pool after 5 seconds or after usage\\n        }\\n    }\\n\\n    IEnumerator ReturnToPool(GameObject obj, float delay) {\\n        yield return new WaitForSeconds(delay);\\n        obj.SetActive(false);\\n        objectPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class ObjectLauncher : MonoBehaviour {\\n\\n    public GameObject player;\\n    public GameObject launchObject;\\n    public float force = 5;\\n    public string button = \\\"Sprint\\\";\\n\\n    private Queue<GameObject> objectPool;\\n    private int poolSize = 10; // Adjust this according to your needs\\n\\n    void Start() {\\n        // Initialize the object pool\\n        objectPool = new Queue<GameObject>();\\n        for (int i = 0; i < poolSize; i++) {\\n            GameObject obj = Instantiate(launchObject);\\n            obj.SetActive(false);\\n            objectPool.Enqueue(obj);\\n        }\\n    }\\n\\n    void Update() {\\n        if (Input.GetButtonDown(button)) {\\n            LaunchObject();\\n        }\\n    }\\n\\n    void LaunchObject() {\\n        if (objectPool.Count > 0) {\\n            GameObject temp = objectPool.Dequeue();\\n            temp.transform.position = transform.position;\\n            temp.transform.rotation = transform.rotation;\\n            temp.SetActive(true);\\n            temp.GetComponent<Rigidbody>().AddForce(transform.forward * force, ForceMode.Impulse);\\n            temp.GetComponent<Launchable>().Player = player;\\n            temp.GetComponent<Launchable>().button = button;\\n        }\\n    }\\n\\n    public void ReturnToPool(GameObject obj) {\\n        obj.SetActive(false);\\n        objectPool.Enqueue(obj);\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1739787820,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":null,\"system_fingerprint\":\"fp_f3927aa00d\",\"usage\":{\"completion_tokens\":1511,\"prompt_tokens\":261,\"total_tokens\":1772,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
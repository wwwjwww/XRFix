using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ObjectLauncher : MonoBehaviour {

    public GameObject player;
    public GameObject launchObject;
    public float force = 5;
    public string button = "Sprint";
    private Queue<GameObject> objectPool;
    private int poolSize = 10;

    void Start() {
        InitializePool();
    }

    void InitializePool() {
        objectPool = new Queue<GameObject>();
        for(int i = 0; i < poolSize; i++) {
            GameObject obj = Instantiate(launchObject);
            obj.SetActive(false);
            obj.GetComponent<Rigidbody>().velocity = Vector3.zero; // Ensure velocity is reset
            objectPool.Enqueue(obj);
        }
    }
    
    void Update() {
        if (Input.GetButtonDown(button)) {
            LaunchObject();
        }
    }
    
    void LaunchObject() {
        if (objectPool.Count > 0) {
            GameObject temp = objectPool.Dequeue();
            temp.transform.position = transform.position;
            temp.transform.rotation = transform.rotation;
            temp.SetActive(true);
            Rigidbody rb = temp.GetComponent<Rigidbody>();
            if (rb != null) {
                rb.velocity = Vector3.zero; // Reset velocity if needed
                rb.AddForce(transform.forward * force, ForceMode.Impulse);
            }
            Launchable launchableComponent = temp.GetComponent<Launchable>();
            if (launchableComponent != null) {
                launchableComponent.Player = player;
                launchableComponent.button = button;
            }
        } else {
            Debug.Log("Object pool exhausted");
        }
    }
}

{
    "code_repairing_0": "// /Assets/Scripts/ArrowManager.cs\n\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowManager : MonoBehaviour\n{\n    private GameObject currentArrow;\n    public static ArrowManager Instance;\n    public OVRInput.Controller controller;\n    public GameObject controler;\n    public GameObject arrowPrefab;\n    public GameObject LastArrow;\n    public GameObject arrowStartPoint;\n    public TextMesh debug;\n    private bool hasArrow = false;\n    private bool isAttached = false;\n\n    void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n    }\n\n    void OnDestroy()\n    {\n        if (Instance == this)\n            Instance = null;\n    }\n\n    void Update()\n    {\n        debug.text = controler.transform.rotation.x.ToString() +\n                     \"\\n\" + controler.transform.rotation.y.ToString() +\n                     \"\\n\" + controler.transform.rotation.z.ToString();\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\n        {\n            if (!hasArrow)\n            {\n                AttachArrow();\n            } else if (isAttached) {\n                Fire();\n            }\n        }\n        else ThrowArrow();\n    }\n\n    public void AttachArrow()\n    {\n        if (currentArrow == null)\n        {\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\n            hasArrow = true;\n        }\n    }\n\n    private void Fire()\n    {\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n        {\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\n            currentArrow.transform.parent = null;\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\n            r.velocity = currentArrow.transform.forward * 25f * dist;\n            r.useGravity = true;\n            currentArrow.GetComponent<Collider>().isTrigger = false;\n            currentArrow = null;\n            hasArrow = false;\n            isAttached = false;\n        }\n    }\n}",
    "code_repairing_1": "//Here're the fixed code lines from /Assets/Scripts/ArrowManager.cs:\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowManager : MonoBehaviour\n{\n    private GameObject currentArrow;\n    public static ArrowManager Instance;\n    public OVRInput.Controller controller;\n    public GameObject controler;\n    public GameObject arrowPrefab;\n    public GameObject LastArrow;\n    public GameObject arrowStartPoint;\n    public TextMesh debug;\n    private bool hasArrow = false;\n    private bool isAttached = false;\n\n    void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n    }\n\n    void OnDestroy()\n    {\n        if (Instance == this)\n            Instance = null;\n    }\n\n    void Update()\n    {\n        debug.text = controler.transform.rotation.x.ToString() +\n                     \"\\n\" + controler.transform.rotation.y.ToString() +\n                     \"\\n\" + controler.transform.rotation.z.ToString();\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\n        {\n            if (!hasArrow)\n            {\n                AttachArrow();\n            } \n            else if (isAttached)\n            {\n                Fire();\n            }\n        }\n        else ThrowArrow();\n    }\n\n    public void AttachArrow()\n    {\n        if (currentArrow == null)\n        {\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\n            hasArrow = true;\n        }\n    }\n\n    private void Fire()\n    {\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n        {\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\n            currentArrow.transform.parent = null;\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\n            r.velocity = currentArrow.transform.forward * 25f * dist;\n            r.useGravity = true;\n            currentArrow.GetComponent<Collider>().isTrigger = false;\n            currentArrow = null;\n            hasArrow = false;\n            isAttached =",
    "code_repairing_2": "using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowManager : MonoBehaviour\n{\n    private GameObject currentArrow;\n    public static ArrowManager Instance;\n    public OVRInput.Controller controller;\n    public GameObject controler;\n    public GameObject arrowPrefab;\n    public GameObject LastArrow;\n    public GameObject arrowStartPoint;\n    public TextMesh debug;\n    private bool hasArrow = false;\n    private bool isAttached = false;\n\n    void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n    }\n\n    void OnDestroy()\n    {\n        if (Instance == this)\n            Instance = null;\n    }\n    \n    void Update()\n    {\n        debug.text = controler.transform.rotation.x.ToString() +\n                     \"\\n\" + controler.transform.rotation.y.ToString() +\n                     \"\\n\" + controler.transform.rotation.z.ToString();\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\n        {\n            if (!hasArrow)\n            {\n                AttachArrow();\n            } \n            else if (isAttached) \n            {\n                if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n                {\n                    Fire();\n                }\n            }\n        }\n        else ThrowArrow();\n    }\n    \n    public void AttachArrow()\n    {\n        if (currentArrow == null)\n        {\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\n            hasArrow = true;\n        }\n    }\n    \n    private void Fire()\n    {\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n        {\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\n            currentArrow.transform.parent = null;\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\n            r.velocity = currentArrow.transform.forward * 25f * dist;\n            r.useGravity = true;\n            currentArrow.GetComponent<Collider>().isTrigger = false;\n            currentArrow = null;\n            has",
    "code_repairing_3": "//Here're the fixed code lines from /Assets/Scripts/ArrowManager.cs\n\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowManager : MonoBehaviour\n{\n    private GameObject currentArrow;\n    public static ArrowManager Instance;\n    public OVRInput.Controller controller;\n    public GameObject controler;\n    public GameObject arrowPrefab;\n    public GameObject LastArrow;\n    public GameObject arrowStartPoint;\n    public TextMesh debug;\n    private bool hasArrow = false;\n    private bool isAttached = false;\n\n    void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n    }\n\n    void OnDestroy()\n    {\n        if (Instance == this)\n            Instance = null;\n    }\n\n    void Update()\n    {\n        debug.text = controler.transform.rotation.x.ToString() +\n                     \"\\n\" + controler.transform.rotation.y.ToString() +\n                     \"\\n\" + controler.transform.rotation.z.ToString();\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\n        {\n            if (!hasArrow)\n            {\n                AttachArrow();\n            }\n            else if (isAttached)\n            {\n                Fire();\n            }\n        }\n        else ThrowArrow();\n    }\n\n    public void AttachArrow()\n    {\n        if (currentArrow == null)\n        {\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\n            hasArrow = true;\n            isAttached = false;\n        }\n    }\n\n    private void Fire()\n    {\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n        {\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\n            currentArrow.transform.parent = null;\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\n            r.velocity = currentArrow.transform.forward * 25f * dist;\n            r.useGravity = true;\n            currentArrow.GetComponent<Collider>().isTrigger = false;\n            currentArrow = null;\n            hasArrow =",
    "code_repairing_4": "//Here're the fixed code snippets for /Assets/Scripts/ArrowManager.cs:\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class ArrowManager : MonoBehaviour\n{\n    private GameObject currentArrow;\n    public static ArrowManager Instance;\n    public OVRInput.Controller controller;\n    public GameObject controler;\n    public GameObject arrowPrefab;\n    public GameObject LastArrow;\n    public GameObject arrowStartPoint;\n    public TextMesh debug;\n    private bool hasArrow = false;\n    private bool isAttached = false;\n\n    void Awake()\n    {\n        if (Instance == null)\n            Instance = this;\n    }\n\n    void OnDestroy()\n    {\n        if (Instance == this)\n            Instance = null;\n    }\n\n    void Update()\n    {\n        debug.text = controler.transform.rotation.x.ToString() +\n                     \"\\n\" + controler.transform.rotation.y.ToString() +\n                     \"\\n\" + controler.transform.rotation.z.ToString();\n        if (OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) > 0)\n        {\n            if (!hasArrow)\n            {\n                AttachArrow();\n            } \n            else if (isAttached)\n            {\n                Fire();\n            }\n        }\n        else ThrowArrow();\n    }\n\n    public void AttachArrow()\n    {\n        if (currentArrow == null)\n        {\n            currentArrow = Instantiate(arrowPrefab, controler.transform);\n            currentArrow.transform.localPosition = new Vector3(0.1f, 0f, 0.3f);\n            currentArrow.GetComponent<Rigidbody>().isKinematic = true;\n            hasArrow = true;\n        }\n    }\n\n    private void Fire()\n    {\n        if (isAttached && OVRInput.Get(OVRInput.Axis1D.SecondaryIndexTrigger) < 0)\n        {\n            float dist = (arrowStartPoint.transform.position - controler.transform.position).magnitude;\n            currentArrow.transform.parent = null;\n            Rigidbody r = currentArrow.GetComponent<Rigidbody>();\n            r.velocity = currentArrow.transform.forward * 25f * dist;\n            r.useGravity = true;\n            currentArrow.GetComponent<Collider>().isTrigger = false;\n            currentArrow = null;\n            hasArrow = false;\n            isAttached ="
}
//Here're the buggy code lines from /Assets/CodeScripts/ThrowingTutorial.cs:
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using TMPro;

public class ThrowingTutorial : MonoBehaviour
{
    [Header("References")]
    public Transform cam;
    public Transform attackPoint;
    public GameObject objectToThrow;
    public GameObject armorObject;
    public GameObject swordObject;
    public GameObject player;

    [Header("Settings")]
    public int totalThrows;
    public float throwCooldown; 

    [Header("Throwing")]
    public KeyCode throwKey = KeyCode.K;
    public float throwForce;

    bool readyToThrow;

    private int throwCounter = 0; 
    private bool inCollider = false; 

    AudioManager audioManager;

    private void Awake()
    {
        audioManager = GameObject.FindGameObjectWithTag("Audio").GetComponent<AudioManager>();
    }

    private void Start()
    {
        readyToThrow = true;
    }

// BUG: Transform object of Rigidbody in Update() methods
// MESSAGE: Rigidbody needs to be transformed in FixedUpdate() methods to simulate real-world movement.
//    private void Update()
//    {
//        if(inCollider && Input.GetKeyDown(throwKey) && readyToThrow && totalThrows > 0)
//        {
//            Throw();
//        }
//    }

//    private void Throw()
//    {
//        readyToThrow = false;
//
//        if (throwCounter < totalThrows)
//        {
//            audioManager.PlaySFX(audioManager.axeSound);
//            
//            GameObject thrownObject = Instantiate(objectToThrow, attackPoint.position, attackPoint.rotation);
//            Rigidbody rb = thrownObject.GetComponent<Rigidbody>();
//            rb.AddForce(cam.forward * throwForce, ForceMode.VelocityChange);
//            throwCounter++;
//        }
//        else if (throwCounter == totalThrows)
//        {
//            audioManager.PlaySFX(audioManager.disappearSound);
//            armorObject.SetActive(false); 
//            audioManager.PlaySFX(audioManager.appearSound);
//            swordObject.SetActive(true); 
//        }
//
//        totalThrows--;
//
//        
//        Invoke(nameof(ResetThrow), throwCooldown);
//    }

// FIXED CODE:

// Move this function in FixedUpdate() methods.
"{\"id\":\"chatcmpl-B3IYjwBncgZKwg6uPAgIC2t3KSAd6\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"Coroutine ShootLaser()\\n{\\n    laserLine.enabled = true;\\n    yield return new WaitForSeconds(laserDuration);\\n    laserLine.enabled = false;\\n}\\n\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    GameObject obj = hit.collider.gameObject;\\n                    destroyObject.Add(obj);\\n                    Object = null;\\n\\n                    StartCoroutine(ShootLaser());\\n\\n                    if (Object == null)\\n                    {\\n                        GameOver();\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            ShootRay();\\n        }\\n    }\\n}\\n\\nvoid ShootRay()\\n{\\n    laserLine.SetPosition(0, laserOrigin.position);\\n    Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n    RaycastHit hit;\\n    if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n    {\\n        if (hit.collider.gameObject == Object)\\n        {\\n            audioManager.PlaySFX(audioManager.swordSound);\\n            laserLine.SetPosition(1, hit.point);\\n            audioManager.PlaySFX(audioManager.disappearSound);\\n            Destroy(hit.transform.gameObject);\\n            Object = null; // Destroyed object\\n\\n            if (Object == null)\\n            {\\n                GameOver();\\n            }\\n        }\\n        else\\n        {\\n            laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n        }\\n        StartCoroutine(ShootLaser());\\n    }\\n}\\n\\nIEnumerator ShootLaser()\\n{\\n    laserLine.enabled = true;\\n    yield return new WaitForSeconds(laserDuration);\\n    laserLine.enabled = false;\\n}\\n\\nvoid GameOver()\\n{\\n    SceneManager.LoadScene(\\\"GameOverScene\\\");\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"IEnumerator ShootLaser()\\n{\\n    laserLine.enabled = true;\\n    yield return new WaitForSeconds(laserDuration);\\n    laserLine.enabled = false;\\n}\\n\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    Destroy(hit.transform.gameObject);\\n                    Object = null; // Destroyed object\\n\\n                    if (Object == null)\\n                    {\\n                        // GameOver(); - Need to implement this function\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n            }\\n        }\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```C#\\nvoid Update()\\n{\\n    if (isPlayerOnObject)\\n    {\\n        fireTimer += Time.deltaTime;\\n        if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n        {\\n            fireTimer = 0;\\n            laserLine.SetPosition(0, laserOrigin.position);\\n            Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n            RaycastHit hit;\\n            if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n            {\\n                if (hit.collider.gameObject == Object)\\n                {\\n                    audioManager.PlaySFX(audioManager.swordSound);\\n                    laserLine.SetPosition(1, hit.point);\\n                    audioManager.PlaySFX(audioManager.disappearSound);\\n                    Destroy(hit.transform.gameObject); \\n                    Object = null; // Destroyed object\\n\\n                    if (Object == null)\\n                    {\\n                        GameOver();\\n                    }\\n                }\\n                else\\n                {\\n                    laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n                }\\n                StartCoroutine(ShootLaser());\\n            }\\n        }\\n    }\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"StartCoroutine(ShootLaser());\\nif (Object == null)\\n{\\n    GameOver();\\n}\\n\\nif (isPlayerOnObject)\\n{\\n    fireTimer += Time.deltaTime;\\n    if (Input.GetKeyDown(KeyCode.K) && fireTimer > fireRate)\\n    {\\n        fireTimer = 0;\\n        laserLine.SetPosition(0, laserOrigin.position);\\n        Vector3 rayOrigin = playerCamera.ViewportToWorldPoint(new Vector3(0.5f, 0.5f, 0));\\n        RaycastHit hit;\\n        if (Physics.Raycast(rayOrigin, playerCamera.transform.forward, out hit, gunRange))\\n        {\\n            if (hit.collider.gameObject == Object)\\n            {\\n                audioManager.PlaySFX(audioManager.swordSound);\\n                laserLine.SetPosition(1, hit.point);\\n                audioManager.PlaySFX(audioManager.disappearSound);\\n                Destroy(hit.transform.gameObject);\\n                Object = null; // Destroyed object\\n            }\\n            else\\n            {\\n                laserLine.SetPosition(1, rayOrigin + (playerCamera.transform.forward * gunRange));\\n            }\\n        }\\n    }\\n}\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null}}],\"created\":1740126025,\"model\":\"gpt-3.5-turbo-0125\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":null,\"usage\":{\"completion_tokens\":1286,\"prompt_tokens\":518,\"total_tokens\":1804,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
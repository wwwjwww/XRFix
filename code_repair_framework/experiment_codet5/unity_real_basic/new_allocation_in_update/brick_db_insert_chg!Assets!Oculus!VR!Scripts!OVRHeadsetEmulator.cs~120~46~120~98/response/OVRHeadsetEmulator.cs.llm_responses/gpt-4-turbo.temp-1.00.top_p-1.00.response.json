"{\"id\":\"chatcmpl-Bq1wBJiGdVwi49HPx6lU4VqVDYXIo\",\"choices\":[{\"finish_reason\":\"stop\",\"index\":0,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class OVRHeadsetEmulator : MonoBehaviour {\\n\\tpublic enum OpMode\\n\\t{\\n\\t\\tOff,\\n\\t\\tEditorOnly,\\n\\t\\tAlwaysOn\\n\\t}\\n\\n\\tpublic OpMode opMode = OpMode.EditorOnly;\\n\\tpublic bool resetHmdPoseOnRelease = true;\\n\\tpublic bool resetHmdPoseByMiddleMouseButton = true;\\n\\n\\tpublic KeyCode[] activateKeys = new KeyCode[] { KeyCode.LeftControl, KeyCode.RightControl };\\n\\n\\tpublic KeyCode[] pitchKeys = new KeyCode[] { KeyCode.LeftAlt, KeyCode.RightAlt };\\n\\n\\tOVRManager manager;\\n\\n\\tconst float MOUSE_SCALE_X = -2.0f;\\n\\tconst float MOUSE_SCALE_X_PITCH = -2.0f;\\n\\tconst float MOUSE_SCALE_Y = 2.0f;\\n\\tconst float MOUSE_SCALE_HEIGHT = 1.0f;\\n\\tconst float MAX_ROLL = 85.0f;\\n\\n\\tprivate bool lastFrameEmulationActivated = false;\\n\\n\\tprivate Vector3 recordedHeadPoseRelativeOffsetTranslation;\\n\\tprivate Vector3 recordedHeadPoseRelativeOffsetRotation;\\n\\tprivate Vector3 emulatedAngles; // Reuse this instead of allocating new instances\\n\\n\\tprivate bool hasSentEvent = false;\\n\\tprivate bool emulatorHasInitialized = false;\\n\\n\\tprivate CursorLockMode previousCursorLockMode = CursorLockMode.None;\\n\\n\\n\\tvoid Start () {\\n\\t\\temulatedAngles = Vector3.zero; // Initialize or reset the vector here if necessary\\n\\t}\\n\\n\\tvoid Update () {\\n\\t\\tif (!emulatorHasInitialized)\\n\\t\\t{\\n\\t\\t\\tif (OVRManager.OVRManagerinitialized)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tmanager = OVRManager.instance;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\temulatorHasInitialized = true;\\n\\t\\t\\t\\tlastFrameEmulationActivated = false;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tbool emulationActivated = IsEmulationActivated();\\n\\t\\tif (emulationActivated)\\n\\t\\t{\\n\\t\\t\\tif (!lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tCursor.lockState = CursorLockMode.Locked;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!lastFrameEmulationActivated && resetHmdPoseOnRelease)\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = recordedHeadPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = recordedHeadPoseRelativeOffsetRotation;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (resetHmdPoseByMiddleMouseButton && Input.GetMouseButton(2))\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tVector3 emulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\tfloat deltaMouseScrollWheel = Input.GetAxis(\\\"Mouse ScrollWheel\\\");\\n\\t\\t\\t\\tfloat emulatedHeight = deltaMouseScrollWheel * MOUSE_SCALE_HEIGHT;\\n\\t\\t\\t\\temulatedTranslation.y += emulatedHeight;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = emulatedTranslation;\\n\\n\\t\\t\\t\\tfloat deltaX = Input.GetAxis(\\\"Mouse X\\\");\\n\\t\\t\\t\\tfloat deltaY = Input.GetAxis(\\\"Mouse Y\\\");\\n\\n\\t\\t\\t\\temulatedAngles.x = manager.headPoseRelativeOffsetRotation.x;\\n\\t\\t\\t\\temulatedAngles.y = manager.headPoseRelativeOffsetRotation.y;\\n\\t\\t\\t\\temulatedAngles.z = manager.headPoseRelativeOffsetRotation.z;\\n\\t\\t\\t\\tif (IsTweakingPitch())\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedAngles.z += deltaX * MOUSE_SCALE_X_PITCH;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedAngles.x += deltaY * MOUSE_SCALE_Y;\\n\\t\\t\\t\\t\\temulatedAngles.y += deltaX * MOUSE_SCALE_X;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = emulatedAngles;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!hasSentEvent)\\n\\t\\t\\t{\\n\\t\\t\\t\\tOVRPlugin.SendEvent(\\\"headset_emulator\\\", \\\"activated\\\");\\n\\t\\t\\t\\thasSentEvent = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tif (lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tCursor.lockState = previousCursorLockMode;\\n\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\n\\t\\t\\t\\tif (resetHmdPoseOnRelease)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tlastFrameEmulationActivated = emulationActivated;\\n\\t}\\n\\n\\tprivate bool IsEmulationActivated()\\n\\t{\\n\\t\\t// Implement the logic to determine if emulation is activated\\n\\t\\treturn false;\\n\\t}\\n\\n\\tprivate bool IsTweakingPitch()\\n\\t{\\n\\t\\t// Implement the logic to determine if tweaking pitch\\n\\t\\treturn false;\\n\\t}\\n}\\n```\\n\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":1,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nVector3 emulatedAngles;\\n// Initialize the Vector3 outside the Update method to avoid allocation in each frame.\\nvoid Start() {\\n\\temulatedAngles = Vector3.zero;\\n}\\n\\nvoid Update() {\\n\\tif (!emulatorHasInitialized) {\\n\\t\\tif (OVRManager.OVRManagerinitialized) {\\n\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\tmanager = OVRManager.instance;\\n\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\temulatorHasInitialized = true;\\n\\t\\t\\tlastFrameEmulationActivated = false;\\n\\t\\t} else\\n\\t\\t\\treturn;\\n\\t}\\n\\tbool emulationActivated = IsEmulationActivated();\\n\\tif (emulationActivated) {\\n\\t\\tif (!lastFrameEmulationActivated) {\\n\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\tCursor.lockState = CursorLockMode.Locked;\\n\\t\\t}\\n\\n\\t\\tif (!lastFrameEmulationActivated && resetHmdPoseOnRelease) {\\n\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = recordedHeadPoseRelativeOffsetTranslation;\\n\\t\\t\\tmanager.headPoseRelativeOffsetRotation = recordedHeadPoseRelativeOffsetRotation;\\n\\t\\t}\\n\\n\\t\\tif (resetHmdPoseByMiddleMouseButton && Input.GetMouseButton(2)) {\\n\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t} else {\\n\\t\\t\\tVector3 emulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\tfloat deltaMouseScrollWheel = Input.GetAxis(\\\"Mouse ScrollWheel\\\");\\n\\t\\t\\tfloat emulatedHeight = deltaMouseScrollWheel * MOUSE_SCALE_HEIGHT;\\n\\t\\t\\temulatedTranslation.y += emulatedHeight;\\n\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = emulatedTranslation;\\n\\n\\t\\t\\tfloat deltaX = Input.GetAxis(\\\"Mouse X\\\");\\n\\t\\t\\tfloat deltaY = Input.GetAxis(\\\"Mouse Y\\\");\\n\\n\\t\\t\\temulatedAngles.Set(manager.headPoseRelativeOffsetRotation.x, manager.headPoseRelativeOffsetRotation.y, manager.headPoseRelativeOffsetRotation.z);\\n\\t\\t\\tfloat emulatedRoll = emulatedAngles.x;\\n\\t\\t\\tfloat emulatedYaw = emulatedAngles.y;\\n\\t\\t\\tfloat emulatedPitch = emulatedAngles.z;\\n\\t\\t\\tif (IsTweakingPitch()) {\\n\\t\\t\\t\\temulatedPitch += deltaX * MOUSE_SCALE_X_PITCH;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\temulatedRoll += deltaY * MOUSE_SCALE_Y;\\n\\t\\t\\t\\temulatedYaw += deltaX * MOUSE_SCALE_X;\\n\\t\\t\\t}\\n\\n\\t\\t\\tmanager.headPoseRelativeOffsetRotation = new Vector3(emulatedRoll, emulatedYaw, emulatedPitch);\\n\\t\\t}\\n\\n\\t\\tif (!hasSentEvent) {\\n\\t\\t\\tOVRPlugin.SendEvent(\\\"headset_emulator\\\", \\\"activated\\\");\\n\\t\\t\\thasSentEvent = true;\\n\\t\\t}\\n\\t} else {\\n\\t\\tif (lastFrameEmulationActivated) {\\n\\t\\t\\tCursor.lockState = previousCursorLockMode;\\n\\n\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\n\\t\\t\\tif (resetHmdPoseOnRelease) {\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tlastFrameEmulationActivated = emulationActivated;\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":2,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\npublic class OVRHeadsetEmulator : MonoBehaviour {\\n\\t// Other class members...\\n\\n\\tprivate Vector3 emulatedTranslation;\\n\\tprivate Vector3 emulatedAngles;\\n\\t\\n\\tvoid Start () {\\n\\t\\t// Initialization code...\\n\\t}\\n\\n\\tvoid Update () {\\n\\t\\tif (!emulatorHasInitialized)\\n\\t\\t{\\n\\t\\t\\tif (OVRManager.OVRManagerinitialized)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tmanager = OVRManager.instance;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\temulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\temulatedAngles = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\temulatorHasInitialized = true;\\n\\t\\t\\t\\tlastFrameEmulationActivated = false;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tbool emulationActivated = IsEmulationActivated();\\n\\t\\tif (emulationActivated)\\n\\t\\t{\\n\\t\\t\\tif (!lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tCursor.lockState = CursorLockMode.Locked;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!lastFrameEmulationActivated && resetHmdPoseOnRelease)\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = recordedHeadPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = recordedHeadPoseRelativeOffsetRotation;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (resetHmdPoseByMiddleMouseButton && Input.GetMouseButton(2))\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\temulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\tfloat deltaMouseScrollWheel = Input.GetAxis(\\\"Mouse ScrollWheel\\\");\\n\\t\\t\\t\\tfloat emulatedHeight = deltaMouseScrollWheel * MOUSE_SCALE_HEIGHT;\\n\\t\\t\\t\\temulatedTranslation.y += emulatedHeight;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = emulatedTranslation;\\n\\n\\t\\t\\t\\tfloat deltaX = Input.GetAxis(\\\"Mouse X\\\");\\n\\t\\t\\t\\tfloat deltaY = Input.GetAxis(\\\"Mouse Y\\\");\\n\\n\\t\\t\\t\\temulatedAngles = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\tfloat emulatedRoll = emulatedAngles.x;\\n\\t\\t\\t\\tfloat emulatedYaw = emulatedAngles.y;\\n\\t\\t\\t\\tfloat emulatedPitch = emulatedAngles.z;\\n\\t\\t\\t\\tif (IsTweakingPitch())\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedPitch += deltaX * MOUSE_SCALE_X_PITCH;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedRoll += deltaY * MOUSE_SCALE_Y;\\n\\t\\t\\t\\t\\temulatedYaw += deltaX * MOUSE_SCALE_X;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\temulatedAngles.x = emulatedRoll;\\n\\t\\t\\t\\temulatedAngles.y = emulatedYaw;\\n\\t\\t\\t\\temulatedAngles.z = emulatedPitch;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = emulatedAngles;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!hasSentEvent)\\n\\t\\t\\t{\\n\\t\\t\\t\\tOVRPlugin.SendEvent(\\\"headset_emulator\\\", \\\"activated\\\");\\n\\t\\t\\t\\thasSentEvent = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tif (lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tCursor.lockState = previousCursorLockMode;\\n\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\n\\t\\t\\t\\tif (resetHmdPoseOnRelease)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tlastFrameEmulationActivated = emulationActivated;\\n\\t}\\n\\t\\n\\t// Other methods...\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":3,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\nusing System.Collections;\\nusing System.Collections.Generic;\\nusing UnityEngine;\\n\\npublic class OVRHeadsetEmulator : MonoBehaviour {\\n    public enum OpMode\\n    {\\n        Off,\\n        EditorOnly,\\n        AlwaysOn\\n    }\\n\\n    public OpMode opMode = OpMode.EditorOnly;\\n    public bool resetHmdPoseOnRelease = true;\\n    public bool resetHmdPoseByMiddleMouseButton = true;\\n\\n    public KeyCode[] activateKeys = new KeyCode[] { KeyCode.LeftControl, KeyCode.RightControl };\\n\\n    public KeyCode[] pitchKeys = new KeyCode[] { KeyCode.LeftAlt, KeyCode.RightAlt };\\n\\n    OVRManager manager;\\n\\n    const float MOUSE_SCALE_X = -2.0f;\\n    const float MOUSE_SCALE_X_PITCH = -2.0f;\\n    const float MOUSE_SCALE_Y = 2.0f;\\n    const float MOUSE_SCALE_HEIGHT = 1.0f;\\n    const float MAX_ROLL = 85.0f;\\n\\n    private bool lastFrameEmulationActivated = false;\\n\\n    private Vector3 recordedHeadPoseRelativeOffsetTranslation;\\n    private Vector3 recordedHeadPoseRelativeOffsetRotation;\\n\\n    private bool hasSentEvent = false;\\n    private bool emulatorHasInitialized = false;\\n\\n    private CursorLockMode previousCursorLockMode = CursorLockMode.None;\\n    \\n    // Moved allocation outside Update()\\n    private Vector3 emulatedRotation = Vector3.zero;\\n\\n    void Start () {\\n    }\\n\\n    void Update () {\\n        if (!emulatorHasInitialized)\\n        {\\n            if (OVRManager.OVRManagerinitialized)\\n            {\\n                previousCursorLockMode = Cursor.lockState;\\n                manager = OVRManager.instance;\\n                recordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n                recordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n                emulatorHasInitialized = true;\\n                lastFrameEmulationActivated = false;\\n            }\\n            else\\n                return;\\n        }\\n        bool emulationActivated = IsEmulationActivated();\\n        if (emulationActivated)\\n        {\\n            if (!lastFrameEmulationActivated)\\n            {\\n                previousCursorLockMode = Cursor.lockState;\\n                Cursor.lockState = CursorLockMode.Locked;\\n            }\\n\\n            if (!lastFrameEmulationActivated && resetHmdPoseOnRelease)\\n            {\\n                manager.headPoseRelativeOffsetTranslation = recordedHeadPoseRelativeOffsetTranslation;\\n                manager.headPoseRelativeOffsetRotation = recordedHeadPoseRelativeOffsetRotation;\\n            }\\n\\n            if (resetHmdPoseByMiddleMouseButton && Input.GetMouseButton(2))\\n            {\\n                manager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n                manager.headPoseRelativeOffsetRotation = Vector3.zero;\\n            }\\n            else\\n            {\\n                Vector3 emulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n                float deltaMouseScrollWheel = Input.GetAxis(\\\"Mouse ScrollWheel\\\");\\n                float emulatedHeight = deltaMouseScrollWheel * MOUSE_SCALE_HEIGHT;\\n                emulatedTranslation.y += emulatedHeight;\\n                manager.headPoseRelativeOffsetTranslation = emulatedTranslation;\\n                \\n                float deltaX = Input.GetAxis(\\\"Mouse X\\\");\\n                float deltaY = Input.GetAxis(\\\"Mouse Y\\\");\\n\\n                Vector3 currentRotation = manager.headPoseRelativeOffsetRotation;\\n                emulatedRotation.Set(currentRotation.x, currentRotation.y, currentRotation.z);\\n                \\n                float emulatedRoll = emulatedRotation.x;\\n                float emulatedYaw = emulatedRotation.y;\\n                float emulatedPitch = emulatedRotation.z;\\n                if (IsTweakingPitch())\\n                {\\n                    emulatedPitch += deltaX * MOUSE_SCALE_X_PITCH;\\n                }\\n                else\\n                {\\n                    emulatedRoll += deltaY * MOUSE_SCALE_Y;\\n                    emulatedYaw += deltaX * MOUSE_SCALE_X;\\n                }\\n                \\n                emulatedRotation.Set(emulatedRoll, emulatedYaw, emulatedPitch);\\n                manager.headPoseRelativeOffsetRotation = emulatedRotation;\\n            }\\n\\n            if (!hasSentEvent)\\n            {\\n                OVRPlugin.SendEvent(\\\"headset_emulator\\\", \\\"activated\\\");\\n                hasSentEvent = true;\\n            }\\n        }\\n        else\\n        {\\n            if (lastFrameEmulationActivated)\\n            {\\n                Cursor.lockState = previousCursorLockMode;\\n                recordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n                recordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\n                if (resetHmdPoseOnRelease)\\n                {\\n                    manager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n                    manager.headPoseRelativeOffsetRotation = Vector3.zero;\\n                }\\n            }\\n        }\\n        lastFrameEmulationActivated = emulationActivated;\\n    }\\n\\n    private bool IsEmulationActivated() {\\n        // Dummy method for demonstration purposes\\n        return true;\\n    }\\n\\n    private bool IsTweakingPitch() {\\n        // Dummy method for demonstration purposes\\n        return true;\\n    }\\n}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}},{\"finish_reason\":\"stop\",\"index\":4,\"logprobs\":null,\"message\":{\"content\":\"```csharp\\n\\tVector3 updatedHeadPoseRotation = Vector3.zero;\\n\\n\\tvoid Update() {\\n\\t\\tif (!emulatorHasInitialized)\\n\\t\\t{\\n\\t\\t\\tif (OVRManager.OVRManagerinitialized)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tmanager = OVRManager.instance;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\temulatorHasInitialized = true;\\n\\t\\t\\t\\tlastFrameEmulationActivated = false;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t\\treturn;\\n\\t\\t}\\n\\t\\tbool emulationActivated = IsEmulationActivated();\\n\\t\\tif (emulationActivated)\\n\\t\\t{\\n\\t\\t\\tif (!lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tpreviousCursorLockMode = Cursor.lockState;\\n\\t\\t\\t\\tCursor.lockState = CursorLockMode.Locked;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!lastFrameEmulationActivated && resetHmdPoseOnRelease)\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = recordedHeadPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = recordedHeadPoseRelativeOffsetRotation;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (resetHmdPoseByMiddleMouseButton && Input.GetMouseButton(2))\\n\\t\\t\\t{\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t}\\n\\t\\t\\telse\\n\\t\\t\\t{\\n\\t\\t\\t\\tVector3 emulatedTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\tfloat deltaMouseScrollWheel = Input.GetAxis(\\\"Mouse ScrollWheel\\\");\\n\\t\\t\\t\\tfloat emulatedHeight = deltaMouseScrollWheel * MOUSE_SCALE_HEIGHT;\\n\\t\\t\\t\\temulatedTranslation.y += emulatedHeight;\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = emulatedTranslation;\\n\\n\\t\\t\\t\\tfloat deltaX = Input.GetAxis(\\\"Mouse X\\\");\\n\\t\\t\\t\\tfloat deltaY = Input.GetAxis(\\\"Mouse Y\\\");\\n\\n\\t\\t\\t\\tVector3 emulatedAngles = manager.headPoseRelativeOffsetRotation;\\n\\t\\t\\t\\tfloat emulatedRoll = emulatedAngles.x;\\n\\t\\t\\t\\tfloat emulatedYaw = emulatedAngles.y;\\n\\t\\t\\t\\tfloat emulatedPitch = emulatedAngles.z;\\n\\t\\t\\t\\tif (IsTweakingPitch())\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedPitch += deltaX * MOUSE_SCALE_X_PITCH;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\telse\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\temulatedRoll += deltaY * MOUSE_SCALE_Y;\\n\\t\\t\\t\\t\\temulatedYaw += deltaX * MOUSE_SCALE_X;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tupdatedHeadPoseRotation.Set(emulatedRoll, emulatedYaw, emulatedPitch);\\n\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = updatedHeadPoseRotation;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (!hasSentEvent)\\n\\t\\t\\t{\\n\\t\\t\\t\\tOVRPlugin.SendEvent(\\\"headset_emulator\\\", \\\"activated\\\");\\n\\t\\t\\t\\thasSentEvent = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\telse\\n\\t\\t{\\n\\t\\t\\tif (lastFrameEmulationActivated)\\n\\t\\t\\t{\\n\\t\\t\\t\\tCursor.lockState = previousCursorLockMode;\\n\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetTranslation = manager.headPoseRelativeOffsetTranslation;\\n\\t\\t\\t\\trecordedHeadPoseRelativeOffsetRotation = manager.headPoseRelativeOffsetRotation;\\n\\n\\t\\t\\t\\tif (resetHmdPoseOnRelease)\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetTranslation = Vector3.zero;\\n\\t\\t\\t\\t\\tmanager.headPoseRelativeOffsetRotation = Vector3.zero;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tlastFrameEmulationActivated = emulationActivated;\\n\\t}\\n```\",\"refusal\":null,\"role\":\"assistant\",\"audio\":null,\"function_call\":null,\"tool_calls\":null,\"annotations\":[]}}],\"created\":1751740203,\"model\":\"gpt-4o-2024-08-06\",\"object\":\"chat.completion\",\"service_tier\":\"default\",\"system_fingerprint\":\"fp_07871e2ad8\",\"usage\":{\"completion_tokens\":4143,\"prompt_tokens\":1157,\"total_tokens\":5300,\"completion_tokens_details\":{\"accepted_prediction_tokens\":0,\"audio_tokens\":0,\"reasoning_tokens\":0,\"rejected_prediction_tokens\":0},\"prompt_tokens_details\":{\"audio_tokens\":0,\"cached_tokens\":0}}}"
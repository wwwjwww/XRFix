{
    "id": "chatcmpl-9wL4FqPmX2w3aiiI9zw88kYbK2JRi",
    "object": "chat.completion",
    "created": 1723691035,
    "model": "gpt-4",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "```csharp\n\t\t\tOVRPlugin.ControllerState4 state = currentState;\n\t\t\tstate.ConnectedControllers = (uint)Controller.Gamepad;\n\t\t\tstate.Buttons = 0;\n\t\t\tstate.Touches = 0;\n\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.A)) state.Buttons |= (uint)RawButton.A;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.B)) state.Buttons |= (uint)RawButton.B;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.X)) state.Buttons |= (uint)RawButton.X;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Y)) state.Buttons |= (uint)RawButton.Y;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Up)) state.Buttons |= (uint)RawButton.DpadUp;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Down)) state.Buttons |= (uint)RawButton.DpadDown;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Left)) state.Buttons |= (uint)RawButton.DpadLeft;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Right)) state.Buttons |= (uint)RawButton.DpadRight;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Start)) state.Buttons |= (uint)RawButton.Start;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.Back)) state.Buttons |= (uint)RawButton.Back;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.LStick)) state.Buttons |= (uint)RawButton.LThumbstick;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.RStick)) state.Buttons |= (uint)RawButton.RThumbstick;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.LeftShoulder)) state.Buttons |= (uint)RawButton.LShoulder;\n\t\t\tif (OVR_GamepadController_GetButton((int)ButtonGPC.RightShoulder)) state.Buttons |= (uint)RawButton.RShoulder;\n\n\t\t\tstate.LThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.LeftXAxis);\n\t\t\tstate.LThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.LeftYAxis);\n\t\t\tstate.RThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.RightXAxis);\n\t\t\tstate.RThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.RightYAxis);\n\t\t\tstate.LIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.LeftTrigger);\n\t\t\tstate.RIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.RightTrigger);\n\n\t\t\tpreviousState = currentState;\n\t\t\tcurrentState = state;\n\n\t\t\treturn (Controller)currentState.ConnectedControllers;\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 1,
            "message": {
                "role": "assistant",
                "content": "```csharp\npublic override Controller Update()\n{\n\tif (!initialized)\n\t{\n\t\treturn Controller.None;"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 2,
            "message": {
                "role": "assistant",
                "content": "```csharp\nprivate OVRPlugin.ControllerState4 state = new OVRPlugin.ControllerState4();\n\npublic override Controller Update()\n{\n\tif (!initialized)\n\t{\n\t\treturn Controller.None;"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 3,
            "message": {
                "role": "assistant",
                "content": "```csharp\npublic override Controller Update()\n{\n  if (!initialized)\n  {\n      return Controller.None;\n  }\n\n  OVRPlugin.ControllerState4 state;\n\n  state.ConnectedControllers = (uint)OVRPlugin.GetConnectedControllers();\n  state.Buttons = 0;\n  state.Touches = 0;\n  state.NearTouches = 0;\n  state.LIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.LeftTrigger);\n  state.RIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.RightTrigger);\n  state.LHandTrigger = 0;\n  state.RHandTrigger = 0;\n  state.LThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.LeftXAxis);\n  state.LThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.LeftYAxis);\n  state.RThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.RightXAxis);\n  state.RThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.RightYAxis);\n  state.LTouchpad.x = 0;\n  state.LTouchpad.y = 0;\n  state.RTouchpad.x = 0;\n  state.RTouchpad.y = 0;\n  state.LBatteryPercentRemaining = 0;\n  state.RBatteryPercentRemaining = 0;\n  state.LRecenterCount = 0;\n  state.RRecenterCount = 0;\n  state.RawButtonState = 0;\n  state.RawTouchState = 0;\n\n  for (int i = 0; i < (int)ButtonGPC.Max; i++)\n  {\n      if (OVR_GamepadController_GetButton(i))\n      {\n          switch ((ButtonGPC)i)\n          {\n          case ButtonGPC.A: state.Buttons |= (uint)RawButton.A; break;\n          case ButtonGPC.B: state.Buttons |= (uint)RawButton.B; break;\n          case ButtonGPC.X: state.Buttons |= (uint)RawButton.X; break;\n          case ButtonGPC.Y: state.Buttons |= (uint)RawButton.Y; break;\n          case ButtonGPC.Up: state.Buttons |= (uint)RawButton.DpadUp; break;\n          case ButtonGPC.Down: state.Buttons |= (uint)RawButton.DpadDown; break;\n          case ButtonGPC.Left: state.Buttons |= (uint)RawButton.DpadLeft; break;\n          case ButtonGPC.Right: state.Buttons |= (uint)RawButton.DpadRight; break;\n          case ButtonGPC.Start: state.Buttons |= (uint)RawButton.Start; break;\n          case ButtonGPC.Back: state.Buttons |= (uint)RawButton.Back; break;\n          case ButtonGPC.LStick: state.Buttons |= (uint)RawButton.LThumbstick; break;\n          case ButtonGPC.RStick: state.Buttons |= (uint)RawButton.RThumbstick; break;\n          case ButtonGPC.LeftShoulder: state.Buttons |= (uint)RawButton.LShoulder; break;\n          case ButtonGPC.RightShoulder: state.Buttons |= (uint)RawButton.RShoulder; break;\n          }\n      }\n  }\n\n  previousState = currentState;\n  currentState = state;\n\n  return ((Controller)currentState.ConnectedControllers & controllerType);\n}\n```\n"
            },
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "index": 4,
            "message": {
                "role": "assistant",
                "content": "```csharp\npublic override Controller Update()\n{\n\tif (!initialized)\n\t{\n\t\treturn Controller.None;"
            },
            "logprobs": null,
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 23416,
        "completion_tokens": 1357,
        "total_tokens": 24773
    },
    "system_fingerprint": "fp_811936bd4f"
}
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using UnityEngine;
using Node = UnityEngine.XR.XRNode;

public static class OVRInput
{
    private static OVRPlugin.ControllerState4 currentState = new OVRPlugin.ControllerState4();
    private static OVRPlugin.ControllerState4 previousState;
    private static bool initialized = true;
    private const float AXIS_AS_BUTTON_THRESHOLD = 0.5f;
    private static Controller controllerType = Controller.Gamepad; // Set appropriately

    public static Controller Update()
    {
        if (!initialized)
        {
            return Controller.None;
        }

        bool result = OVR_GamepadController_Update();

        if (result)
            currentState.ConnectedControllers = (uint)Controller.Gamepad;

        if (OVR_GamepadController_GetButton((int)ButtonGPC.A))
            currentState.Buttons |= (uint)RawButton.A;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.B))
            currentState.Buttons |= (uint)RawButton.B;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.X))
            currentState.Buttons |= (uint)RawButton.X;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Y))
            currentState.Buttons |= (uint)RawButton.Y;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Up))
            currentState.Buttons |= (uint)RawButton.DpadUp;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Down))
            currentState.Buttons |= (uint)RawButton.DpadDown;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Left))
            currentState.Buttons |= (uint)RawButton.DpadLeft;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Right))
            currentState.Buttons |= (uint)RawButton.DpadRight;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Start))
            currentState.Buttons |= (uint)RawButton.Start;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.Back))
            currentState.Buttons |= (uint)RawButton.Back;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.LStick))
            currentState.Buttons |= (uint)RawButton.LThumbstick;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.RStick))
            currentState.Buttons |= (uint)RawButton.RThumbstick;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.LeftShoulder))
            currentState.Buttons |= (uint)RawButton.LShoulder;
        if (OVR_GamepadController_GetButton((int)ButtonGPC.RightShoulder))
            currentState.Buttons |= (uint)RawButton.RShoulder;

        currentState.LThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.LeftXAxis);
        currentState.LThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.LeftYAxis);
        currentState.RThumbstick.x = OVR_GamepadController_GetAxis((int)AxisGPC.RightXAxis);
        currentState.RThumbstick.y = OVR_GamepadController_GetAxis((int)AxisGPC.RightYAxis);
        currentState.LIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.LeftTrigger);
        currentState.RIndexTrigger = OVR_GamepadController_GetAxis((int)AxisGPC.RightTrigger);

        if (currentState.LIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LIndexTrigger;
        if (currentState.LHandTrigger >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LHandTrigger;
        if (currentState.LThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LThumbstickUp;
        if (currentState.LThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LThumbstickDown;
        if (currentState.LThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LThumbstickLeft;
        if (currentState.LThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.LThumbstickRight;

        if (currentState.RIndexTrigger >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RIndexTrigger;
        if (currentState.RHandTrigger >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RHandTrigger;
        if (currentState.RThumbstick.y >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RThumbstickUp;
        if (currentState.RThumbstick.y <= -AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RThumbstickDown;
        if (currentState.RThumbstick.x <= -AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RThumbstickLeft;
        if (currentState.RThumbstick.x >= AXIS_AS_BUTTON_THRESHOLD)
            currentState.Buttons |= (uint)RawButton.RThumbstickRight;

        previousState = currentState;

        return ((Controller)currentState.ConnectedControllers & controllerType);
    }

    private static bool OVR_GamepadController_GetButton(int button) {
        // Simulated method for illustration purposes
        return false;
    }

    private static float OVR_GamepadController_GetAxis(int axis) {
        // Simulated method for illustration purposes
        return 0.0f;
    }

    private static bool OVR_GamepadController_Update() {
        // Simulated method for illustration purposes
        return true;
    }
}

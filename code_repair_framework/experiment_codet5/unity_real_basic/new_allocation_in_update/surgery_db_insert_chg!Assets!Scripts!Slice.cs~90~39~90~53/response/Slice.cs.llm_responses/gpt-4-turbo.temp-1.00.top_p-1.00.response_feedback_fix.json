using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Slice : MonoBehaviour
{
    private Mesh mesh;
    private MeshCollider meshCollider;
    private List<int> triangles;

    protected Rigidbody rb2;
    protected GameObject gobj7;
    protected GameObject a7;
    protected GameObject gobj;

    private float timeLimit = 5f;
    private float timer = 0f;
    private bool instantiate_gobj = false;

    void Start()
    {
        var smr = gameObject.GetComponent<SkinnedMeshRenderer>();
        if (smr != null)
        {
            mesh = (Mesh)Instantiate(smr.sharedMesh);
            smr.sharedMesh = mesh;
        }

        meshCollider = gameObject.GetComponent<MeshCollider>();
        if (meshCollider != null)
        {
            meshCollider.sharedMesh = mesh;
        }

        if (mesh != null)
        {
            triangles = new List<int>(mesh.triangles);
        }
    }

    void Update()
    {
        if (rb2 != null)
        {
            rb2.transform.Rotate(0, 40, 0);
        }

        timer += Time.deltaTime;

        if (!instantiate_gobj && timer >= timeLimit)
        {
            a7 = Instantiate(gobj7);
            timer = 0;
            instantiate_gobj = true;
        }
        
        if (instantiate_gobj && timer >= timeLimit)
        {
            Dispose(a7);
            timer = 0;
            instantiate_gobj = false;
        }

        if (Input.GetMouseButton(0))
        {
            RaycastHit hit;
            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);

            if (meshCollider != null && meshCollider.Raycast(ray, out hit, Mathf.Infinity))
            {
                if (triangles != null)
                {
                    int startIndex = hit.triangleIndex * 3;
                    triangles.RemoveRange(startIndex, 3);
                    mesh.triangles = triangles.ToArray();
                    meshCollider.sharedMesh = mesh;
                }
            }
        }
    }

    public void Dispose(GameObject obj7)
    {
        if (obj7 != null)
        {
            Destroy(obj7);
        }
    }

    public void DisposeObj()
    {
        Destroy(gameObject);
    }
}

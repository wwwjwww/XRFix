{
  "input_code": "        private float FindProjectileCollision(out RaycastHit hitInfo)\n        {\n            float timeStep = arcDuration / segmentCount;\n            float segmentStartTime = 0.0f;\n\n            hitInfo = new RaycastHit();\n\n            Vector3 segmentStartPos = GetArcPositionAtTime(segmentStartTime);\n            for (int i = 0; i < segmentCount; ++i)\n            {\n                float segmentEndTime = segmentStartTime + timeStep;\n                Vector3 segmentEndPos = GetArcPositionAtTime(segmentEndTime);\n\n                if (Physics.Linecast(segmentStartPos, segmentEndPos, out hitInfo, traceLayerMask))\n                {\n#if false\n                    if (hitInfo.collider.GetComponent<IgnoreTeleportTrace>() == null)\n#else\n<BUGS>                    if (true)\n<BUGE>#endif\n                    {\n#if false\n                        Util.DrawCross(hitInfo.point, Color.red, 0.5f);\n#endif\n                        float segmentDistance = Vector3.Distance(segmentStartPos, segmentEndPos);\n                        float hitTime = segmentStartTime + (timeStep * (hitInfo.distance / segmentDistance));\n                        return hitTime;\n                    }\n                }\n\n                segmentStartTime = segmentEndTime;\n                segmentStartPos = segmentEndPos;\n            }\n\n            return float.MaxValue;\n        }\n",
  "model_outputs": [
    {
      "response_id": 1,
      "output": "<FIXS> <FIXE> <FIXS> if (DEBUG) { System.out.println(\"DEBUG - \" + hitInfo.point); System.out.println(\"DEBUG - \" + hitInfo.distance); System.out.println(\"DEBUG - \" + hitInfo.distance); } <FIXE>"
    },
    {
      "response_id": 2,
      "output": "<FIXS> <FIXE> <FIXS> if (DEBUG) { System.out.println(\"DEBUG - \" + hitInfo.point); System.out.println(\"DEBUG - \" + hitInfo.distance); } <FIXE>"
    },
    {
      "response_id": 3,
      "output": "<FIXS> if (hitInfo.isCut)\n<FIXE> <FIXS> <FIXE>"
    },
    {
      "response_id": 4,
      "output": "<FIXS> if (hitInfo.ignoreTeleportTrace)\n<FIXE>"
    },
    {
      "response_id": 5,
      "output": "<FIXS>                    if (true)\n<FIXE> <FIXS> <FIXE>"
    }
  ],
  "model_path": "Salesforce/codet5-base",
  "parameters": {
    "max_source_length": 512,
    "max_target_length": 256,
    "beam_size": 10,
    "num_responses": 5,
    "diversity_penalty": 1.0
  }
}